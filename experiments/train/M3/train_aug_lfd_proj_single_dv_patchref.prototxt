#-----Generate random image index for training 

layer {
  name: "h5"
  type: "HDF5Data"
  top: "image_index"
  top: "bbx"
  top: "gt_joint_3d_global"
  
  include {
    phase: TRAIN
  }
  hdf5_data_param {
    source: "../train10fold.txt"
    batch_size: 4
  }
}

layer {
  name: "h5"
  type: "HDF5Data"
  top: "image_index"
  top: "bbx"
  top: "gt_joint_3d_global"
  
  include {
    phase: TEST
  }
  hdf5_data_param {
    source: "../test10fold.txt"
    batch_size: 6
  }
}




#-----Slice to bbx_x1 bbx_y1 bbx_x2 bbx_y2
layer {
  name: "slice_bbx"
  type: "Slice"
  bottom: "bbx"
  top: "bbx_x1"
  top: "bbx_y1"
  top: "bbx_x2"
  top: "bbx_y2"
  slice_param {
     axis: 1
	 slice_point: 1
	 slice_point: 2
	 slice_point: 3
  }  
}


layer {
  bottom: "bbx_x1"
  bottom: "bbx_x1"
  bottom: "bbx_x2"
  top: "mmcp_u_add"
  name: "mmcp_u_add"
  type: "Eltwise"
}

layer {
  bottom: "mmcp_u_add"
  top: "mmcp_u"
  name: "mmcp_u"
  type: "ScaleVector"
  scale_vector_param {
    scale_factor: 0.5
  }
}

layer {
  bottom: "bbx_y1"
  bottom: "bbx_y2"
  top: "mmcp_v_add"
  name: "mmcp_v_add"
  type: "Eltwise"
}

layer {
  bottom: "mmcp_v_add"
  top: "mmcp_v"
  name: "mmcp_v"
  type: "ScaleVector"
  scale_vector_param {
    scale_factor: 0.5
  }
}

#----- Read mmcp
#layer {
#  name: "read_mmcp"
#  type: "ReadBlobFromFileIndexing"
#  bottom: "image_index"
#  top: "mmcp"
#  read_blob_from_file_indexing_param {
#     file_prefix: "../../training/mmcp/"
#	 num_to_read: 2
#  }
#}

#-----Slice to mmcp.u mmcp.v
#layer {
#  name: "slice_mmcp"
#  type: "Slice"
#  bottom: "mmcp"
#  top: "mmcp_u"
#  top: "mmcp_v"
#  slice_param { 
#     axis: 1
#	 slice_point: 1
#  }  
#}




layer {
  type: "DeepHandModelGetHands19ChaDepth"
  bottom: "bbx_x1"
  bottom: "bbx_y1"
  bottom: "bbx_x2"
  bottom: "bbx_y2"
  bottom: "mmcp_u"
  bottom: "mmcp_v"
  bottom: "image_index"
  top: "depth"
  top: "ext_bbx_x1"
  top: "ext_bbx_y1"
  top: "ext_bbx_x2"
  top: "ext_bbx_y2"
  top: "avgX"
  top: "avgY"
  top: "avgZ"
  top: "avgU"
  top: "avgV"
  transform_param {
     crop_size: 256
  }
  read_blob_from_file_indexing_param {
     file_prefix: "../../"
  }
  deep_hand_model_hands19_param {
     img_prefix: "training_images/image_D"
	 o_add_depth: false
	 depth_threshold: 100
  }
  include {
     phase: TRAIN
  }
}



layer {
  type: "DeepHandModelGetHands19ChaDepth"
  bottom: "bbx_x1"
  bottom: "bbx_y1"
  bottom: "bbx_x2"
  bottom: "bbx_y2"
  bottom: "mmcp_u"
  bottom: "mmcp_v"
  bottom: "image_index"
  top: "depth"
  top: "ext_bbx_x1"
  top: "ext_bbx_y1"
  top: "ext_bbx_x2"
  top: "ext_bbx_y2"
  top: "avgX"
  top: "avgY"
  top: "avgZ"
  top: "avgU"
  top: "avgV"
  transform_param {
     crop_size: 256
  }
  read_blob_from_file_indexing_param {
     file_prefix: "../../"
  }
  deep_hand_model_hands19_param {
     img_prefix: "test_images/image_D"
	 o_add_depth: false
  }
  include {
     phase: TEST
  }
}









#----- Get min_x  
layer {
  name: "min_x"
  type: "AddVectorByConstant"
  bottom: "avgX"
  top: "min_x"
  add_vector_by_constant_param {
     add_value: -100.0
  }
}



#----- Get max_x
layer {
  name: "max_x"
  type: "AddVectorByConstant"
  bottom: "avgX"
  top: "max_x"
  add_vector_by_constant_param {
     add_value: 100.0
  }
}


#----- Get min_y
layer {
  name: "min_y"
  type: "AddVectorByConstant"
  bottom: "avgY"
  top: "min_y"
  add_vector_by_constant_param {
     add_value: -100.0
  }
}



#----- Get max_y
layer {
  name: "max_y"
  type: "AddVectorByConstant"
  bottom: "avgY"
  top: "max_y"
  add_vector_by_constant_param {
     add_value: 100.0
  }
}



#----- Get min_z
layer {
  name: "min_z"
  type: "AddVectorByConstant"
  bottom: "avgZ"
  top: "min_z"
  add_vector_by_constant_param {
     add_value: -100.0
  }
}



#----- Get max_z
layer {
  name: "max_z"
  type: "AddVectorByConstant"
  bottom: "avgZ"
  top: "max_z"
  add_vector_by_constant_param {
     add_value: 100.0
  }
}





#----- project to global 2d 
layer {
  name: "gt_joint_2d_global"
  top: "gt_joint_2d_global"
  bottom: "gt_joint_3d_global"
  type: "DeepHandModelPinholeCameraOrigin"
}



layer {
  bottom: "depth"
  bottom: "depth"
  top: "depthnothing"
  name: "depthnothing"
  loss_weight: 0.0
  type: "EuclideanLoss"
}






layer {
   type: "DeepHandModelReadDepthNoBBXWithAVGZAug"
   bottom: "image_index"
   bottom: "avgZ"
   bottom: "ext_bbx_x1"
   bottom: "ext_bbx_y1"
   bottom: "ext_bbx_x2"
   bottom: "ext_bbx_y2"
   bottom: "min_x"
   bottom: "max_x"
   bottom: "min_y"
   bottom: "max_y"
   bottom: "min_z"
   bottom: "max_z"
   bottom: "gt_joint_3d_global"
   bottom: "gt_joint_2d_global"
   top: "aug_depth_img"
   top: "aug_joint_3d_local"
   top: "pt_cl"
   top: "depth_voxel"
   
   name: "lfd"
   read_depth_no_bbx_with_avgz_param {
      file_prefix: "../../training_images_crop/"
	 depth_size: 256	 
  }
   transform_param {
      is_divide: true 
	  minus_pixel_value: 0.0
	  
	  max_rotate_degree: 30.0
	  crop_size_x: 256
      crop_size_y: 256
	  scale_prob: 0.5
	  scale_min: 0.75
	  scale_max: 1.25
	  target_dist: 1.25
      center_perterb_max: 5.0
	  
	  
   }
   deep_hand_model_hands19_param {
     real_n_synth: false
	 o_pt_cl: true
	 o_layered_depth: false
	 o_depth_voxel: true 
  }
  gen_3d_skeleton_map_param {
     depth_dims: 32
	 map_size: 256
  }
  
   include {
      phase: TRAIN
   }
}


layer {
   type: "DeepHandModelReadDepthNoBBXWithAVGZAug"
   bottom: "image_index"
   bottom: "avgZ"
   bottom: "ext_bbx_x1"
   bottom: "ext_bbx_y1"
   bottom: "ext_bbx_x2"
   bottom: "ext_bbx_y2"
   bottom: "min_x"
   bottom: "max_x"
   bottom: "min_y"
   bottom: "max_y"
   bottom: "min_z"
   bottom: "max_z"
   bottom: "gt_joint_3d_global"
   bottom: "gt_joint_2d_global"
   top: "aug_depth_img"
   top: "aug_joint_3d_local"
   top: "pt_cl"
   top: "depth_voxel"
   name: "lfd"
   read_depth_no_bbx_with_avgz_param {
      file_prefix: "../../test_images_crop/"
	 depth_size: 256	 
  }
   transform_param {
      is_divide: true 
	  minus_pixel_value: 0
	  
	  max_rotate_degree: 0.0
	  crop_size_x: 256
      crop_size_y: 256
	  scale_prob: -1.0
	  scale_min: 0.75
	  scale_max: 1.25
	  target_dist: 1.25
      center_perterb_max: 0.0
   }
    deep_hand_model_hands19_param {
     real_n_synth: false
	 o_pt_cl: true
	 o_layered_depth: false
	 o_depth_voxel: true 
  }
  gen_3d_skeleton_map_param {
     depth_dims: 32
	 map_size: 256
  }
  
   include {
      phase: TEST
   }
}

layer {
   type: "DeepHandModelCubiodIntoGlobalV2"
   bottom: "aug_joint_3d_local"
   bottom: "min_x"
   bottom: "max_x"
   bottom: "min_y"
   bottom: "max_y"
   bottom: "min_z"
   bottom: "max_z"
   top: "aug_joint_3d_global"
   name: "aug_joint_3d_global"
}



#----- project to global 2d 
layer {
  name: "aug_joint_2d_global"
  top: "aug_joint_2d_global"
  bottom: "aug_joint_3d_global"
  type: "DeepHandModelPinholeCameraOrigin"
}

#layer {
#   type: "DeepHandModelAug"
#   bottom: "image_index"
#   bottom: "ext_bbx_x1"
#   bottom: "ext_bbx_y1"
#   bottom: "ext_bbx_x2"
#   bottom: "ext_bbx_y2"
#   bottom: "gt_joint_2d_global"
#   bottom: "add_depth"
#   top: "aug_depth_img"
#   top: "aug_2d_global"
#   transform_param {
#    
#    max_rotate_degree: 30.0
#    crop_size_x: 256
#    crop_size_y: 256
#    scale_prob: 1.0
#    target_dist: 1.0
#    center_perterb_max: 0.0
#    scale_min: 0.75
#	scale_max: 1.25
#    num_parts: 21
#    minus_pixel_value: 128.0
#    color_scale_factor: 0.0
#    use_integral_aug: true
#    is_divide: true
	
#  }
#  read_depth_no_bbx_with_avgz_param {
#    file_prefix: "../../training_640x480_crop_gray/"
#	l_fr_d: true
#  }
#  include {
#     phase: TRAIN
#  }
#}



#layer {
#   type: "DeepHandModelAug"
#   bottom: "image_index"
#   bottom: "ext_bbx_x1"
#   bottom: "ext_bbx_y1"
#   bottom: "ext_bbx_x2"
#   bottom: "ext_bbx_y2"
#   bottom: "gt_joint_2d_global"
#   bottom: "add_depth"
#   top: "aug_depth_img"
#   top: "aug_2d_global"
#   transform_param {
#    
#    max_rotate_degree: 0.0
#    crop_size_x: 256
#    crop_size_y: 256
#    scale_prob: -1.0
#    target_dist: 1.0
#    center_perterb_max: 0.0
#    
#    num_parts: 21
#    minus_pixel_value: 128.0
#    color_scale_factor: 0.0
#    use_integral_aug: true
#    is_divide: true
#  }
#  read_depth_no_bbx_with_avgz_param {
#    file_prefix: "../../test_640x480_crop_gray/"#
#	l_fr_d: true
#  }
#  include {
#     phase: TEST
#  }
#}



layer {
  bottom: "aug_depth_img"
  bottom: "aug_depth_img"
  top: "aug_depth_img_nothing"
  name: "aug_depth_img_nothing"
  loss_weight: 0.0
  type: "EuclideanLoss"
}




#======to get [0, 256] cropped gt 2d -> cropped gt 2d in range [0, 1]
#layer {
# type: "ScaleVector"
# bottom: "aug_2d_global"
# top: "aug_joint_2d_local"
# name: "aug_joint_2d_local"
# scale_vector_param {
#    scale_factor: 0.00390625
# }
#}


#----- project within bbx 
layer {
  name: "aug_joint_2d_local"
  top: "aug_joint_2d_local"
  bottom: "aug_joint_2d_global"
  bottom: "ext_bbx_x1"
  bottom: "ext_bbx_y1"
  bottom: "ext_bbx_x2"
  bottom: "ext_bbx_y2"
  type: "DeepHandModelProjectionGlobal2Local"
}



#----- project within bbx 
#layer {
#  name: "gt_joint_2d_local"
#  top: "gt_joint_2d_local"
#  bottom: "gt_joint_2d_global"
#  bottom: "ext_bbx_x1"
#  bottom: "ext_bbx_y1"
#  bottom: "ext_bbx_x2"
#  bottom: "ext_bbx_y2"
#  type: "DeepHandModelProjectionGlobal2Local"
#}


#------Get the local 3d
layer {
  name: "gt_joint_3d_local"
  type: "DeepHandModelNormalize3DIntoCubiodV2"
  bottom: "gt_joint_3d_global"
  bottom: "min_x"
  bottom: "max_x"
  bottom: "min_y"
  bottom: "max_y"
  bottom: "min_z"
  bottom: "max_z"
  top: "gt_joint_3d_local"
}






#-----slice 
layer {
  name: "slice_gt_joint_3d_local"
  bottom: "gt_joint_3d_local"
  top: "loc_xy_0"
  top: "loc_z_0"  
  top: "loc_xy_1"
  top: "loc_z_1"
  top: "loc_xy_2"
  top: "loc_z_2"
  top: "loc_xy_3"
  top: "loc_z_3"
  top: "loc_xy_4"
  top: "loc_z_4"
  top: "loc_xy_5"
  top: "loc_z_5"
  top: "loc_xy_6"
  top: "loc_z_6"
  top: "loc_xy_7"
  top: "loc_z_7"
  top: "loc_xy_8"
  top: "loc_z_8"
  top: "loc_xy_9"
  top: "loc_z_9"
  top: "loc_xy_10"
  top: "loc_z_10"
  top: "loc_xy_11"
  top: "loc_z_11"
  top: "loc_xy_12"
  top: "loc_z_12"
  top: "loc_xy_13"
  top: "loc_z_13"
  top: "loc_xy_14"
  top: "loc_z_14"
  top: "loc_xy_15"
  top: "loc_z_15"
  top: "loc_xy_16"
  top: "loc_z_16"
  top: "loc_xy_17"
  top: "loc_z_17"
  top: "loc_xy_18"
  top: "loc_z_18"
  top: "loc_xy_19"
  top: "loc_z_19"
  top: "loc_xy_20"
  top: "loc_z_20"
  type: "Slice"
  slice_param {
     axis: 1   
  slice_point: 2
  slice_point: 3
  slice_point: 5
  slice_point: 6
  slice_point: 8
  slice_point: 9
  slice_point: 11
  slice_point: 12
  slice_point: 14
  slice_point: 15
  slice_point: 17
  slice_point: 18
  slice_point: 20
  slice_point: 21
  slice_point: 23
  slice_point: 24
  slice_point: 26
  slice_point: 27
  slice_point: 29
  slice_point: 30
  slice_point: 32
  slice_point: 33
  slice_point: 35
  slice_point: 36
  slice_point: 38
  slice_point: 39
  slice_point: 41
  slice_point: 42
  slice_point: 44
  slice_point: 45
  slice_point: 47
  slice_point: 48
  slice_point: 50
  slice_point: 51
  slice_point: 53
  slice_point: 54
  slice_point: 56
  slice_point: 57
  slice_point: 59
  slice_point: 60
  slice_point: 62
  }
}

layer {
  bottom: "loc_z_0"
  bottom: "loc_z_1"
  bottom: "loc_z_2"
  bottom: "loc_z_3"
  bottom: "loc_z_4"
  bottom: "loc_z_5"
  bottom: "loc_z_6"
  bottom: "loc_z_7"
  bottom: "loc_z_8"
  bottom: "loc_z_9"
  bottom: "loc_z_10"
  bottom: "loc_z_11"
  bottom: "loc_z_12"
  bottom: "loc_z_13"
  bottom: "loc_z_14"
  bottom: "loc_z_15"
  bottom: "loc_z_16"
  bottom: "loc_z_17"
  bottom: "loc_z_18"
  bottom: "loc_z_19"
  bottom: "loc_z_20"
  top: "gt_depth"
  name: "gt_depth"
  type: "Concat"                                  
}


#layer {
#  type: "DeepHandModelProjectionLocal2Global3D"
#  bottom: "aug_joint_2d_local"
#  bottom: "gt_depth"
#  bottom: "ext_bbx_x1"
#  bottom: "ext_bbx_y1"
#  bottom: "min_z"
#  bottom: "ext_bbx_x2"
#  bottom: "ext_bbx_y2"
#  bottom: "max_z"
#  top: "aug_joint_3d_global"
#}



#------Get the aug local 3d 
#layer {
#  name: "aug_joint_3d_local"
#  type: "DeepHandModelNormalize3DIntoCubiodV2"
#  bottom: "aug_joint_3d_global"
#  bottom: "min_x"
#  bottom: "max_x"
#  bottom: "min_y"
#  bottom: "max_y"
#  bottom: "min_z"
#  bottom: "max_z"
#  top: "aug_joint_3d_local"
#}







#============generate 3d heatmap groud truth 
#layer {
#  type: "Gen3DHeatmapInMoreDetailV3"
#  bottom: "aug_joint_3d_local"
#  bottom: "aug_joint_2d_local"
#  top: "label"
#  name: "hm_3d"
#  gen_3d_heatmap_in_more_detail_v3_param {
#     x_lower_bound: 0.0
#	 x_upper_bound: 1.0
#	 y_lower_bound: 0.0
#	 y_upper_bound: 1.0
#	 z_lower_bound: -1.0
#	 z_upper_bound: 1.0
#	 depth_dims: 64
#	 map_size: 64
#	 joint_num: 21
#  }
#}

#layer {
#   bottom: "label"
#   bottom: "label"
#   top: "labelnothing"
#   name: "labelnothing"
#   type: "EuclideanLoss"
#   loss_weight: 0.0
#}




layer {
   type: "DeepHandModelProjectDepth"
   bottom: "pt_cl"
   bottom: "min_x"
   bottom: "max_x"
   bottom: "min_y"
   bottom: "max_y"
   bottom: "min_z"
   bottom: "max_z"
   bottom: "avgX"
   bottom: "avgY"
   bottom: "avgZ"
   top: "proj_xy"
   top: "proj_zy"
   top: "proj_zx"
   name: "proj_depth" 
   read_depth_no_bbx_with_avgz_param {
     depth_size: 256
   }
   transform_param {
     is_divide: true 
	 minus_pixel_value: 0.0
   }
}

#===concat raw depth XY, ZY, ZX plane projection
layer {
   type: "Concat"
   bottom: "aug_depth_img"
   bottom: "proj_xy"
   bottom: "proj_zy"
   bottom: "proj_zx"
   bottom: "depth_voxel"
   top: "system_input"
   name: "system_input"
}








layer {
  name: "conv1_new"
  type: "CuDNNConvolution"
  bottom: "aug_depth_img"
  top: "conv_blob1"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 3
    kernel_size: 7
    group: 1
    stride: 2
    weight_filler {
      type: "xavier"
    }
	

    dilation: 1
    engine: DEFAULT  
  }
}
layer {
  name: "batch_norm1"
  type: "BatchNorm"
  bottom: "conv_blob1"
  top: "batch_norm_blob1"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
	
  }
}
layer {
  name: "bn_scale1"
  type: "Scale"
  bottom: "batch_norm_blob1"
  top: "batch_norm_blob1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu1"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob1"
  top: "relu_blob1"
  
}
layer {
  name: "max_pool1"
  type: "CuDNNPooling"
  bottom: "relu_blob1"
  top: "max_pool_blob1"
  pooling_param {
    engine: DEFAULT
    pool: MAX
    kernel_size: 3
    stride: 2
    #pad: 1
	
  }
}



layer {
  name: "conv1_new_single"
  type: "CuDNNConvolution"
  bottom: "system_input"
  top: "conv_blob1_single"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 3
    kernel_size: 7
    group: 1
    stride: 2
    weight_filler {
      type: "xavier"
    }
	

    dilation: 1
    engine: DEFAULT  
  }
}


layer {
  name: "batch_norm1_single"
  type: "BatchNorm"
  bottom: "conv_blob1_single"
  top: "batch_norm_blob1_single"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
	
  }
}
layer {
  name: "bn_scale1_single"
  type: "Scale"
  bottom: "batch_norm_blob1_single"
  top: "batch_norm_blob1_single"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu1_single"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob1_single"
  top: "relu_blob1_single"
  
}
layer {
  name: "max_pool1_single"
  type: "CuDNNPooling"
  bottom: "relu_blob1_single"
  top: "max_pool_blob1_single"
  pooling_param {
    engine: DEFAULT
    pool: MAX
    kernel_size: 3
    stride: 2
    #pad: 1
	
  }
}

layer {
  type: "Concat"
  bottom: "max_pool_blob1_single"
  bottom: "max_pool_blob1"
  name: "max_pool1_blob1_concat"
  top: "max_pool1_blob1_concat"
}




layer {
  name: "conv2_single"
  type: "CuDNNConvolution"
  bottom: "max_pool1_blob1_concat"
  top: "conv_blob2"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT	
  }
}
layer {
  name: "batch_norm2"
  type: "BatchNorm"
  bottom: "conv_blob2"
  top: "batch_norm_blob2"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
	
  }
}
layer {
  name: "bn_scale2"
  type: "Scale"
  bottom: "batch_norm_blob2"
  top: "batch_norm_blob2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu2"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob2"
  top: "relu_blob2"
    
}
layer {
  name: "conv3"
  type: "CuDNNConvolution"
  bottom: "relu_blob2"
  top: "conv_blob3"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT	
  }
}
layer {
  name: "batch_norm3"
  type: "BatchNorm"
  bottom: "conv_blob3"
  top: "batch_norm_blob3"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
	
  }
}
layer {
  name: "bn_scale3"
  type: "Scale"
  bottom: "batch_norm_blob3"
  top: "batch_norm_blob3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu3"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob3"
  top: "relu_blob3"
    
}
layer {
  name: "conv4"
  type: "CuDNNConvolution"
  bottom: "relu_blob3"
  top: "conv_blob4"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT	
  }
}
layer {
  name: "batch_norm4"
  type: "BatchNorm"
  bottom: "conv_blob4"
  top: "batch_norm_blob4"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
	
  }
}
layer {
  name: "bn_scale4"
  type: "Scale"
  bottom: "batch_norm_blob4"
  top: "batch_norm_blob4"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv5"
  type: "CuDNNConvolution"
  bottom: "max_pool_blob1"
  top: "conv_blob5"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT	
  }
}
layer {
  name: "batch_norm5"
  type: "BatchNorm"
  bottom: "conv_blob5"
  top: "batch_norm_blob5"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
	
  }
}
layer {
  name: "bn_scale5"
  type: "Scale"
  bottom: "batch_norm_blob5"
  top: "batch_norm_blob5"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "add1"
  type: "Eltwise"
  bottom: "batch_norm_blob4"
  bottom: "batch_norm_blob5"
  top: "add_blob1"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "relu4"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "add_blob1"
  top: "relu_blob4"
    
}
layer {
  name: "conv6"
  type: "CuDNNConvolution"
  bottom: "relu_blob4"
  top: "conv_blob6"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT	
  }
}
layer {
  name: "batch_norm6"
  type: "BatchNorm"
  bottom: "conv_blob6"
  top: "batch_norm_blob6"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
	
  }
}
layer {
  name: "bn_scale6"
  type: "Scale"
  bottom: "batch_norm_blob6"
  top: "batch_norm_blob6"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu5"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob6"
  top: "relu_blob5"
    
}
layer {
  name: "conv7"
  type: "CuDNNConvolution"
  bottom: "relu_blob5"
  top: "conv_blob7"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT	
  }
}
layer {
  name: "batch_norm7"
  type: "BatchNorm"
  bottom: "conv_blob7"
  top: "batch_norm_blob7"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
	
  }
}
layer {
  name: "bn_scale7"
  type: "Scale"
  bottom: "batch_norm_blob7"
  top: "batch_norm_blob7"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu6"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob7"
  top: "relu_blob6"
    
}
layer {
  name: "conv8"
  type: "CuDNNConvolution"
  bottom: "relu_blob6"
  top: "conv_blob8"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT	
  }
}
layer {
  name: "batch_norm8"
  type: "BatchNorm"
  bottom: "conv_blob8"
  top: "batch_norm_blob8"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
	
  }
}
layer {
  name: "bn_scale8"
  type: "Scale"
  bottom: "batch_norm_blob8"
  top: "batch_norm_blob8"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "add2"
  type: "Eltwise"
  bottom: "batch_norm_blob8"
  bottom: "relu_blob4"
  top: "add_blob2"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "relu7"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }

  bottom: "add_blob2"
  top: "relu_blob7"
    
}
layer {
  name: "conv9"
  type: "CuDNNConvolution"
  bottom: "relu_blob7"
  top: "conv_blob9"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT	
  }
}
layer {
  name: "batch_norm9"
  type: "BatchNorm"
  bottom: "conv_blob9"
  top: "batch_norm_blob9"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
	
  }
}
layer {
  name: "bn_scale9"
  type: "Scale"
  bottom: "batch_norm_blob9"
  top: "batch_norm_blob9"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu8"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob9"
  top: "relu_blob8"
    
}
layer {
  name: "conv10"
  type: "CuDNNConvolution"
  bottom: "relu_blob8"
  top: "conv_blob10"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT	
  }
}
layer {
  name: "batch_norm10"
  type: "BatchNorm"
  bottom: "conv_blob10"
  top: "batch_norm_blob10"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
	
  }
}
layer {
  name: "bn_scale10"
  type: "Scale"
  bottom: "batch_norm_blob10"
  top: "batch_norm_blob10"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu9"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob10"
  top: "relu_blob9"
    
}
layer {
  name: "conv11"
  type: "CuDNNConvolution"
  bottom: "relu_blob9"
  top: "conv_blob11"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT	
  }
}
layer {
  name: "batch_norm11"
  type: "BatchNorm"
  bottom: "conv_blob11"
  top: "batch_norm_blob11"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
	
  }
}
layer {
  name: "bn_scale11"
  type: "Scale"
  bottom: "batch_norm_blob11"
  top: "batch_norm_blob11"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "add3"
  type: "Eltwise"
  bottom: "batch_norm_blob11"
  bottom: "relu_blob7"
  top: "add_blob3"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "relu10"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "add_blob3"
  top: "relu_blob10"
    
}
layer {
  name: "conv12"
  type: "CuDNNConvolution"
  bottom: "relu_blob10"
  top: "conv_blob12"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT	
  }
}
layer {
  name: "batch_norm12"
  type: "BatchNorm"
  bottom: "conv_blob12"
  top: "batch_norm_blob12"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
	
  }
}
layer {
  name: "bn_scale12"
  type: "Scale"
  bottom: "batch_norm_blob12"
  top: "batch_norm_blob12"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu11"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob12"
  top: "relu_blob11"
    
}
layer {
  name: "conv13"
  type: "CuDNNConvolution"
  bottom: "relu_blob11"
  top: "conv_blob13"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 2
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT	
  }
}
layer {
  name: "batch_norm13"
  type: "BatchNorm"
  bottom: "conv_blob13"
  top: "batch_norm_blob13"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
	
  }
}
layer {
  name: "bn_scale13"
  type: "Scale"
  bottom: "batch_norm_blob13"
  top: "batch_norm_blob13"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu12"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob13"
  top: "relu_blob12"
    
}
layer {
  name: "conv14"
  type: "CuDNNConvolution"
  bottom: "relu_blob12"
  top: "conv_blob14"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT	
  }
}
layer {
  name: "batch_norm14"
  type: "BatchNorm"
  bottom: "conv_blob14"
  top: "batch_norm_blob14"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
	
  }
}
layer {
  name: "bn_scale14"
  type: "Scale"
  bottom: "batch_norm_blob14"
  top: "batch_norm_blob14"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv15"
  type: "CuDNNConvolution"
  bottom: "relu_blob10"
  top: "conv_blob15"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 2
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT	
  }
}
layer {
  name: "batch_norm15"
  type: "BatchNorm"
  bottom: "conv_blob15"
  top: "batch_norm_blob15"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
	
  }
}
layer {
  name: "bn_scale15"
  type: "Scale"
  bottom: "batch_norm_blob15"
  top: "batch_norm_blob15"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "add4"
  type: "Eltwise"
  bottom: "batch_norm_blob14"
  bottom: "batch_norm_blob15"
  top: "add_blob4"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "relu13"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "add_blob4"
  top: "relu_blob13"
    
}
layer {
  name: "conv16"
  type: "CuDNNConvolution"
  bottom: "relu_blob13"
  top: "conv_blob16"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT	
  }
}
layer {
  name: "batch_norm16"
  type: "BatchNorm"
  bottom: "conv_blob16"
  top: "batch_norm_blob16"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
	
  }
}
layer {
  name: "bn_scale16"
  type: "Scale"
  bottom: "batch_norm_blob16"
  top: "batch_norm_blob16"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu14"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob16"
  top: "relu_blob14"
    
}
layer {
  name: "conv17"
  type: "CuDNNConvolution"
  bottom: "relu_blob14"
  top: "conv_blob17"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT	
  }
}
layer {
  name: "batch_norm17"
  type: "BatchNorm"
  bottom: "conv_blob17"
  top: "batch_norm_blob17"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
	
  }
}
layer {
  name: "bn_scale17"
  type: "Scale"
  bottom: "batch_norm_blob17"
  top: "batch_norm_blob17"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu15"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob17"
  top: "relu_blob15"
    
}
layer {
  name: "conv18"
  type: "CuDNNConvolution"
  bottom: "relu_blob15"
  top: "conv_blob18"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT	
  }
}
layer {
  name: "batch_norm18"
  type: "BatchNorm"
  bottom: "conv_blob18"
  top: "batch_norm_blob18"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale18"
  type: "Scale"
  bottom: "batch_norm_blob18"
  top: "batch_norm_blob18"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "add5"
  type: "Eltwise"
  bottom: "batch_norm_blob18"
  bottom: "relu_blob13"
  top: "add_blob5"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "relu16"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "add_blob5"
  top: "relu_blob16"
}
layer {
  name: "conv19"
  type: "CuDNNConvolution"
  bottom: "relu_blob16"
  top: "conv_blob19"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm19"
  type: "BatchNorm"
  bottom: "conv_blob19"
  top: "batch_norm_blob19"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale19"
  type: "Scale"
  bottom: "batch_norm_blob19"
  top: "batch_norm_blob19"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu17"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob19"
  top: "relu_blob17"
}
layer {
  name: "conv20"
  type: "CuDNNConvolution"
  bottom: "relu_blob17"
  top: "conv_blob20"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm20"
  type: "BatchNorm"
  bottom: "conv_blob20"
  top: "batch_norm_blob20"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale20"
  type: "Scale"
  bottom: "batch_norm_blob20"
  top: "batch_norm_blob20"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu18"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob20"
  top: "relu_blob18"
}
layer {
  name: "conv21"
  type: "CuDNNConvolution"
  bottom: "relu_blob18"
  top: "conv_blob21"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm21"
  type: "BatchNorm"
  bottom: "conv_blob21"
  top: "batch_norm_blob21"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale21"
  type: "Scale"
  bottom: "batch_norm_blob21"
  top: "batch_norm_blob21"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "add6"
  type: "Eltwise"
  bottom: "batch_norm_blob21"
  bottom: "relu_blob16"
  top: "add_blob6"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "relu19"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "add_blob6"
  top: "relu_blob19"
}
layer {
  name: "conv22"
  type: "CuDNNConvolution"
  bottom: "relu_blob19"
  top: "conv_blob22"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm22"
  type: "BatchNorm"
  bottom: "conv_blob22"
  top: "batch_norm_blob22"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale22"
  type: "Scale"
  bottom: "batch_norm_blob22"
  top: "batch_norm_blob22"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu20"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob22"
  top: "relu_blob20"
}
layer {
  name: "conv23"
  type: "CuDNNConvolution"
  bottom: "relu_blob20"
  top: "conv_blob23"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm23"
  type: "BatchNorm"
  bottom: "conv_blob23"
  top: "batch_norm_blob23"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale23"
  type: "Scale"
  bottom: "batch_norm_blob23"
  top: "batch_norm_blob23"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu21"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob23"
  top: "relu_blob21"
}
layer {
  name: "conv24"
  type: "CuDNNConvolution"
  bottom: "relu_blob21"
  top: "conv_blob24"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm24"
  type: "BatchNorm"
  bottom: "conv_blob24"
  top: "batch_norm_blob24"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale24"
  type: "Scale"
  bottom: "batch_norm_blob24"
  top: "batch_norm_blob24"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "add7"
  type: "Eltwise"
  bottom: "batch_norm_blob24"
  bottom: "relu_blob19"
  top: "add_blob7"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "relu22"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "add_blob7"
  top: "relu_blob22"
}
layer {
  name: "conv25"
  type: "CuDNNConvolution"
  bottom: "relu_blob22"
  top: "conv_blob25"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm25"
  type: "BatchNorm"
  bottom: "conv_blob25"
  top: "batch_norm_blob25"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale25"
  type: "Scale"
  bottom: "batch_norm_blob25"
  top: "batch_norm_blob25"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu23"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob25"
  top: "relu_blob23"
}
layer {
  name: "conv26"
  type: "CuDNNConvolution"
  bottom: "relu_blob23"
  top: "conv_blob26"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 2
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm26"
  type: "BatchNorm"
  bottom: "conv_blob26"
  top: "batch_norm_blob26"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale26"
  type: "Scale"
  bottom: "batch_norm_blob26"
  top: "batch_norm_blob26"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu24"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob26"
  top: "relu_blob24"
}
layer {
  name: "conv27"
  type: "CuDNNConvolution"
  bottom: "relu_blob24"
  top: "conv_blob27"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm27"
  type: "BatchNorm"
  bottom: "conv_blob27"
  top: "batch_norm_blob27"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale27"
  type: "Scale"
  bottom: "batch_norm_blob27"
  top: "batch_norm_blob27"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv28"
  type: "CuDNNConvolution"
  bottom: "relu_blob22"
  top: "conv_blob28"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 2
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm28"
  type: "BatchNorm"
  bottom: "conv_blob28"
  top: "batch_norm_blob28"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale28"
  type: "Scale"
  bottom: "batch_norm_blob28"
  top: "batch_norm_blob28"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "add8"
  type: "Eltwise"
  bottom: "batch_norm_blob27"
  bottom: "batch_norm_blob28"
  top: "add_blob8"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "relu25"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "add_blob8"
  top: "relu_blob25"
}
layer {
  name: "conv29"
  type: "CuDNNConvolution"
  bottom: "relu_blob25"
  top: "conv_blob29"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm29"
  type: "BatchNorm"
  bottom: "conv_blob29"
  top: "batch_norm_blob29"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale29"
  type: "Scale"
  bottom: "batch_norm_blob29"
  top: "batch_norm_blob29"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu26"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob29"
  top: "relu_blob26"
}
layer {
  name: "conv30"
  type: "CuDNNConvolution"
  bottom: "relu_blob26"
  top: "conv_blob30"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm30"
  type: "BatchNorm"
  bottom: "conv_blob30"
  top: "batch_norm_blob30"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale30"
  type: "Scale"
  bottom: "batch_norm_blob30"
  top: "batch_norm_blob30"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu27"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob30"
  top: "relu_blob27"
}
layer {
  name: "conv31"
  type: "CuDNNConvolution"
  bottom: "relu_blob27"
  top: "conv_blob31"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm31"
  type: "BatchNorm"
  bottom: "conv_blob31"
  top: "batch_norm_blob31"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale31"
  type: "Scale"
  bottom: "batch_norm_blob31"
  top: "batch_norm_blob31"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "add9"
  type: "Eltwise"
  bottom: "batch_norm_blob31"
  bottom: "relu_blob25"
  top: "add_blob9"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "relu28"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "add_blob9"
  top: "relu_blob28"
}
layer {
  name: "conv32"
  type: "CuDNNConvolution"
  bottom: "relu_blob28"
  top: "conv_blob32"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm32"
  type: "BatchNorm"
  bottom: "conv_blob32"
  top: "batch_norm_blob32"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale32"
  type: "Scale"
  bottom: "batch_norm_blob32"
  top: "batch_norm_blob32"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu29"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob32"
  top: "relu_blob29"
}
layer {
  name: "conv33"
  type: "CuDNNConvolution"
  bottom: "relu_blob29"
  top: "conv_blob33"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm33"
  type: "BatchNorm"
  bottom: "conv_blob33"
  top: "batch_norm_blob33"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale33"
  type: "Scale"
  bottom: "batch_norm_blob33"
  top: "batch_norm_blob33"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu30"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob33"
  top: "relu_blob30"
}
layer {
  name: "conv34"
  type: "CuDNNConvolution"
  bottom: "relu_blob30"
  top: "conv_blob34"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm34"
  type: "BatchNorm"
  bottom: "conv_blob34"
  top: "batch_norm_blob34"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale34"
  type: "Scale"
  bottom: "batch_norm_blob34"
  top: "batch_norm_blob34"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "add10"
  type: "Eltwise"
  bottom: "batch_norm_blob34"
  bottom: "relu_blob28"
  top: "add_blob10"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "relu31"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "add_blob10"
  top: "relu_blob31"
}
layer {
  name: "conv35"
  type: "CuDNNConvolution"
  bottom: "relu_blob31"
  top: "conv_blob35"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm35"
  type: "BatchNorm"
  bottom: "conv_blob35"
  top: "batch_norm_blob35"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale35"
  type: "Scale"
  bottom: "batch_norm_blob35"
  top: "batch_norm_blob35"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu32"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob35"
  top: "relu_blob32"
}
layer {
  name: "conv36"
  type: "CuDNNConvolution"
  bottom: "relu_blob32"
  top: "conv_blob36"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm36"
  type: "BatchNorm"
  bottom: "conv_blob36"
  top: "batch_norm_blob36"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale36"
  type: "Scale"
  bottom: "batch_norm_blob36"
  top: "batch_norm_blob36"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu33"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob36"
  top: "relu_blob33"
}
layer {
  name: "conv37"
  type: "CuDNNConvolution"
  bottom: "relu_blob33"
  top: "conv_blob37"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm37"
  type: "BatchNorm"
  bottom: "conv_blob37"
  top: "batch_norm_blob37"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale37"
  type: "Scale"
  bottom: "batch_norm_blob37"
  top: "batch_norm_blob37"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "add11"
  type: "Eltwise"
  bottom: "batch_norm_blob37"
  bottom: "relu_blob31"
  top: "add_blob11"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "relu34"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "add_blob11"
  top: "relu_blob34"
}
layer {
  name: "conv38"
  type: "CuDNNConvolution"
  bottom: "relu_blob34"
  top: "conv_blob38"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm38"
  type: "BatchNorm"
  bottom: "conv_blob38"
  top: "batch_norm_blob38"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale38"
  type: "Scale"
  bottom: "batch_norm_blob38"
  top: "batch_norm_blob38"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu35"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob38"
  top: "relu_blob35"
}
layer {
  name: "conv39"
  type: "CuDNNConvolution"
  bottom: "relu_blob35"
  top: "conv_blob39"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm39"
  type: "BatchNorm"
  bottom: "conv_blob39"
  top: "batch_norm_blob39"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale39"
  type: "Scale"
  bottom: "batch_norm_blob39"
  top: "batch_norm_blob39"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu36"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob39"
  top: "relu_blob36"
}
layer {
  name: "conv40"
  type: "CuDNNConvolution"
  bottom: "relu_blob36"
  top: "conv_blob40"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm40"
  type: "BatchNorm"
  bottom: "conv_blob40"
  top: "batch_norm_blob40"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale40"
  type: "Scale"
  bottom: "batch_norm_blob40"
  top: "batch_norm_blob40"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "add12"
  type: "Eltwise"
  bottom: "batch_norm_blob40"
  bottom: "relu_blob34"
  top: "add_blob12"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "relu37"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "add_blob12"
  top: "relu_blob37"
}
layer {
  name: "conv41"
  type: "CuDNNConvolution"
  bottom: "relu_blob37"
  top: "conv_blob41"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm41"
  type: "BatchNorm"
  bottom: "conv_blob41"
  top: "batch_norm_blob41"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale41"
  type: "Scale"
  bottom: "batch_norm_blob41"
  top: "batch_norm_blob41"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu38"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob41"
  top: "relu_blob38"
}
layer {
  name: "conv42"
  type: "CuDNNConvolution"
  bottom: "relu_blob38"
  top: "conv_blob42"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm42"
  type: "BatchNorm"
  bottom: "conv_blob42"
  top: "batch_norm_blob42"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale42"
  type: "Scale"
  bottom: "batch_norm_blob42"
  top: "batch_norm_blob42"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu39"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob42"
  top: "relu_blob39"
}
layer {
  name: "conv43"
  type: "CuDNNConvolution"
  bottom: "relu_blob39"
  top: "conv_blob43"
  convolution_param {
    num_output: 1024
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm43"
  type: "BatchNorm"
  bottom: "conv_blob43"
  top: "batch_norm_blob43"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale43"
  type: "Scale"
  bottom: "batch_norm_blob43"
  top: "batch_norm_blob43"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "add13"
  type: "Eltwise"
  bottom: "batch_norm_blob43"
  bottom: "relu_blob37"
  top: "add_blob13"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "relu40"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "add_blob13"
  top: "relu_blob40"
}
layer {
  name: "conv44"
  type: "CuDNNConvolution"
  bottom: "relu_blob40"
  top: "conv_blob44"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm44"
  type: "BatchNorm"
  bottom: "conv_blob44"
  top: "batch_norm_blob44"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale44"
  type: "Scale"
  bottom: "batch_norm_blob44"
  top: "batch_norm_blob44"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu41"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob44"
  top: "relu_blob41"
}
layer {
  name: "conv45"
  type: "CuDNNConvolution"
  bottom: "relu_blob41"
  top: "conv_blob45"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 2
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm45"
  type: "BatchNorm"
  bottom: "conv_blob45"
  top: "batch_norm_blob45"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale45"
  type: "Scale"
  bottom: "batch_norm_blob45"
  top: "batch_norm_blob45"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu42"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob45"
  top: "relu_blob42"
}
layer {
  name: "conv46"
  type: "CuDNNConvolution"
  bottom: "relu_blob42"
  top: "conv_blob46"
  convolution_param {
    num_output: 2048
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm46"
  type: "BatchNorm"
  bottom: "conv_blob46"
  top: "batch_norm_blob46"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale46"
  type: "Scale"
  bottom: "batch_norm_blob46"
  top: "batch_norm_blob46"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv47"
  type: "CuDNNConvolution"
  bottom: "relu_blob40"
  top: "conv_blob47"
  convolution_param {
    num_output: 2048
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 2
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm47"
  type: "BatchNorm"
  bottom: "conv_blob47"
  top: "batch_norm_blob47"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale47"
  type: "Scale"
  bottom: "batch_norm_blob47"
  top: "batch_norm_blob47"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "add14"
  type: "Eltwise"
  bottom: "batch_norm_blob46"
  bottom: "batch_norm_blob47"
  top: "add_blob14"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "relu43"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "add_blob14"
  top: "relu_blob43"
}
layer {
  name: "conv48"
  type: "CuDNNConvolution"
  bottom: "relu_blob43"
  top: "conv_blob48"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm48"
  type: "BatchNorm"
  bottom: "conv_blob48"
  top: "batch_norm_blob48"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale48"
  type: "Scale"
  bottom: "batch_norm_blob48"
  top: "batch_norm_blob48"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu44"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob48"
  top: "relu_blob44"
}
layer {
  name: "conv49"
  type: "CuDNNConvolution"
  bottom: "relu_blob44"
  top: "conv_blob49"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm49"
  type: "BatchNorm"
  bottom: "conv_blob49"
  top: "batch_norm_blob49"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale49"
  type: "Scale"
  bottom: "batch_norm_blob49"
  top: "batch_norm_blob49"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu45"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob49"
  top: "relu_blob45"
}
layer {
  name: "conv50"
  type: "CuDNNConvolution"
  bottom: "relu_blob45"
  top: "conv_blob50"
  convolution_param {
    num_output: 2048
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm50"
  type: "BatchNorm"
  bottom: "conv_blob50"
  top: "batch_norm_blob50"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale50"
  type: "Scale"
  bottom: "batch_norm_blob50"
  top: "batch_norm_blob50"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "add15"
  type: "Eltwise"
  bottom: "batch_norm_blob50"
  bottom: "relu_blob43"
  top: "add_blob15"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "relu46"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "add_blob15"
  top: "relu_blob46"
}
layer {
  name: "conv51"
  type: "CuDNNConvolution"
  bottom: "relu_blob46"
  top: "conv_blob51"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm51"
  type: "BatchNorm"
  bottom: "conv_blob51"
  top: "batch_norm_blob51"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale51"
  type: "Scale"
  bottom: "batch_norm_blob51"
  top: "batch_norm_blob51"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu47"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob51"
  top: "relu_blob47"
}
layer {
  name: "conv52"
  type: "CuDNNConvolution"
  bottom: "relu_blob47"
  top: "conv_blob52"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm52"
  type: "BatchNorm"
  bottom: "conv_blob52"
  top: "batch_norm_blob52"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale52"
  type: "Scale"
  bottom: "batch_norm_blob52"
  top: "batch_norm_blob52"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu48"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob52"
  top: "relu_blob48"
}
layer {
  name: "conv53"
  type: "CuDNNConvolution"
  bottom: "relu_blob48"
  top: "conv_blob53"
  convolution_param {
    num_output: 2048
    bias_term: false
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm53"
  type: "BatchNorm"
  bottom: "conv_blob53"
  top: "batch_norm_blob53"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale53"
  type: "Scale"
  bottom: "batch_norm_blob53"
  top: "batch_norm_blob53"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "add16"
  type: "Eltwise"
  bottom: "batch_norm_blob53"
  bottom: "relu_blob46"
  top: "add_blob16"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "relu49"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "add_blob16"
  top: "relu_blob49"
}
layer {
  name: "conv_transpose1"
  type: "CuDNNDeconvolution"
  bottom: "relu_blob49"
  top: "conv_transpose_blob1"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm54"
  type: "BatchNorm"
  bottom: "conv_transpose_blob1"
  top: "batch_norm_blob54"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale54"
  type: "Scale"
  bottom: "batch_norm_blob54"
  top: "batch_norm_blob54"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu50"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob54"
  top: "relu_blob50"
}
layer {
  name: "conv_transpose2"
  type: "CuDNNDeconvolution"
  bottom: "relu_blob50"
  top: "conv_transpose_blob2"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm55"
  type: "BatchNorm"
  bottom: "conv_transpose_blob2"
  top: "batch_norm_blob55"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale55"
  type: "Scale"
  bottom: "batch_norm_blob55"
  top: "batch_norm_blob55"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu51"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob55"
  top: "relu_blob51"
}
layer {
  name: "conv_transpose3"
  type: "CuDNNDeconvolution"
  bottom: "relu_blob51"
  top: "conv_transpose_blob3"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "xavier"
    }

    dilation: 1
    engine: DEFAULT  }
}
layer {
  name: "batch_norm56"
  type: "BatchNorm"
  bottom: "conv_transpose_blob3"
  top: "batch_norm_blob56"
  batch_norm_param {
    use_global_stats: false   
    eps: 1e-05
    engine: DEFAULT
  }
}
layer {
  name: "bn_scale56"
  type: "Scale"
  bottom: "batch_norm_blob56"
  top: "batch_norm_blob56"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu52"
   type: "CuDNNReLU"
  relu_param {
    engine: DEFAULT
  }
  bottom: "batch_norm_blob56"
  top: "relu_blob52"
}
layer {
  name: "conv54_new"
  type: "CuDNNConvolution"
  bottom: "relu_blob52"
  top: "heatmap"
  convolution_param {
    num_output: 1344
    bias_term: true
    pad: 0
    kernel_size: 1
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }

    dilation: 1
    engine: DEFAULT  }
}






















#=====flat 3d cube -> scale vector -> reshape
layer {
  #bottom: "label"
  bottom: "heatmap"
  top: "heatmap_flat"
  type: "Flatten"
  name: "heatmap_flat"
}

#====
layer {
  type: "ScaleVector"
  bottom: "heatmap_flat"
  top: "heatmap_flat"
  name: "heatmap_flat"
  scale_vector_param {
    scale_factor: 1.0
  }
}

layer {
  type: "Reshape"
  bottom: "heatmap_flat"
  top: "heatmap_flat_reshape"
  name: "heatmap_flat_reshape"
  reshape_param {
    shape {
       dim: 0
       dim: 1344
       dim: 64
       dim: 64
    }
  }
}




#-----slice cube 21 joints
layer {
  name: "slice_cube"
  bottom: "heatmap_flat_reshape"
  top: "rs_cube_0"
  top: "rs_cube_1"
  top: "rs_cube_2"
  top: "rs_cube_3"
  top: "rs_cube_4"
  top: "rs_cube_5"
  top: "rs_cube_6"
  top: "rs_cube_7"
  top: "rs_cube_8"
  top: "rs_cube_9"
  top: "rs_cube_10"
  top: "rs_cube_11"
  top: "rs_cube_12"
  top: "rs_cube_13"
  top: "rs_cube_14"
  top: "rs_cube_15"
  top: "rs_cube_16"
  top: "rs_cube_17"
  top: "rs_cube_18"
  top: "rs_cube_19"
  top: "rs_cube_20"
  type: "Slice"
  slice_param {
     axis: 1   
   slice_point: 64
  slice_point: 128
  slice_point: 192
  slice_point: 256
  slice_point: 320
  slice_point: 384
  slice_point: 448
  slice_point: 512
  slice_point: 576
  slice_point: 640
  slice_point: 704
  slice_point: 768
  slice_point: 832
  slice_point: 896
  slice_point: 960
  slice_point: 1024
  slice_point: 1088
  slice_point: 1152
  slice_point: 1216
  slice_point: 1280
  }
}




#Bx64x64x64 -> Bx (64x64x64)
layer {
  type: "Reshape"
  bottom: "rs_cube_0"
  top: "rs_cube_0_rs"
  name: "rs_cube_0_rs"
  reshape_param {
    shape {
       dim: 0
       dim: 262144
    }
  }
}

#softmax heatmaps = F.softmax(heatmaps, 2)
layer {
   type: "CuDNNSoftmax"
  softmax_param {
     engine: DEFAULT
  }
  bottom: "rs_cube_0_rs"
  top: "rs_cube_0_rs_sm"
  name: "rs_cube_0_rs_sm"
}

layer {
  type: "Reshape"
  bottom: "rs_cube_0_rs_sm"
  top: "pred_cube_0"
  name: "pred_cube_0"
  reshape_param {
    shape {
       dim: 0
       dim: 64
     dim: 64
     dim: 64
    }
  }
}



#Bx64x64x64 -> Bx (64x64x64)
layer {
  type: "Reshape"
  bottom: "rs_cube_1"
  top: "rs_cube_1_rs"
  name: "rs_cube_1_rs"
  reshape_param {
    shape {
       dim: 0
       dim: 262144
    }
  }
}

#softmax heatmaps = F.softmax(heatmaps, 2)
layer {
   type: "CuDNNSoftmax"
  softmax_param {
     engine: DEFAULT
  }
  bottom: "rs_cube_1_rs"
  top: "rs_cube_1_rs_sm"
  name: "rs_cube_1_rs_sm"
}

layer {
  type: "Reshape"
  bottom: "rs_cube_1_rs_sm"
  top: "pred_cube_1"
  name: "pred_cube_1"
  reshape_param {
    shape {
       dim: 0
       dim: 64
     dim: 64
     dim: 64
    }
  }
}


#Bx64x64x64 -> Bx (64x64x64)
layer {
  type: "Reshape"
  bottom: "rs_cube_2"
  top: "rs_cube_2_rs"
  name: "rs_cube_2_rs"
  reshape_param {
    shape {
       dim: 0
       dim: 262144
    }
  }
}

#softmax heatmaps = F.softmax(heatmaps, 2)
layer {
   type: "CuDNNSoftmax"
  softmax_param {
     engine: DEFAULT
  }
  bottom: "rs_cube_2_rs"
  top: "rs_cube_2_rs_sm"
  name: "rs_cube_2_rs_sm"
}

layer {
  type: "Reshape"
  bottom: "rs_cube_2_rs_sm"
  top: "pred_cube_2"
  name: "pred_cube_2"
  reshape_param {
    shape {
       dim: 0
       dim: 64
     dim: 64
     dim: 64
    }
  }
}



#Bx64x64x64 -> Bx (64x64x64)
layer {
  type: "Reshape"
  bottom: "rs_cube_3"
  top: "rs_cube_3_rs"
  name: "rs_cube_3_rs"
  reshape_param {
    shape {
       dim: 0
       dim: 262144
    }
  }
}

#softmax heatmaps = F.softmax(heatmaps, 2)
layer {
   type: "CuDNNSoftmax"
  softmax_param {
     engine: DEFAULT
  }
  bottom: "rs_cube_3_rs"
  top: "rs_cube_3_rs_sm"
  name: "rs_cube_3_rs_sm"
}

layer {
  type: "Reshape"
  bottom: "rs_cube_3_rs_sm"
  top: "pred_cube_3"
  name: "pred_cube_3"
  reshape_param {
    shape {
       dim: 0
       dim: 64
     dim: 64
     dim: 64
    }
  }
}



#Bx64x64x64 -> Bx (64x64x64)
layer {
  type: "Reshape"
  bottom: "rs_cube_4"
  top: "rs_cube_4_rs"
  name: "rs_cube_4_rs"
  reshape_param {
    shape {
       dim: 0
       dim: 262144
    }
  }
}

#softmax heatmaps = F.softmax(heatmaps, 2)
layer {
   type: "CuDNNSoftmax"
  softmax_param {
     engine: DEFAULT
  }
  
  bottom: "rs_cube_4_rs"
  top: "rs_cube_4_rs_sm"
  name: "rs_cube_4_rs_sm"
}

layer {
  type: "Reshape"
  bottom: "rs_cube_4_rs_sm"
  top: "pred_cube_4"
  name: "pred_cube_4"
  reshape_param {
    shape {
       dim: 0
       dim: 64
     dim: 64
     dim: 64
    }
  }
}



#Bx64x64x64 -> Bx (64x64x64)
layer {
  type: "Reshape"
  bottom: "rs_cube_5"
  top: "rs_cube_5_rs"
  name: "rs_cube_5_rs"
  reshape_param {
    shape {
       dim: 0
       dim: 262144
    }
  }
}

#softmax heatmaps = F.softmax(heatmaps, 2)
layer {
   type: "CuDNNSoftmax"
  softmax_param {
     engine: DEFAULT
  }
  bottom: "rs_cube_5_rs"
  top: "rs_cube_5_rs_sm"
  name: "rs_cube_5_rs_sm"
}

layer {
  type: "Reshape"
  bottom: "rs_cube_5_rs_sm"
  top: "pred_cube_5"
  name: "pred_cube_5"
  reshape_param {
    shape {
       dim: 0
       dim: 64
     dim: 64
     dim: 64
    }
  }
}




#Bx64x64x64 -> Bx (64x64x64)
layer {
  type: "Reshape"
  bottom: "rs_cube_6"
  top: "rs_cube_6_rs"
  name: "rs_cube_6_rs"
  reshape_param {
    shape {
       dim: 0
       dim: 262144
    }
  }
}

#softmax heatmaps = F.softmax(heatmaps, 2)
layer {
   type: "CuDNNSoftmax"
  softmax_param {
     engine: DEFAULT
  }
  bottom: "rs_cube_6_rs"
  top: "rs_cube_6_rs_sm"
  name: "rs_cube_6_rs_sm"
}

layer {
  type: "Reshape"
  bottom: "rs_cube_6_rs_sm"
  top: "pred_cube_6"
  name: "pred_cube_6"
  reshape_param {
    shape {
       dim: 0
       dim: 64
     dim: 64
     dim: 64
    }
  }
}




#Bx64x64x64 -> Bx (64x64x64)
layer {
  type: "Reshape"
  bottom: "rs_cube_7"
  top: "rs_cube_7_rs"
  name: "rs_cube_7_rs"
  reshape_param {
    shape {
       dim: 0
       dim: 262144
    }
  }
}

#softmax heatmaps = F.softmax(heatmaps, 2)
layer {
   type: "CuDNNSoftmax"
  softmax_param {
     engine: DEFAULT
  }
  bottom: "rs_cube_7_rs"
  top: "rs_cube_7_rs_sm"
  name: "rs_cube_7_rs_sm"
}

layer {
  type: "Reshape"
  bottom: "rs_cube_7_rs_sm"
  top: "pred_cube_7"
  name: "pred_cube_7"
  reshape_param {
    shape {
       dim: 0
       dim: 64
     dim: 64
     dim: 64
    }
  }
}




#Bx64x64x64 -> Bx (64x64x64)
layer {
  type: "Reshape"
  bottom: "rs_cube_8"
  top: "rs_cube_8_rs"
  name: "rs_cube_8_rs"
  reshape_param {
    shape {
       dim: 0
       dim: 262144
    }
  }
}

#softmax heatmaps = F.softmax(heatmaps, 2)
layer {
   type: "CuDNNSoftmax"
  softmax_param {
     engine: DEFAULT
  }
  bottom: "rs_cube_8_rs"
  top: "rs_cube_8_rs_sm"
  name: "rs_cube_8_rs_sm"
}

layer {
  type: "Reshape"
  bottom: "rs_cube_8_rs_sm"
  top: "pred_cube_8"
  name: "pred_cube_8"
  reshape_param {
    shape {
       dim: 0
       dim: 64
     dim: 64
     dim: 64
    }
  }
}



#Bx64x64x64 -> Bx (64x64x64)
layer {
  type: "Reshape"
  bottom: "rs_cube_9"
  top: "rs_cube_9_rs"
  name: "rs_cube_9_rs"
  reshape_param {
    shape {
       dim: 0
       dim: 262144
    }
  }
}

#softmax heatmaps = F.softmax(heatmaps, 2)
layer {
   type: "CuDNNSoftmax"
  softmax_param {
     engine: DEFAULT
  }
  bottom: "rs_cube_9_rs"
  top: "rs_cube_9_rs_sm"
  name: "rs_cube_9_rs_sm"
}

layer {
  type: "Reshape"
  bottom: "rs_cube_9_rs_sm"
  top: "pred_cube_9"
  name: "pred_cube_9"
  reshape_param {
    shape {
       dim: 0
       dim: 64
     dim: 64
     dim: 64
    }
  }
}




#Bx64x64x64 -> Bx (64x64x64)
layer {
  type: "Reshape"
  bottom: "rs_cube_10"
  top: "rs_cube_10_rs"
  name: "rs_cube_10_rs"
  reshape_param {
    shape {
       dim: 0
       dim: 262144
    }
  }
}

#softmax heatmaps = F.softmax(heatmaps, 2)
layer {
   type: "CuDNNSoftmax"
  softmax_param {
     engine: DEFAULT
  }
  bottom: "rs_cube_10_rs"
  top: "rs_cube_10_rs_sm"
  name: "rs_cube_10_rs_sm"
}

layer {
  type: "Reshape"
  bottom: "rs_cube_10_rs_sm"
  top: "pred_cube_10"
  name: "pred_cube_10"
  reshape_param {
    shape {
       dim: 0
       dim: 64
     dim: 64
     dim: 64
    }
  }
}



#Bx64x64x64 -> Bx (64x64x64)
layer {
  type: "Reshape"
  bottom: "rs_cube_11"
  top: "rs_cube_11_rs"
  name: "rs_cube_11_rs"
  reshape_param {
    shape {
       dim: 0
       dim: 262144
    }
  }
}

#softmax heatmaps = F.softmax(heatmaps, 2)
layer {
   type: "CuDNNSoftmax"
  softmax_param {
     engine: DEFAULT
  }
  bottom: "rs_cube_11_rs"
  top: "rs_cube_11_rs_sm"
  name: "rs_cube_11_rs_sm"
}

layer {
  type: "Reshape"
  bottom: "rs_cube_11_rs_sm"
  top: "pred_cube_11"
  name: "pred_cube_11"
  reshape_param {
    shape {
       dim: 0
       dim: 64
     dim: 64
     dim: 64
    }
  }
}



#Bx64x64x64 -> Bx (64x64x64)
layer {
  type: "Reshape"
  bottom: "rs_cube_12"
  top: "rs_cube_12_rs"
  name: "rs_cube_12_rs"
  reshape_param {
    shape {
       dim: 0
       dim: 262144
    }
  }
}

#softmax heatmaps = F.softmax(heatmaps, 2)
layer {
   type: "CuDNNSoftmax"
  softmax_param {
     engine: DEFAULT
  }
  bottom: "rs_cube_12_rs"
  top: "rs_cube_12_rs_sm"
  name: "rs_cube_12_rs_sm"
}

layer {
  type: "Reshape"
  bottom: "rs_cube_12_rs_sm"
  top: "pred_cube_12"
  name: "pred_cube_12"
  reshape_param {
    shape {
       dim: 0
       dim: 64
     dim: 64
     dim: 64
    }
  }
}



#Bx64x64x64 -> Bx (64x64x64)
layer {
  type: "Reshape"
  bottom: "rs_cube_13"
  top: "rs_cube_13_rs"
  name: "rs_cube_13_rs"
  reshape_param {
    shape {
       dim: 0
       dim: 262144
    }
  }
}

#softmax heatmaps = F.softmax(heatmaps, 2)
layer {
   type: "CuDNNSoftmax"
  softmax_param {
     engine: DEFAULT
  }
  bottom: "rs_cube_13_rs"
  top: "rs_cube_13_rs_sm"
  name: "rs_cube_13_rs_sm"
}

layer {
  type: "Reshape"
  bottom: "rs_cube_13_rs_sm"
  top: "pred_cube_13"
  name: "pred_cube_13"
  reshape_param {
    shape {
       dim: 0
       dim: 64
     dim: 64
     dim: 64
    }
  }
}



#Bx64x64x64 -> Bx (64x64x64)
layer {
  type: "Reshape"
  bottom: "rs_cube_14"
  top: "rs_cube_14_rs"
  name: "rs_cube_14_rs"
  reshape_param {
    shape {
       dim: 0
       dim: 262144
    }
  }
}

#softmax heatmaps = F.softmax(heatmaps, 2)
layer {
   type: "CuDNNSoftmax"
  softmax_param {
     engine: DEFAULT
  }
  bottom: "rs_cube_14_rs"
  top: "rs_cube_14_rs_sm"
  name: "rs_cube_14_rs_sm"
}

layer {
  type: "Reshape"
  bottom: "rs_cube_14_rs_sm"
  top: "pred_cube_14"
  name: "pred_cube_14"
  reshape_param {
    shape {
       dim: 0
       dim: 64
     dim: 64
     dim: 64
    }
  }
}



#Bx64x64x64 -> Bx (64x64x64)
layer {
  type: "Reshape"
  bottom: "rs_cube_15"
  top: "rs_cube_15_rs"
  name: "rs_cube_15_rs"
  reshape_param {
    shape {
       dim: 0
       dim: 262144
    }
  }
}

#softmax heatmaps = F.softmax(heatmaps, 2)
layer {
   type: "CuDNNSoftmax"
  softmax_param {
     engine: DEFAULT
  }
  bottom: "rs_cube_15_rs"
  top: "rs_cube_15_rs_sm"
  name: "rs_cube_15_rs_sm"
}

layer {
  type: "Reshape"
  bottom: "rs_cube_15_rs_sm"
  top: "pred_cube_15"
  name: "pred_cube_15"
  reshape_param {
    shape {
       dim: 0
       dim: 64
     dim: 64
     dim: 64
    }
  }
}





#Bx64x64x64 -> Bx (64x64x64)
layer {
  type: "Reshape"
  bottom: "rs_cube_16"
  top: "rs_cube_16_rs"
  name: "rs_cube_16_rs"
  reshape_param {
    shape {
       dim: 0
       dim: 262144
    }
  }
}

#softmax heatmaps = F.softmax(heatmaps, 2)
layer {
   type: "CuDNNSoftmax"
  softmax_param {
     engine: DEFAULT
  }
  bottom: "rs_cube_16_rs"
  top: "rs_cube_16_rs_sm"
  name: "rs_cube_16_rs_sm"
}

layer {
  type: "Reshape"
  bottom: "rs_cube_16_rs_sm"
  top: "pred_cube_16"
  name: "pred_cube_16"
  reshape_param {
    shape {
       dim: 0
       dim: 64
     dim: 64
     dim: 64
    }
  }
}



#Bx64x64x64 -> Bx (64x64x64)
layer {
  type: "Reshape"
  bottom: "rs_cube_17"
  top: "rs_cube_17_rs"
  name: "rs_cube_17_rs"
  reshape_param {
    shape {
       dim: 0
       dim: 262144
    }
  }
}

#softmax heatmaps = F.softmax(heatmaps, 2)
layer {
   type: "CuDNNSoftmax"
  softmax_param {
     engine: DEFAULT
  }
  bottom: "rs_cube_17_rs"
  top: "rs_cube_17_rs_sm"
  name: "rs_cube_17_rs_sm"
}

layer {
  type: "Reshape"
  bottom: "rs_cube_17_rs_sm"
  top: "pred_cube_17"
  name: "pred_cube_17"
  reshape_param {
    shape {
       dim: 0
       dim: 64
     dim: 64
     dim: 64
    }
  }
}





#Bx64x64x64 -> Bx (64x64x64)
layer {
  type: "Reshape"
  bottom: "rs_cube_18"
  top: "rs_cube_18_rs"
  name: "rs_cube_18_rs"
  reshape_param {
    shape {
       dim: 0
       dim: 262144
    }
  }
}

#softmax heatmaps = F.softmax(heatmaps, 2)
layer {
   type: "CuDNNSoftmax"
  softmax_param {
     engine: DEFAULT
  }
  bottom: "rs_cube_18_rs"
  top: "rs_cube_18_rs_sm"
  name: "rs_cube_18_rs_sm"
}

layer {
  type: "Reshape"
  bottom: "rs_cube_18_rs_sm"
  top: "pred_cube_18"
  name: "pred_cube_18"
  reshape_param {
    shape {
       dim: 0
       dim: 64
     dim: 64
     dim: 64
    }
  }
}



#Bx64x64x64 -> Bx (64x64x64)
layer {
  type: "Reshape"
  bottom: "rs_cube_19"
  top: "rs_cube_19_rs"
  name: "rs_cube_19_rs"
  reshape_param {
    shape {
       dim: 0
       dim: 262144
    }
  }
}

#softmax heatmaps = F.softmax(heatmaps, 2)
layer {
   type: "CuDNNSoftmax"
  softmax_param {
     engine: DEFAULT
  }
  bottom: "rs_cube_19_rs"
  top: "rs_cube_19_rs_sm"
  name: "rs_cube_19_rs_sm"
}

layer {
  type: "Reshape"
  bottom: "rs_cube_19_rs_sm"
  top: "pred_cube_19"
  name: "pred_cube_19"
  reshape_param {
    shape {
       dim: 0
       dim: 64
     dim: 64
     dim: 64
    }
  }
}





#Bx64x64x64 -> Bx (64x64x64)
layer {
  type: "Reshape"
  bottom: "rs_cube_20"
  top: "rs_cube_20_rs"
  name: "rs_cube_20_rs"
  reshape_param {
    shape {
       dim: 0
       dim: 262144
    }
  }
}

#softmax heatmaps = F.softmax(heatmaps, 2)
layer {
   type: "CuDNNSoftmax"
  softmax_param {
     engine: DEFAULT
  }
  bottom: "rs_cube_20_rs"
  top: "rs_cube_20_rs_sm"
  name: "rs_cube_20_rs_sm"
}

layer {
  type: "Reshape"
  bottom: "rs_cube_20_rs_sm"
  top: "pred_cube_20"
  name: "pred_cube_20"
  reshape_param {
    shape {
       dim: 0
       dim: 64
     dim: 64
     dim: 64
    }
  }
}





#----integral x cube_0
layer {
  name: "integral_x_cube_0_vec"
  type: "DeepHandModelIntegralX"
  bottom: "pred_cube_0"
  top: "pred_cube_0_x_vec"  
}

layer {
  name: "integral_x_cube_0_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_0_x_vec"
  top: "pred_cube_0_x"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral y cube_0
layer {
  name: "integral_y_cube_0_vec"
  type: "DeepHandModelIntegralY"
  bottom: "pred_cube_0"
  top: "pred_cube_0_y_vec"  
}

layer {
  name: "integral_y_cube_0_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_0_y_vec"
  top: "pred_cube_0_y"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral z cube_0
layer {
  name: "integral_z_cube_0_vec"
  type: "DeepHandModelIntegralZ"
  bottom: "pred_cube_0"
  top: "pred_cube_0_z_vec"  
}

layer {
  name: "integral_z_cube_0_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_0_z_vec"
  top: "pred_cube_0_z"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}




#----integral x cube_1
layer {
  name: "integral_x_cube_1_vec"
  type: "DeepHandModelIntegralX"
  bottom: "pred_cube_1"
  top: "pred_cube_1_x_vec"  
}

layer {
  name: "integral_x_cube_1_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_1_x_vec"
  top: "pred_cube_1_x"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral y cube_1
layer {
  name: "integral_y_cube_1_vec"
  type: "DeepHandModelIntegralY"
  bottom: "pred_cube_1"
  top: "pred_cube_1_y_vec"  
}

layer {
  name: "integral_y_cube_1_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_1_y_vec"
  top: "pred_cube_1_y"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}




#----integral z cube_1
layer {
  name: "integral_z_cube_1_vec"
  type: "DeepHandModelIntegralZ"
  bottom: "pred_cube_1"
  top: "pred_cube_1_z_vec"  
}

layer {
  name: "integral_z_cube_1_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_1_z_vec"
  top: "pred_cube_1_z"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}







#----integral x cube_2
layer {
  name: "integral_x_cube_2_vec"
  type: "DeepHandModelIntegralX"
  bottom: "pred_cube_2"
  top: "pred_cube_2_x_vec"  
}

layer {
  name: "integral_x_cube_2_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_2_x_vec"
  top: "pred_cube_2_x"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral y cube_2
layer {
  name: "integral_y_cube_2_vec"
  type: "DeepHandModelIntegralY"
  bottom: "pred_cube_2"
  top: "pred_cube_2_y_vec"  
}

layer {
  name: "integral_y_cube_2_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_2_y_vec"
  top: "pred_cube_2_y"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral z cube_2
layer {
  name: "integral_z_cube_2_vec"
  type: "DeepHandModelIntegralZ"
  bottom: "pred_cube_2"
  top: "pred_cube_2_z_vec"  
}

layer {
  name: "integral_z_cube_2_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_2_z_vec"
  top: "pred_cube_2_z"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}




#----integral x cube_3
layer {
  name: "integral_x_cube_3_vec"
  type: "DeepHandModelIntegralX"
  bottom: "pred_cube_3"
  top: "pred_cube_3_x_vec"  
}

layer {
  name: "integral_x_cube_3_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_3_x_vec"
  top: "pred_cube_3_x"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral y cube_3
layer {
  name: "integral_y_cube_3_vec"
  type: "DeepHandModelIntegralY"
  bottom: "pred_cube_3"
  top: "pred_cube_3_y_vec"  
}

layer {
  name: "integral_y_cube_3_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_3_y_vec"
  top: "pred_cube_3_y"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral z cube_3
layer {
  name: "integral_z_cube_3_vec"
  type: "DeepHandModelIntegralZ"
  bottom: "pred_cube_3"
  top: "pred_cube_3_z_vec"  
}

layer {
  name: "integral_z_cube_3_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_3_z_vec"
  top: "pred_cube_3_z"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}




#----integral x cube_4
layer {
  name: "integral_x_cube_4_vec"
  type: "DeepHandModelIntegralX"
  bottom: "pred_cube_4"
  top: "pred_cube_4_x_vec"  
}

layer {
  name: "integral_x_cube_4_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_4_x_vec"
  top: "pred_cube_4_x"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral y cube_4
layer {
  name: "integral_y_cube_4_vec"
  type: "DeepHandModelIntegralY"
  bottom: "pred_cube_4"
  top: "pred_cube_4_y_vec"  
}

layer {
  name: "integral_y_cube_4_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_4_y_vec"
  top: "pred_cube_4_y"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral z cube_4
layer {
  name: "integral_z_cube_4_vec"
  type: "DeepHandModelIntegralZ"
  bottom: "pred_cube_4"
  top: "pred_cube_4_z_vec"  
}

layer {
  name: "integral_z_cube_4_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_4_z_vec"
  top: "pred_cube_4_z"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}




#----integral x cube_5
layer {
  name: "integral_x_cube_5_vec"
  type: "DeepHandModelIntegralX"
  bottom: "pred_cube_5"
  top: "pred_cube_5_x_vec"  
}

layer {
  name: "integral_x_cube_5_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_5_x_vec"
  top: "pred_cube_5_x"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral y cube_5
layer {
  name: "integral_y_cube_5_vec"
  type: "DeepHandModelIntegralY"
  bottom: "pred_cube_5"
  top: "pred_cube_5_y_vec"  
}

layer {
  name: "integral_y_cube_5_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_5_y_vec"
  top: "pred_cube_5_y"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral z cube_5
layer {
  name: "integral_z_cube_5_vec"
  type: "DeepHandModelIntegralZ"
  bottom: "pred_cube_5"
  top: "pred_cube_5_z_vec"  
}

layer {
  name: "integral_z_cube_5_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_5_z_vec"
  top: "pred_cube_5_z"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}



#----integral x cube_6
layer {
  name: "integral_x_cube_6_vec"
  type: "DeepHandModelIntegralX"
  bottom: "pred_cube_6"
  top: "pred_cube_6_x_vec"  
}

layer {
  name: "integral_x_cube_6_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_6_x_vec"
  top: "pred_cube_6_x"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral y cube_6
layer {
  name: "integral_y_cube_6_vec"
  type: "DeepHandModelIntegralY"
  bottom: "pred_cube_6"
  top: "pred_cube_6_y_vec"  
}

layer {
  name: "integral_y_cube_6_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_6_y_vec"
  top: "pred_cube_6_y"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral z cube_6
layer {
  name: "integral_z_cube_6_vec"
  type: "DeepHandModelIntegralZ"
  bottom: "pred_cube_6"
  top: "pred_cube_6_z_vec"  
}

layer {
  name: "integral_z_cube_6_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_6_z_vec"
  top: "pred_cube_6_z"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}






#----integral x cube_7
layer {
  name: "integral_x_cube_7_vec"
  type: "DeepHandModelIntegralX"
  bottom: "pred_cube_7"
  top: "pred_cube_7_x_vec"  
}

layer {
  name: "integral_x_cube_7_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_7_x_vec"
  top: "pred_cube_7_x"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral y cube_7
layer {
  name: "integral_y_cube_7_vec"
  type: "DeepHandModelIntegralY"
  bottom: "pred_cube_7"
  top: "pred_cube_7_y_vec"  
}

layer {
  name: "integral_y_cube_7_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_7_y_vec"
  top: "pred_cube_7_y"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral z cube_7
layer {
  name: "integral_z_cube_7_vec"
  type: "DeepHandModelIntegralZ"
  bottom: "pred_cube_7"
  top: "pred_cube_7_z_vec"  
}

layer {
  name: "integral_z_cube_7_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_7_z_vec"
  top: "pred_cube_7_z"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral x cube_8
layer {
  name: "integral_x_cube_8_vec"
  type: "DeepHandModelIntegralX"
  bottom: "pred_cube_8"
  top: "pred_cube_8_x_vec"  
}

layer {
  name: "integral_x_cube_8_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_8_x_vec"
  top: "pred_cube_8_x"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral y cube_8
layer {
  name: "integral_y_cube_8_vec"
  type: "DeepHandModelIntegralY"
  bottom: "pred_cube_8"
  top: "pred_cube_8_y_vec"  
}

layer {
  name: "integral_y_cube_8_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_8_y_vec"
  top: "pred_cube_8_y"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral z cube_8
layer {
  name: "integral_z_cube_8_vec"
  type: "DeepHandModelIntegralZ"
  bottom: "pred_cube_8"
  top: "pred_cube_8_z_vec"  
}

layer {
  name: "integral_z_cube_8_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_8_z_vec"
  top: "pred_cube_8_z"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}





#----integral x cube_9
layer {
  name: "integral_x_cube_9_vec"
  type: "DeepHandModelIntegralX"
  bottom: "pred_cube_9"
  top: "pred_cube_9_x_vec"  
}

layer {
  name: "integral_x_cube_9_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_9_x_vec"
  top: "pred_cube_9_x"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral y cube_9
layer {
  name: "integral_y_cube_9_vec"
  type: "DeepHandModelIntegralY"
  bottom: "pred_cube_9"
  top: "pred_cube_9_y_vec"  
}

layer {
  name: "integral_y_cube_9_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_9_y_vec"
  top: "pred_cube_9_y"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral z cube_9
layer {
  name: "integral_z_cube_9_vec"
  type: "DeepHandModelIntegralZ"
  bottom: "pred_cube_9"
  top: "pred_cube_9_z_vec"  
}

layer {
  name: "integral_z_cube_9_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_9_z_vec"
  top: "pred_cube_9_z"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}



#----integral x cube_10
layer {
  name: "integral_x_cube_10_vec"
  type: "DeepHandModelIntegralX"
  bottom: "pred_cube_10"
  top: "pred_cube_10_x_vec"  
}

layer {
  name: "integral_x_cube_10_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_10_x_vec"
  top: "pred_cube_10_x"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral y cube_10
layer {
  name: "integral_y_cube_10_vec"
  type: "DeepHandModelIntegralY"
  bottom: "pred_cube_10"
  top: "pred_cube_10_y_vec"  
}

layer {
  name: "integral_y_cube_10_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_10_y_vec"
  top: "pred_cube_10_y"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral z cube_10
layer {
  name: "integral_z_cube_10_vec"
  type: "DeepHandModelIntegralZ"
  bottom: "pred_cube_10"
  top: "pred_cube_10_z_vec"  
}

layer {
  name: "integral_z_cube_10_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_10_z_vec"
  top: "pred_cube_10_z"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}




#----integral x cube_11
layer {
  name: "integral_x_cube_11_vec"
  type: "DeepHandModelIntegralX"
  bottom: "pred_cube_11"
  top: "pred_cube_11_x_vec"  
}

layer {
  name: "integral_x_cube_11_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_11_x_vec"
  top: "pred_cube_11_x"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral y cube_11
layer {
  name: "integral_y_cube_11_vec"
  type: "DeepHandModelIntegralY"
  bottom: "pred_cube_11"
  top: "pred_cube_11_y_vec"  
}

layer {
  name: "integral_y_cube_11_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_11_y_vec"
  top: "pred_cube_11_y"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral z cube_11
layer {
  name: "integral_z_cube_11_vec"
  type: "DeepHandModelIntegralZ"
  bottom: "pred_cube_11"
  top: "pred_cube_11_z_vec"  
}

layer {
  name: "integral_z_cube_11_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_11_z_vec"
  top: "pred_cube_11_z"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral x cube_12
layer {
  name: "integral_x_cube_12_vec"
  type: "DeepHandModelIntegralX"
  bottom: "pred_cube_12"
  top: "pred_cube_12_x_vec"  
}

layer {
  name: "integral_x_cube_12_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_12_x_vec"
  top: "pred_cube_12_x"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral y cube_12
layer {
  name: "integral_y_cube_12_vec"
  type: "DeepHandModelIntegralY"
  bottom: "pred_cube_12"
  top: "pred_cube_12_y_vec"  
}

layer {
  name: "integral_y_cube_12_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_12_y_vec"
  top: "pred_cube_12_y"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral z cube_12
layer {
  name: "integral_z_cube_12_vec"
  type: "DeepHandModelIntegralZ"
  bottom: "pred_cube_12"
  top: "pred_cube_12_z_vec"  
}

layer {
  name: "integral_z_cube_12_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_12_z_vec"
  top: "pred_cube_12_z"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}




#----integral x cube_13
layer {
  name: "integral_x_cube_13_vec"
  type: "DeepHandModelIntegralX"
  bottom: "pred_cube_13"
  top: "pred_cube_13_x_vec"  
}

layer {
  name: "integral_x_cube_13_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_13_x_vec"
  top: "pred_cube_13_x"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral y cube_13
layer {
  name: "integral_y_cube_13_vec"
  type: "DeepHandModelIntegralY"
  bottom: "pred_cube_13"
  top: "pred_cube_13_y_vec"  
}

layer {
  name: "integral_y_cube_13_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_13_y_vec"
  top: "pred_cube_13_y"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral z cube_13
layer {
  name: "integral_z_cube_13_vec"
  type: "DeepHandModelIntegralZ"
  bottom: "pred_cube_13"
  top: "pred_cube_13_z_vec"  
}

layer {
  name: "integral_z_cube_13_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_13_z_vec"
  top: "pred_cube_13_z"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral x cube_14
layer {
  name: "integral_x_cube_14_vec"
  type: "DeepHandModelIntegralX"
  bottom: "pred_cube_14"
  top: "pred_cube_14_x_vec"  
}

layer {
  name: "integral_x_cube_14_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_14_x_vec"
  top: "pred_cube_14_x"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral y cube_14
layer {
  name: "integral_y_cube_14_vec"
  type: "DeepHandModelIntegralY"
  bottom: "pred_cube_14"
  top: "pred_cube_14_y_vec"  
}

layer {
  name: "integral_y_cube_14_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_14_y_vec"
  top: "pred_cube_14_y"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral z cube_14
layer {
  name: "integral_z_cube_14_vec"
  type: "DeepHandModelIntegralZ"
  bottom: "pred_cube_14"
  top: "pred_cube_14_z_vec"  
}

layer {
  name: "integral_z_cube_14_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_14_z_vec"
  top: "pred_cube_14_z"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}




#----integral x cube_15
layer {
  name: "integral_x_cube_15_vec"
  type: "DeepHandModelIntegralX"
  bottom: "pred_cube_15"
  top: "pred_cube_15_x_vec"  
}

layer {
  name: "integral_x_cube_15_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_15_x_vec"
  top: "pred_cube_15_x"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral y cube_15
layer {
  name: "integral_y_cube_15_vec"
  type: "DeepHandModelIntegralY"
  bottom: "pred_cube_15"
  top: "pred_cube_15_y_vec"  
}

layer {
  name: "integral_y_cube_15_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_15_y_vec"
  top: "pred_cube_15_y"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral z cube_15
layer {
  name: "integral_z_cube_15_vec"
  type: "DeepHandModelIntegralZ"
  bottom: "pred_cube_15"
  top: "pred_cube_15_z_vec"  
}

layer {
  name: "integral_z_cube_15_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_15_z_vec"
  top: "pred_cube_15_z"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}





#----integral x cube_16
layer {
  name: "integral_x_cube_16_vec"
  type: "DeepHandModelIntegralX"
  bottom: "pred_cube_16"
  top: "pred_cube_16_x_vec"  
}

layer {
  name: "integral_x_cube_16_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_16_x_vec"
  top: "pred_cube_16_x"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral y cube_16
layer {
  name: "integral_y_cube_16_vec"
  type: "DeepHandModelIntegralY"
  bottom: "pred_cube_16"
  top: "pred_cube_16_y_vec"  
}

layer {
  name: "integral_y_cube_16_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_16_y_vec"
  top: "pred_cube_16_y"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral z cube_16
layer {
  name: "integral_z_cube_16_vec"
  type: "DeepHandModelIntegralZ"
  bottom: "pred_cube_16"
  top: "pred_cube_16_z_vec"  
}

layer {
  name: "integral_z_cube_16_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_16_z_vec"
  top: "pred_cube_16_z"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}







#----integral x cube_17
layer {
  name: "integral_x_cube_17_vec"
  type: "DeepHandModelIntegralX"
  bottom: "pred_cube_17"
  top: "pred_cube_17_x_vec"  
}

layer {
  name: "integral_x_cube_17_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_17_x_vec"
  top: "pred_cube_17_x"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral y cube_17
layer {
  name: "integral_y_cube_17_vec"
  type: "DeepHandModelIntegralY"
  bottom: "pred_cube_17"
  top: "pred_cube_17_y_vec"  
}

layer {
  name: "integral_y_cube_17_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_17_y_vec"
  top: "pred_cube_17_y"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral z cube_17
layer {
  name: "integral_z_cube_17_vec"
  type: "DeepHandModelIntegralZ"
  bottom: "pred_cube_17"
  top: "pred_cube_17_z_vec"  
}

layer {
  name: "integral_z_cube_17_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_17_z_vec"
  top: "pred_cube_17_z"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}





#----integral x cube_18
layer {
  name: "integral_x_cube_18_vec"
  type: "DeepHandModelIntegralX"
  bottom: "pred_cube_18"
  top: "pred_cube_18_x_vec"  
}

layer {
  name: "integral_x_cube_18_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_18_x_vec"
  top: "pred_cube_18_x"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral y cube_18
layer {
  name: "integral_y_cube_18_vec"
  type: "DeepHandModelIntegralY"
  bottom: "pred_cube_18"
  top: "pred_cube_18_y_vec"  
}

layer {
  name: "integral_y_cube_18_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_18_y_vec"
  top: "pred_cube_18_y"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral z cube_18
layer {
  name: "integral_z_cube_18_vec"
  type: "DeepHandModelIntegralZ"
  bottom: "pred_cube_18"
  top: "pred_cube_18_z_vec"  
}

layer {
  name: "integral_z_cube_18_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_18_z_vec"
  top: "pred_cube_18_z"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}






#----integral x cube_19
layer {
  name: "integral_x_cube_19_vec"
  type: "DeepHandModelIntegralX"
  bottom: "pred_cube_19"
  top: "pred_cube_19_x_vec"  
}

layer {
  name: "integral_x_cube_19_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_19_x_vec"
  top: "pred_cube_19_x"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral y cube_19
layer {
  name: "integral_y_cube_19_vec"
  type: "DeepHandModelIntegralY"
  bottom: "pred_cube_19"
  top: "pred_cube_19_y_vec"  
}

layer {
  name: "integral_y_cube_19_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_19_y_vec"
  top: "pred_cube_19_y"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral z cube_19
layer {
  name: "integral_z_cube_19_vec"
  type: "DeepHandModelIntegralZ"
  bottom: "pred_cube_19"
  top: "pred_cube_19_z_vec"  
}

layer {
  name: "integral_z_cube_19_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_19_z_vec"
  top: "pred_cube_19_z"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}





#----integral x cube_20
layer {
  name: "integral_x_cube_20_vec"
  type: "DeepHandModelIntegralX"
  bottom: "pred_cube_20"
  top: "pred_cube_20_x_vec"  
}

layer {
  name: "integral_x_cube_20_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_20_x_vec"
  top: "pred_cube_20_x"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}


#----integral y cube_20
layer {
  name: "integral_y_cube_20_vec"
  type: "DeepHandModelIntegralY"
  bottom: "pred_cube_20"
  top: "pred_cube_20_y_vec"  
}

layer {
  name: "integral_y_cube_20_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_20_y_vec"
  top: "pred_cube_20_y"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}

#----integral z cube_20
layer {
  name: "integral_z_cube_20_vec"
  type: "DeepHandModelIntegralZ"
  bottom: "pred_cube_20"
  top: "pred_cube_20_z_vec"  
}

layer {
  name: "integral_z_cube_20_vaue"
  type: "DeepHandModelIntegralVector"
  bottom: "pred_cube_20_z_vec"
  top: "pred_cube_20_z"  
  deep_hand_model_integral_vector_param { 
     dim_lb: 0.0
   dim_ub: 64.0
  }
}






#=====get integral 2D from 3D heatmap

layer {
  name: "gen_pred_joint_2d_fr_3d_hm"
  type: "Concat"
  bottom: "pred_cube_0_x"
  bottom: "pred_cube_0_y"
  bottom: "pred_cube_1_x"
  bottom: "pred_cube_1_y"
  bottom: "pred_cube_2_x"
  bottom: "pred_cube_2_y"
  bottom: "pred_cube_3_x"
  bottom: "pred_cube_3_y"
  bottom: "pred_cube_4_x"
  bottom: "pred_cube_4_y"
  bottom: "pred_cube_5_x"
  bottom: "pred_cube_5_y"
  bottom: "pred_cube_6_x"
  bottom: "pred_cube_6_y"
  bottom: "pred_cube_7_x"
  bottom: "pred_cube_7_y"
  bottom: "pred_cube_8_x"
  bottom: "pred_cube_8_y"
  bottom: "pred_cube_9_x"
  bottom: "pred_cube_9_y"
  bottom: "pred_cube_10_x"
  bottom: "pred_cube_10_y"
  bottom: "pred_cube_11_x"
  bottom: "pred_cube_11_y"
  bottom: "pred_cube_12_x"
  bottom: "pred_cube_12_y"
  bottom: "pred_cube_13_x"
  bottom: "pred_cube_13_y"
  bottom: "pred_cube_14_x"
  bottom: "pred_cube_14_y"
  bottom: "pred_cube_15_x"
  bottom: "pred_cube_15_y"
  bottom: "pred_cube_16_x"
  bottom: "pred_cube_16_y"
  bottom: "pred_cube_17_x"
  bottom: "pred_cube_17_y"
  bottom: "pred_cube_18_x"
  bottom: "pred_cube_18_y"
  bottom: "pred_cube_19_x"
  bottom: "pred_cube_19_y"
  bottom: "pred_cube_20_x"
  bottom: "pred_cube_20_y"
  top: "pred_joint_2d_int"
}




layer {
  name: "scale_pred_joint_2d"
  bottom: "pred_joint_2d_int"
  top: "pred_joint_2d_int_scale"
  type: "ScaleVector"
  scale_vector_param {
     scale_factor: 0.015625
  }
 
}


layer {
  bottom: "pred_joint_2d_int_scale"
  bottom: "aug_joint_2d_local"
  top: "checkgtint2d"
  name: "checkgtint2d"
  type: "EuclideanLoss"
  loss_weight: 0.0
}

layer {
  bottom: "aug_joint_2d_local"
  top: "aug_joint_2d_local_scale"
  type: "ScaleVector"
  scale_vector_param {
     scale_factor: 64.0
  }
}


layer {
 name: "sub_xy"
 top: "sub_xy"
 bottom: "pred_joint_2d_int"
 bottom: "aug_joint_2d_local_scale"
 type: "TwoVectorSubtract"
 universal_param {
    take_abs: true
 }
}



#--------------pred joint 3d max
layer {
  name: "slice_sub_xy"
  type: "Slice"
  bottom: "sub_xy"
  top: "sub_xy_0"
  top: "sub_xy_1"
  top: "sub_xy_2"
  top: "sub_xy_3"
  top: "sub_xy_4"
  top: "sub_xy_5"
  top: "sub_xy_6"
  top: "sub_xy_7"
  top: "sub_xy_8"
  top: "sub_xy_9"
  top: "sub_xy_10"
  top: "sub_xy_11"
  top: "sub_xy_12"
  top: "sub_xy_13"
  top: "sub_xy_14"
  top: "sub_xy_15"
  top: "sub_xy_16"
  top: "sub_xy_17"
  top: "sub_xy_18"
  top: "sub_xy_19"
  top: "sub_xy_20"
  slice_param {
     axis: 1
   slice_point: 2
   slice_point: 4
   slice_point: 6
   slice_point: 8
   slice_point: 10
   slice_point: 12
   slice_point: 14
   slice_point: 16
   slice_point: 18
   slice_point: 20
   slice_point: 22
   slice_point: 24
   slice_point: 26
   slice_point: 28
   slice_point: 30
   slice_point: 32
   slice_point: 34
   slice_point: 36
   slice_point: 38
   slice_point: 40
  }  
}



layer {
  name: "gen_pred_depth_fr_3d_hm"
  type: "Concat"
  bottom: "pred_cube_0_z"  
  bottom: "pred_cube_1_z"  
  bottom: "pred_cube_2_z"  
  bottom: "pred_cube_3_z"  
  bottom: "pred_cube_4_z"  
  bottom: "pred_cube_5_z"  
  bottom: "pred_cube_6_z"  
  bottom: "pred_cube_7_z"  
  bottom: "pred_cube_8_z"  
  bottom: "pred_cube_9_z"  
  bottom: "pred_cube_10_z"  
  bottom: "pred_cube_11_z"  
  bottom: "pred_cube_12_z"  
  bottom: "pred_cube_13_z"  
  bottom: "pred_cube_14_z"  
  bottom: "pred_cube_15_z" 
  bottom: "pred_cube_16_z" 
  bottom: "pred_cube_17_z" 
  bottom: "pred_cube_18_z" 
  bottom: "pred_cube_19_z" 
  bottom: "pred_cube_20_z" 
  top: "pred_depth_int"
}

#[0, 1] * 2 - 1

#[-1, 1] + 1 / 2
layer {
  name: "scale_pred_depth_int"
  bottom: "pred_depth_int"
  top: "pred_depth_int_scale"
  type: "ScaleVector"
  scale_vector_param {
     scale_factor: 0.015625
  }
}

layer {
  name: "mul_pred_depth_int"
  bottom: "pred_depth_int_scale"
  top: "pred_depth_int_scale_mul"
  type: "ScaleVector"
  scale_vector_param {
    scale_factor: 2.0
  }
}

layer {
  name: "minus_pred_depth_int"
  bottom: "pred_depth_int_scale_mul"
  top:  "pred_depth_int_scale_minus"
  type: "AddVectorByConstant"
  add_vector_by_constant_param {
     add_value: -1
  }
}


#[-1, 1]
layer {
  bottom: "pred_depth_int_scale_minus"
  bottom: "gt_depth"
  top: "checkgtdepth"
  name: "checkgtdepth"
  type: "EuclideanLoss"
  loss_weight: 0.0
}




#[-1, 1] + 1 / 2

layer {
  name: "gt_depth_add"
  bottom: "gt_depth"
  top:  "gt_depth_add"
  type: "AddVectorByConstant"
  add_vector_by_constant_param {
     add_value: 1
  }
}

layer {
  name: "scale_gt_depth_add"
  bottom: "gt_depth_add"
  top: "scale_gt_depth_add"
  type: "ScaleVector"
  scale_vector_param {
     scale_factor: 32
  }
}


layer {
 name: "sub_z"
 top: "sub_z"
 bottom: "pred_depth_int"
 bottom: "scale_gt_depth_add"
 type: "TwoVectorSubtract"
 universal_param {
    take_abs: true
 }
}


#--------------
layer {
  name: "slice_sub_z"
  type: "Slice"
  bottom: "sub_z"
  top: "sub_z_0"
  top: "sub_z_1"
  top: "sub_z_2"
  top: "sub_z_3"
  top: "sub_z_4"
  top: "sub_z_5"
  top: "sub_z_6"
  top: "sub_z_7"
  top: "sub_z_8"
  top: "sub_z_9"
  top: "sub_z_10"
  top: "sub_z_11"
  top: "sub_z_12"
  top: "sub_z_13"
  top: "sub_z_14"
  top: "sub_z_15"
  top: "sub_z_16"
  top: "sub_z_17"
  top: "sub_z_18"
  top: "sub_z_19"
  top: "sub_z_20"
  
  slice_param {
     axis: 1
   slice_point: 1
   slice_point: 2
   slice_point: 3
   slice_point: 4
   slice_point: 5
   slice_point: 6
   slice_point: 7
   slice_point: 8
   slice_point: 9
   slice_point: 10
   slice_point: 11
   slice_point: 12
   slice_point: 13
   slice_point: 14
   slice_point: 15   
   slice_point: 16
   slice_point: 17
   slice_point: 18
   slice_point: 19
   slice_point: 20
  }  
}



layer {
  type: "Concat"
  bottom: "sub_xy_0"
  bottom: "sub_z_0"
  bottom: "sub_xy_1"
  bottom: "sub_z_1"
  bottom: "sub_xy_2"
  bottom: "sub_z_2"
  bottom: "sub_xy_3"
  bottom: "sub_z_3"
  bottom: "sub_xy_4"
  bottom: "sub_z_4"
  bottom: "sub_xy_5"
  bottom: "sub_z_5"
  bottom: "sub_xy_6"
  bottom: "sub_z_6"
  bottom: "sub_xy_7"
  bottom: "sub_z_7"
  bottom: "sub_xy_8"
  bottom: "sub_z_8"
  bottom: "sub_xy_9"
  bottom: "sub_z_9"
  bottom: "sub_xy_10"
  bottom: "sub_z_10"
  bottom: "sub_xy_11"
  bottom: "sub_z_11"
  bottom: "sub_xy_12"
  bottom: "sub_z_12"
  bottom: "sub_xy_13"
  bottom: "sub_z_13"
  bottom: "sub_xy_14"
  bottom: "sub_z_14"
  bottom: "sub_xy_15"
  bottom: "sub_z_15"
  bottom: "sub_xy_16"
  bottom: "sub_z_16"
  bottom: "sub_xy_17"
  bottom: "sub_z_17"
  
  bottom: "sub_xy_18"
  bottom: "sub_z_18"
  bottom: "sub_xy_19"
  bottom: "sub_z_19"
  bottom: "sub_xy_20"
  bottom: "sub_z_20"
  top: "sub_xyz"
  name: "sub_xyz"
}







layer {
  type: "JointAbsLoss"
  bottom: "sub_xyz"
  top: "zabsloss"
  name: "zabsloss"
  loss_weight: 1.0

}




layer {
  type: "Concat"
  bottom: "loc_xy_0"
  bottom: "loc_xy_1"
  bottom: "loc_xy_2"
  bottom: "loc_xy_3"
  bottom: "loc_xy_4"
  bottom: "loc_xy_5"
  bottom: "loc_xy_6"
  bottom: "loc_xy_7"
  bottom: "loc_xy_8"
  bottom: "loc_xy_9"
  bottom: "loc_xy_10"
  bottom: "loc_xy_11"
  bottom: "loc_xy_12"
  bottom: "loc_xy_13"
  bottom: "loc_xy_14"
  bottom: "loc_xy_15"
  bottom: "loc_xy_16"
  bottom: "loc_xy_17"
  bottom: "loc_xy_18"
  bottom: "loc_xy_19"
  bottom: "loc_xy_20"
  top: "gt_xy"
  name: "gt_xy"
}



layer {
  bottom: "gt_xy"
  bottom: "gt_xy"
  top: "gt_xynothing"
  name: "gt_xynothing"
  type: "EuclideanLoss"
  loss_weight: 0.0
}




#------local 2 global 3d 
layer {
  name: "get_pred_global_3d"
  type: "DeepHandModelProjectionLocal2Global3D"
  bottom: "pred_joint_2d_int_scale"
  bottom: "pred_depth_int_scale_minus"
  bottom: "ext_bbx_x1"
  bottom: "ext_bbx_y1"
  bottom: "min_z"
  bottom: "ext_bbx_x2"
  bottom: "ext_bbx_y2"
  bottom: "max_z"
  top: "pred_joint_3d_global"
}





#------Visualize predicted joint on the map
layer {
  name: "vis_pred_joint"
  type: "DeepHandModelOutputJointOnSkeletonMap"
  
  bottom: "depth"  
  bottom: "aug_depth_img"
  bottom: "image_index"
  bottom: "pred_joint_2d_int_scale"
  bottom: "aug_joint_2d_local"
  
  deep_hand_model_output_joint_on_skeleton_param {
	use_raw_rgb_image: false
	read_from_disk: false
	
	show_gt: false
	save_path: "t/"
	save_size: 256
	
	skeleton_size: 256
	load_skeleton: true
	alpha: 255
	beta: 0
  }
  
}


#[0, 200]
layer {
  type: "ScaleVector"
  bottom: "pred_joint_2d_int_scale"
  top: "pred_joint_2d_int_scale_200"
  name: "pred_joint_2d_int_scale_200"
  scale_vector_param {
     scale_factor: 200.0
  }
}


layer {
  name: "aug_joint_2d_local_s"
  bottom: "aug_joint_2d_local"
  top: "aug_joint_2d_local_s"
  type: "ScaleVector"
  scale_vector_param {
     scale_factor: 200.0
  }
}

#[-100, 100]
layer {
  name: "pred_depth_int_scale_minus_100"
  bottom: "pred_depth_int_scale_minus"
  top: "pred_depth_int_scale_minus_100"
  type: "ScaleVector"
  scale_vector_param {
    scale_factor: 100.0
  }
}


#[-100, 100]
layer {
  name: "gt_depth_s"
  bottom: "gt_depth"
  top: "gt_depth_s"
  type: "ScaleVector"
  scale_vector_param {
     scale_factor: 100.0
  }
}

#3d bm from joint (img coordinate + depth)
layer {
  type: "DeepHandModelGen3DSkeletonMapPerChannel"
  bottom: "pred_joint_2d_int_scale_200"
  bottom: "pred_depth_int_scale_minus_100"
  top: "pred_3dbm"
  name: "pred_3dbm"
  gen_3d_skeleton_map_param {
     x_lb: 0.0
	 x_ub: 200.0
	 y_lb: 0.0
	 y_ub: 200.0
	 z_lb: -100.0
	 z_ub: 100.0
	 depth_dims: 32
	 map_size: 32
	 line_width: 3
	 endpoint_dist_threshold: 3
     color_label_option: 0	 
	 
	 dot_product: true 
	 gamma: 0.1
	 
	 perform_backprop: true
  }
}


layer {
  type: "DeepHandModelGen3DSkeletonMapPerChannel"
  bottom: "aug_joint_2d_local_s"
  bottom: "gt_depth_s"
  top: "label_3dbm"
  name: "label_3dbm"
  gen_3d_skeleton_map_param {
     x_lb: 0.0
	 x_ub: 200.0
	 y_lb: 0.0
	 y_ub: 200.0
	 z_lb: -100.0
	 z_ub: 100.0
	 depth_dims: 32
	 map_size: 32
	 line_width: 3
	 endpoint_dist_threshold: 3
     color_label_option: 0	 
	 
	 dot_product: true 
	 gamma: 0.1
  }
}



#layer {
#  bottom: "pred_3dbm"
#  bottom: "label_3dbm"
#  top: "zloss_3dbm_l2"
#  name: "zloss_3dbm_l2"
#  type: "EuclideanLoss"
#  loss_weight: 0.0
#}



layer {
  bottom: "pred_3dbm"
  bottom: "label_3dbm"
  top: "zloss_3dbm_l1"
  name: "zloss_3dbm_l1"
  type: "SmoothL1Loss"
  loss_weight: 0.00
}







#=====output 3d ske per channel 


#layer {
#  bottom: "label_3dbm"
#  top: "heatmap_3dbm_flat"
#  name: "heatmap_3dbm_flat"
#  type: "Flatten"
#  
#}



#layer {
#  type: "OutputBlob"
#  bottom: "heatmap_3dbm_flat"
#  bottom: "image_index"
#  output_blob_param {
#      save_path: "g/"
#	  blob_name: "g"
#	  if_per_section_output: true
#	  per_section_row_num: 64
#	  per_section_col_num: 64
#   }
#}




#show mpjpe pred 2 gt 
layer {
  bottom: "pred_joint_3d_global"
  bottom: "aug_joint_3d_global"
  top: "zmpjpe    "
  name: "zmpjpe"
  type: "Joint3DSquareRootLoss"
  loss_weight: 0.0
}










layer {
  bottom: "aug_depth_img"
  top: "aug_depth_img_0"
  top: "aug_depth_img_1"
  top: "aug_depth_img_2"
  type: "Slice"
  name: "slice_depth"
  slice_param {
    axis: 1
	slice_point: 1
	slice_point: 2
  }
}

layer {
  bottom: "aug_depth_img_1"
  bottom: "aug_depth_img_2"
  name: "aug_depth_img_nothing_"
  top: "aug_depth_img_nothing_"
  loss_weight: 0.0
  type: "EuclideanLoss"
}




layer {
  name: "scale_pred_joint_2d_256"
  bottom: "pred_joint_2d_int"
  top: "pred_joint_2d_int_256"
  type: "ScaleVector"
  scale_vector_param {
     scale_factor: 4
  }
 
}


layer {
  type: "DeepHandModelGenBonePatchAll"
  bottom: "pred_joint_2d_int_256"
  bottom: "aug_depth_img_0"
  top: "bone_patch"
  name: "bone_patch"
  deep_hand_model_gen_bone_patch_param {
     img_size: 256
	 extend_ratio: 1.5
	 resize_size: 96
	 alpha: 255
	 beta: 0
	 min_wh: 10
	 line_width: 100
  }
}

#layer {
#  bottom: "bone_patch"
#  bottom: "image_index"
#  type: "OutputHeatmapAllChannels"
#  output_heatmap_param {
#     save_path: "p/"
#	 save_size: 256
#	 heatmap_size: 96
#  }
#}


#layer {
#  bottom: "aug_depth_img"
#  bottom: "image_index"
#  type: "OutputHeatmapOneChannel"
#  output_heatmap_param {
#     save_path: "d/"
#	 save_size: 256
#	 heatmap_size: 256
#	 save_size_h: 256
#	 save_size_w: 256
#  }
#}

#gt bone 
layer {
  bottom: "aug_joint_3d_global"
  top: "gt_bone"
  name: "gt_bone"
  type: "DeepHandModelJoint2Bone"
}

#pred bone 
layer {
  bottom: "pred_joint_3d_global"
  top: "pred_bone"
  name: "pred_bone"
  type: "DeepHandModelJoint2Bone"
}


#layer {
#  type: "IdentityVectorNoGradient"
#  bottom: "pred_bone"
#  top: "pred_bone_nograd"
#  name: "pred_bone_nograd"
#}


layer {
  type: "ScaleVector"
  bottom: "pred_bone"
  top: "pred_bone_nograd"
  name: "pred_bone_nograd"
  scale_vector_param {
     scale_factor: 1.0
  }
}


#gt bone - pred bone 
layer {
  type: "TwoVectorSubtract"
  bottom: "gt_bone"
  bottom: "pred_bone_nograd"
  top: "residual_bone"
  name: "residual_bone"
}



#slice residual bone 20 * 3



#slice pred bone 20 * 3

layer {
  bottom: "pred_bone_nograd"
  top: "pred_bone_0"
  top: "pred_bone_1"
  top: "pred_bone_2"
  top: "pred_bone_3"
  top: "pred_bone_4"
  top: "pred_bone_5"
  top: "pred_bone_6"
  top: "pred_bone_7"
  top: "pred_bone_8"
  top: "pred_bone_9"
  top: "pred_bone_10"
  top: "pred_bone_11"
  top: "pred_bone_12"
  top: "pred_bone_13"
  top: "pred_bone_14"
  top: "pred_bone_15"
  top: "pred_bone_16"
  top: "pred_bone_17"
  top: "pred_bone_18"
  top: "pred_bone_19"
  type: "Slice"
  name: "slice_pred_bone"
  slice_param {
    axis: 1
	slice_point: 3
	slice_point: 6
	slice_point: 9
	slice_point: 12
	slice_point: 15
	slice_point: 18
	slice_point: 21
	slice_point: 24
	slice_point: 27
	slice_point: 30
	slice_point: 33
	slice_point: 36
	slice_point: 39
	slice_point: 42
	slice_point: 45
	slice_point: 48
	slice_point: 51
	slice_point: 54
	slice_point: 57
  }
}




#====Hands Deep per-bone refinement



#slice bone patches 20 bones in total 

layer {
  bottom: "bone_patch"
  top: "bone_patch_0"
  top: "bone_patch_1"
  top: "bone_patch_2"
  top: "bone_patch_3"
  top: "bone_patch_4"
  top: "bone_patch_5"
  top: "bone_patch_6"
  top: "bone_patch_7"
  top: "bone_patch_8"
  top: "bone_patch_9"
  top: "bone_patch_10"
  top: "bone_patch_11"
  top: "bone_patch_12"
  top: "bone_patch_13"
  top: "bone_patch_14"
  top: "bone_patch_15"
  top: "bone_patch_16"
  top: "bone_patch_17"
  top: "bone_patch_18"
  top: "bone_patch_19"
  type: "Slice"
  name: "slice_bone_patch"
  slice_param {
    axis: 1
	slice_point: 1
	slice_point: 2
	slice_point: 3
	slice_point: 4
	slice_point: 5
	slice_point: 6
	slice_point: 7
	slice_point: 8
	slice_point: 9
	slice_point: 10
	slice_point: 11
	slice_point: 12
	slice_point: 13
	slice_point: 14
	slice_point: 15
	slice_point: 16
	slice_point: 17
	slice_point: 18
	slice_point: 19
  }
}










###resbone_0

layer {
  bottom: "bone_patch_0"
  top: "conv1_0"
  name: "conv1_0"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv1_0"
    top: "conv1_0"
    name: "bn_conv1_0"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv1_0"
    top: "conv1_0"
    name: "scale_conv1_0"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1_0"
    top: "conv1_0"
    name: "conv1_relu_0"
    type: "ReLU"
}

layer {
    bottom: "conv1_0"
    top: "pool1_0"
    name: "pool1_0"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_0"
    top: "bone_patch_0_half"
    name: "bone_patch_0_half"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: AVE
    }
}




layer {
  bottom: "bone_patch_0_half"
  top: "conv2_0"
  name: "conv2_0"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv2_0"
    top: "conv2_0"
    name: "bn_conv2_0"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv2_0"
    top: "conv2_0"
    name: "scale_conv2_0"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv2_0"
    top: "conv2_0"
    name: "conv2_relu_0"
    type: "ReLU"
}

layer {
    bottom: "conv2_0"
    top: "pool2_0"
    name: "pool2_0"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_0"
    top: "bone_patch_0_quarter"
    name: "bone_patch_0_quarter"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: AVE
    }
}







layer {
  bottom: "bone_patch_0_quarter"
  top: "conv3_0"
  name: "conv3_0"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}



layer {
    bottom: "conv3_0"
    top: "conv3_0"
    name: "bn_conv3_0"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv3_0"
    top: "conv3_0"
    name: "scale_conv3_0"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv3_0"
    top: "conv3_0"
    name: "conv3_relu_0"
    type: "ReLU"
}

layer {
  type: "Flatten"
  bottom: "pool1_0"
  top: "pool1_flat_0"
  name: "pool1_flat_0"
}



layer {
  type: "Flatten"
  bottom: "pool2_0"
  top: "pool2_flat_0"
  name: "pool2_flat_0"
}


layer {
  type: "Flatten"
  bottom: "conv3_0"
  top: "conv3_flat_0"
  name: "conv3_flat_0"
}

layer {
  type: "Concat"
  bottom: "pool1_flat_0"
  bottom: "pool2_flat_0"
  bottom: "conv3_flat_0"
 
  name: "fc_input_0"
  top: "fc_input_0"
}




layer {
  name: "FC1_0"
  type: "InnerProduct"
  bottom: "fc_input_0"
  top: "FC1_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}


layer {
  name: "batch_FC1norm1_0"
  type: "BatchNorm"
  bottom: "FC1_0"
  top: "batch_norm_FC1blob1_0"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_0"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_0"
  top: "batch_norm_FC1blob1_0"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_0"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_0"
  top: "FC1_relu_0"
}






#======FC branch for pred bone 0
#3x128
layer {
  name: "FC1_pred_0"
  type: "InnerProduct"
  bottom: "pred_bone_0"
  top: "FC1_pred_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC1norm1_pred_0"
  type: "BatchNorm"
  bottom: "FC1_pred_0"
  top: "batch_norm_FC1blob1_pred_0"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_pred_0"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_pred_0"
  top: "batch_norm_FC1blob1_pred_0"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_pred_0"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_pred_0"
  top: "FC1_relu_pred_0"
}


#128x256

layer {
  name: "FC2_pred_0"
  type: "InnerProduct"
  bottom: "FC1_relu_pred_0"
  top: "FC2_pred_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC2norm1_pred_0"
  type: "BatchNorm"
  bottom: "FC2_pred_0"
  top: "batch_norm_FC2blob1_pred_0"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC2scale1_pred_0"
  type: "Scale"
  bottom: "batch_norm_FC2blob1_pred_0"
  top: "batch_norm_FC2blob1_pred_0"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC2_ReLU_pred_0"
  type: "ReLU"
  bottom: "batch_norm_FC2blob1_pred_0"
  top: "FC2_relu_pred_0"
}



#256x256

layer {
  name: "FC3_pred_0"
  type: "InnerProduct"
  bottom: "FC2_relu_pred_0"
  top: "FC3_pred_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC3norm1_pred_0"
  type: "BatchNorm"
  bottom: "FC3_pred_0"
  top: "batch_norm_FC3blob1_pred_0"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC3scale1_pred_0"
  type: "Scale"
  bottom: "batch_norm_FC3blob1_pred_0"
  top: "batch_norm_FC3blob1_pred_0"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC3_ReLU_pred_0"
  type: "ReLU"
  bottom: "batch_norm_FC3blob1_pred_0"
  top: "FC3_relu_pred_0"
}



#256x1024

layer {
  name: "FC4_pred_0"
  type: "InnerProduct"
  bottom: "FC3_relu_pred_0"
  top: "FC4_pred_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC4norm1_pred_0"
  type: "BatchNorm"
  bottom: "FC4_pred_0"
  top: "batch_norm_FC4blob1_pred_0"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC4scale1_pred_0"
  type: "Scale"
  bottom: "batch_norm_FC4blob1_pred_0"
  top: "batch_norm_FC4blob1_pred_0"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC4_ReLU_pred_0"
  type: "ReLU"
  bottom: "batch_norm_FC4blob1_pred_0"
  top: "FC4_relu_pred_0"
}


#concat patch branch and pred branch 1024-d
layer {
  type: "Concat"
  bottom: "FC4_relu_pred_0"
  bottom: "FC1_relu_0"
  top: "concat_intermediate_0"
  name: "concat_intermediate_0"
}





layer {
  name: "pred_residual_0"
  type: "InnerProduct"
  bottom: "concat_intermediate_0"
  top: "pred_residual_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
       type: "gaussian"
       std: 0.01
    }
  }
}







###resbone_1

layer {
  bottom: "bone_patch_1"
  top: "conv1_1"
  name: "conv1_1"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv1_1"
    top: "conv1_1"
    name: "bn_conv1_1"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv1_1"
    top: "conv1_1"
    name: "scale_conv1_1"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1_1"
    top: "conv1_1"
    name: "conv1_relu_1"
    type: "ReLU"
}

layer {
    bottom: "conv1_1"
    top: "pool1_1"
    name: "pool1_1"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_1"
    top: "bone_patch_1_half"
    name: "bone_patch_1_half"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: AVE
    }
}




layer {
  bottom: "bone_patch_1_half"
  top: "conv2_1"
  name: "conv2_1"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv2_1"
    top: "conv2_1"
    name: "bn_conv2_1"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv2_1"
    top: "conv2_1"
    name: "scale_conv2_1"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv2_1"
    top: "conv2_1"
    name: "conv2_relu_1"
    type: "ReLU"
}

layer {
    bottom: "conv2_1"
    top: "pool2_1"
    name: "pool2_1"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_1"
    top: "bone_patch_1_quarter"
    name: "bone_patch_1_quarter"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: AVE
    }
}







layer {
  bottom: "bone_patch_1_quarter"
  top: "conv3_1"
  name: "conv3_1"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}



layer {
    bottom: "conv3_1"
    top: "conv3_1"
    name: "bn_conv3_1"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv3_1"
    top: "conv3_1"
    name: "scale_conv3_1"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv3_1"
    top: "conv3_1"
    name: "conv3_relu_1"
    type: "ReLU"
}

layer {
  type: "Flatten"
  bottom: "pool1_1"
  top: "pool1_flat_1"
  name: "pool1_flat_1"
}



layer {
  type: "Flatten"
  bottom: "pool2_1"
  top: "pool2_flat_1"
  name: "pool2_flat_1"
}


layer {
  type: "Flatten"
  bottom: "conv3_1"
  top: "conv3_flat_1"
  name: "conv3_flat_1"
}

layer {
  type: "Concat"
  bottom: "pool1_flat_1"
  bottom: "pool2_flat_1"
  bottom: "conv3_flat_1"
 
  name: "fc_input_1"
  top: "fc_input_1"
}




layer {
  name: "FC1_1"
  type: "InnerProduct"
  bottom: "fc_input_1"
  top: "FC1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}


layer {
  name: "batch_FC1norm1_1"
  type: "BatchNorm"
  bottom: "FC1_1"
  top: "batch_norm_FC1blob1_1"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_1"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_1"
  top: "batch_norm_FC1blob1_1"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_1"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_1"
  top: "FC1_relu_1"
}






#======FC branch for pred bone 0
#3x128
layer {
  name: "FC1_pred_1"
  type: "InnerProduct"
  bottom: "pred_bone_1"
  top: "FC1_pred_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC1norm1_pred_1"
  type: "BatchNorm"
  bottom: "FC1_pred_1"
  top: "batch_norm_FC1blob1_pred_1"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_pred_1"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_pred_1"
  top: "batch_norm_FC1blob1_pred_1"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_pred_1"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_pred_1"
  top: "FC1_relu_pred_1"
}


#128x256

layer {
  name: "FC2_pred_1"
  type: "InnerProduct"
  bottom: "FC1_relu_pred_1"
  top: "FC2_pred_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC2norm1_pred_1"
  type: "BatchNorm"
  bottom: "FC2_pred_1"
  top: "batch_norm_FC2blob1_pred_1"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC2scale1_pred_1"
  type: "Scale"
  bottom: "batch_norm_FC2blob1_pred_1"
  top: "batch_norm_FC2blob1_pred_1"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC2_ReLU_pred_1"
  type: "ReLU"
  bottom: "batch_norm_FC2blob1_pred_1"
  top: "FC2_relu_pred_1"
}



#256x256

layer {
  name: "FC3_pred_1"
  type: "InnerProduct"
  bottom: "FC2_relu_pred_1"
  top: "FC3_pred_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC3norm1_pred_1"
  type: "BatchNorm"
  bottom: "FC3_pred_1"
  top: "batch_norm_FC3blob1_pred_1"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC3scale1_pred_1"
  type: "Scale"
  bottom: "batch_norm_FC3blob1_pred_1"
  top: "batch_norm_FC3blob1_pred_1"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC3_ReLU_pred_1"
  type: "ReLU"
  bottom: "batch_norm_FC3blob1_pred_1"
  top: "FC3_relu_pred_1"
}



#256x1024

layer {
  name: "FC4_pred_1"
  type: "InnerProduct"
  bottom: "FC3_relu_pred_1"
  top: "FC4_pred_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC4norm1_pred_1"
  type: "BatchNorm"
  bottom: "FC4_pred_1"
  top: "batch_norm_FC4blob1_pred_1"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC4scale1_pred_1"
  type: "Scale"
  bottom: "batch_norm_FC4blob1_pred_1"
  top: "batch_norm_FC4blob1_pred_1"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC4_ReLU_pred_1"
  type: "ReLU"
  bottom: "batch_norm_FC4blob1_pred_1"
  top: "FC4_relu_pred_1"
}


#concat patch branch and pred branch 1024-d
layer {
  type: "Concat"
  bottom: "FC4_relu_pred_1"
  bottom: "FC1_relu_1"
  top: "concat_intermediate_1"
  name: "concat_intermediate_1"
}





layer {
  name: "pred_residual_1"
  type: "InnerProduct"
  bottom: "concat_intermediate_1"
  top: "pred_residual_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
       type: "gaussian"
       std: 0.01
    }
  }
}








###resbone_2

layer {
  bottom: "bone_patch_2"
  top: "conv1_2"
  name: "conv1_2"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv1_2"
    top: "conv1_2"
    name: "bn_conv1_2"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv1_2"
    top: "conv1_2"
    name: "scale_conv1_2"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1_2"
    top: "conv1_2"
    name: "conv1_relu_2"
    type: "ReLU"
}

layer {
    bottom: "conv1_2"
    top: "pool1_2"
    name: "pool1_2"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_2"
    top: "bone_patch_2_half"
    name: "bone_patch_2_half"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: AVE
    }
}




layer {
  bottom: "bone_patch_2_half"
  top: "conv2_2"
  name: "conv2_2"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv2_2"
    top: "conv2_2"
    name: "bn_conv2_2"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv2_2"
    top: "conv2_2"
    name: "scale_conv2_2"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv2_2"
    top: "conv2_2"
    name: "conv2_relu_2"
    type: "ReLU"
}

layer {
    bottom: "conv2_2"
    top: "pool2_2"
    name: "pool2_2"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_2"
    top: "bone_patch_2_quarter"
    name: "bone_patch_2_quarter"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: AVE
    }
}







layer {
  bottom: "bone_patch_2_quarter"
  top: "conv3_2"
  name: "conv3_2"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}



layer {
    bottom: "conv3_2"
    top: "conv3_2"
    name: "bn_conv3_2"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv3_2"
    top: "conv3_2"
    name: "scale_conv3_2"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv3_2"
    top: "conv3_2"
    name: "conv3_relu_2"
    type: "ReLU"
}

layer {
  type: "Flatten"
  bottom: "pool1_2"
  top: "pool1_flat_2"
  name: "pool1_flat_2"
}



layer {
  type: "Flatten"
  bottom: "pool2_2"
  top: "pool2_flat_2"
  name: "pool2_flat_2"
}


layer {
  type: "Flatten"
  bottom: "conv3_2"
  top: "conv3_flat_2"
  name: "conv3_flat_2"
}

layer {
  type: "Concat"
  bottom: "pool1_flat_2"
  bottom: "pool2_flat_2"
  bottom: "conv3_flat_2"
 
  name: "fc_input_2"
  top: "fc_input_2"
}




layer {
  name: "FC1_2"
  type: "InnerProduct"
  bottom: "fc_input_2"
  top: "FC1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}


layer {
  name: "batch_FC1norm1_2"
  type: "BatchNorm"
  bottom: "FC1_2"
  top: "batch_norm_FC1blob1_2"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_2"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_2"
  top: "batch_norm_FC1blob1_2"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_2"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_2"
  top: "FC1_relu_2"
}






#======FC branch for pred bone 0
#3x128
layer {
  name: "FC1_pred_2"
  type: "InnerProduct"
  bottom: "pred_bone_2"
  top: "FC1_pred_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC1norm1_pred_2"
  type: "BatchNorm"
  bottom: "FC1_pred_2"
  top: "batch_norm_FC1blob1_pred_2"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_pred_2"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_pred_2"
  top: "batch_norm_FC1blob1_pred_2"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_pred_2"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_pred_2"
  top: "FC1_relu_pred_2"
}


#128x256

layer {
  name: "FC2_pred_2"
  type: "InnerProduct"
  bottom: "FC1_relu_pred_2"
  top: "FC2_pred_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC2norm1_pred_2"
  type: "BatchNorm"
  bottom: "FC2_pred_2"
  top: "batch_norm_FC2blob1_pred_2"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC2scale1_pred_2"
  type: "Scale"
  bottom: "batch_norm_FC2blob1_pred_2"
  top: "batch_norm_FC2blob1_pred_2"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC2_ReLU_pred_2"
  type: "ReLU"
  bottom: "batch_norm_FC2blob1_pred_2"
  top: "FC2_relu_pred_2"
}



#256x256

layer {
  name: "FC3_pred_2"
  type: "InnerProduct"
  bottom: "FC2_relu_pred_2"
  top: "FC3_pred_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC3norm1_pred_2"
  type: "BatchNorm"
  bottom: "FC3_pred_2"
  top: "batch_norm_FC3blob1_pred_2"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC3scale1_pred_2"
  type: "Scale"
  bottom: "batch_norm_FC3blob1_pred_2"
  top: "batch_norm_FC3blob1_pred_2"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC3_ReLU_pred_2"
  type: "ReLU"
  bottom: "batch_norm_FC3blob1_pred_2"
  top: "FC3_relu_pred_2"
}



#256x1024

layer {
  name: "FC4_pred_2"
  type: "InnerProduct"
  bottom: "FC3_relu_pred_2"
  top: "FC4_pred_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC4norm1_pred_2"
  type: "BatchNorm"
  bottom: "FC4_pred_2"
  top: "batch_norm_FC4blob1_pred_2"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC4scale1_pred_2"
  type: "Scale"
  bottom: "batch_norm_FC4blob1_pred_2"
  top: "batch_norm_FC4blob1_pred_2"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC4_ReLU_pred_2"
  type: "ReLU"
  bottom: "batch_norm_FC4blob1_pred_2"
  top: "FC4_relu_pred_2"
}


#concat patch branch and pred branch 1024-d
layer {
  type: "Concat"
  bottom: "FC4_relu_pred_2"
  bottom: "FC1_relu_2"
  top: "concat_intermediate_2"
  name: "concat_intermediate_2"
}





layer {
  name: "pred_residual_2"
  type: "InnerProduct"
  bottom: "concat_intermediate_2"
  top: "pred_residual_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
       type: "gaussian"
       std: 0.01
    }
  }
}





###resbone_3

layer {
  bottom: "bone_patch_3"
  top: "conv1_3"
  name: "conv1_3"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv1_3"
    top: "conv1_3"
    name: "bn_conv1_3"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv1_3"
    top: "conv1_3"
    name: "scale_conv1_3"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1_3"
    top: "conv1_3"
    name: "conv1_relu_3"
    type: "ReLU"
}

layer {
    bottom: "conv1_3"
    top: "pool1_3"
    name: "pool1_3"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_3"
    top: "bone_patch_3_half"
    name: "bone_patch_3_half"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: AVE
    }
}




layer {
  bottom: "bone_patch_3_half"
  top: "conv2_3"
  name: "conv2_3"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv2_3"
    top: "conv2_3"
    name: "bn_conv2_3"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv2_3"
    top: "conv2_3"
    name: "scale_conv2_3"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv2_3"
    top: "conv2_3"
    name: "conv2_relu_3"
    type: "ReLU"
}

layer {
    bottom: "conv2_3"
    top: "pool2_3"
    name: "pool2_3"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_3"
    top: "bone_patch_3_quarter"
    name: "bone_patch_3_quarter"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: AVE
    }
}







layer {
  bottom: "bone_patch_3_quarter"
  top: "conv3_3"
  name: "conv3_3"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}



layer {
    bottom: "conv3_3"
    top: "conv3_3"
    name: "bn_conv3_3"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv3_3"
    top: "conv3_3"
    name: "scale_conv3_3"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv3_3"
    top: "conv3_3"
    name: "conv3_relu_3"
    type: "ReLU"
}

layer {
  type: "Flatten"
  bottom: "pool1_3"
  top: "pool1_flat_3"
  name: "pool1_flat_3"
}



layer {
  type: "Flatten"
  bottom: "pool2_3"
  top: "pool2_flat_3"
  name: "pool2_flat_3"
}


layer {
  type: "Flatten"
  bottom: "conv3_3"
  top: "conv3_flat_3"
  name: "conv3_flat_3"
}

layer {
  type: "Concat"
  bottom: "pool1_flat_3"
  bottom: "pool2_flat_3"
  bottom: "conv3_flat_3"
 
  name: "fc_input_3"
  top: "fc_input_3"
}




layer {
  name: "FC1_3"
  type: "InnerProduct"
  bottom: "fc_input_3"
  top: "FC1_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}


layer {
  name: "batch_FC1norm1_3"
  type: "BatchNorm"
  bottom: "FC1_3"
  top: "batch_norm_FC1blob1_3"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_3"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_3"
  top: "batch_norm_FC1blob1_3"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_3"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_3"
  top: "FC1_relu_3"
}






#======FC branch for pred bone 0
#3x128
layer {
  name: "FC1_pred_3"
  type: "InnerProduct"
  bottom: "pred_bone_3"
  top: "FC1_pred_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC1norm1_pred_3"
  type: "BatchNorm"
  bottom: "FC1_pred_3"
  top: "batch_norm_FC1blob1_pred_3"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_pred_3"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_pred_3"
  top: "batch_norm_FC1blob1_pred_3"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_pred_3"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_pred_3"
  top: "FC1_relu_pred_3"
}


#128x256

layer {
  name: "FC2_pred_3"
  type: "InnerProduct"
  bottom: "FC1_relu_pred_3"
  top: "FC2_pred_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC2norm1_pred_3"
  type: "BatchNorm"
  bottom: "FC2_pred_3"
  top: "batch_norm_FC2blob1_pred_3"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC2scale1_pred_3"
  type: "Scale"
  bottom: "batch_norm_FC2blob1_pred_3"
  top: "batch_norm_FC2blob1_pred_3"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC2_ReLU_pred_3"
  type: "ReLU"
  bottom: "batch_norm_FC2blob1_pred_3"
  top: "FC2_relu_pred_3"
}



#256x256

layer {
  name: "FC3_pred_3"
  type: "InnerProduct"
  bottom: "FC2_relu_pred_3"
  top: "FC3_pred_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC3norm1_pred_3"
  type: "BatchNorm"
  bottom: "FC3_pred_3"
  top: "batch_norm_FC3blob1_pred_3"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC3scale1_pred_3"
  type: "Scale"
  bottom: "batch_norm_FC3blob1_pred_3"
  top: "batch_norm_FC3blob1_pred_3"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC3_ReLU_pred_3"
  type: "ReLU"
  bottom: "batch_norm_FC3blob1_pred_3"
  top: "FC3_relu_pred_3"
}



#256x1024

layer {
  name: "FC4_pred_3"
  type: "InnerProduct"
  bottom: "FC3_relu_pred_3"
  top: "FC4_pred_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC4norm1_pred_3"
  type: "BatchNorm"
  bottom: "FC4_pred_3"
  top: "batch_norm_FC4blob1_pred_3"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC4scale1_pred_3"
  type: "Scale"
  bottom: "batch_norm_FC4blob1_pred_3"
  top: "batch_norm_FC4blob1_pred_3"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC4_ReLU_pred_3"
  type: "ReLU"
  bottom: "batch_norm_FC4blob1_pred_3"
  top: "FC4_relu_pred_3"
}


#concat patch branch and pred branch 1024-d
layer {
  type: "Concat"
  bottom: "FC4_relu_pred_3"
  bottom: "FC1_relu_3"
  top: "concat_intermediate_3"
  name: "concat_intermediate_3"
}





layer {
  name: "pred_residual_3"
  type: "InnerProduct"
  bottom: "concat_intermediate_3"
  top: "pred_residual_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
       type: "gaussian"
       std: 0.01
    }
  }
}






###resbone_4

layer {
  bottom: "bone_patch_4"
  top: "conv1_4"
  name: "conv1_4"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv1_4"
    top: "conv1_4"
    name: "bn_conv1_4"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv1_4"
    top: "conv1_4"
    name: "scale_conv1_4"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1_4"
    top: "conv1_4"
    name: "conv1_relu_4"
    type: "ReLU"
}

layer {
    bottom: "conv1_4"
    top: "pool1_4"
    name: "pool1_4"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_4"
    top: "bone_patch_4_half"
    name: "bone_patch_4_half"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: AVE
    }
}




layer {
  bottom: "bone_patch_4_half"
  top: "conv2_4"
  name: "conv2_4"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv2_4"
    top: "conv2_4"
    name: "bn_conv2_4"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv2_4"
    top: "conv2_4"
    name: "scale_conv2_4"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv2_4"
    top: "conv2_4"
    name: "conv2_relu_4"
    type: "ReLU"
}

layer {
    bottom: "conv2_4"
    top: "pool2_4"
    name: "pool2_4"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_4"
    top: "bone_patch_4_quarter"
    name: "bone_patch_4_quarter"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: AVE
    }
}







layer {
  bottom: "bone_patch_4_quarter"
  top: "conv3_4"
  name: "conv3_4"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}



layer {
    bottom: "conv3_4"
    top: "conv3_4"
    name: "bn_conv3_4"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv3_4"
    top: "conv3_4"
    name: "scale_conv3_4"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv3_4"
    top: "conv3_4"
    name: "conv3_relu_4"
    type: "ReLU"
}

layer {
  type: "Flatten"
  bottom: "pool1_4"
  top: "pool1_flat_4"
  name: "pool1_flat_4"
}



layer {
  type: "Flatten"
  bottom: "pool2_4"
  top: "pool2_flat_4"
  name: "pool2_flat_4"
}


layer {
  type: "Flatten"
  bottom: "conv3_4"
  top: "conv3_flat_4"
  name: "conv3_flat_4"
}

layer {
  type: "Concat"
  bottom: "pool1_flat_4"
  bottom: "pool2_flat_4"
  bottom: "conv3_flat_4"
 
  name: "fc_input_4"
  top: "fc_input_4"
}




layer {
  name: "FC1_4"
  type: "InnerProduct"
  bottom: "fc_input_4"
  top: "FC1_4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}


layer {
  name: "batch_FC1norm1_4"
  type: "BatchNorm"
  bottom: "FC1_4"
  top: "batch_norm_FC1blob1_4"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_4"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_4"
  top: "batch_norm_FC1blob1_4"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_4"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_4"
  top: "FC1_relu_4"
}






#======FC branch for pred bone 0
#3x128
layer {
  name: "FC1_pred_4"
  type: "InnerProduct"
  bottom: "pred_bone_4"
  top: "FC1_pred_4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC1norm1_pred_4"
  type: "BatchNorm"
  bottom: "FC1_pred_4"
  top: "batch_norm_FC1blob1_pred_4"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_pred_4"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_pred_4"
  top: "batch_norm_FC1blob1_pred_4"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_pred_4"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_pred_4"
  top: "FC1_relu_pred_4"
}


#128x256

layer {
  name: "FC2_pred_4"
  type: "InnerProduct"
  bottom: "FC1_relu_pred_4"
  top: "FC2_pred_4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC2norm1_pred_4"
  type: "BatchNorm"
  bottom: "FC2_pred_4"
  top: "batch_norm_FC2blob1_pred_4"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC2scale1_pred_4"
  type: "Scale"
  bottom: "batch_norm_FC2blob1_pred_4"
  top: "batch_norm_FC2blob1_pred_4"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC2_ReLU_pred_4"
  type: "ReLU"
  bottom: "batch_norm_FC2blob1_pred_4"
  top: "FC2_relu_pred_4"
}



#256x256

layer {
  name: "FC3_pred_4"
  type: "InnerProduct"
  bottom: "FC2_relu_pred_4"
  top: "FC3_pred_4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC3norm1_pred_4"
  type: "BatchNorm"
  bottom: "FC3_pred_4"
  top: "batch_norm_FC3blob1_pred_4"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC3scale1_pred_4"
  type: "Scale"
  bottom: "batch_norm_FC3blob1_pred_4"
  top: "batch_norm_FC3blob1_pred_4"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC3_ReLU_pred_4"
  type: "ReLU"
  bottom: "batch_norm_FC3blob1_pred_4"
  top: "FC3_relu_pred_4"
}



#256x1024

layer {
  name: "FC4_pred_4"
  type: "InnerProduct"
  bottom: "FC3_relu_pred_4"
  top: "FC4_pred_4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC4norm1_pred_4"
  type: "BatchNorm"
  bottom: "FC4_pred_4"
  top: "batch_norm_FC4blob1_pred_4"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC4scale1_pred_4"
  type: "Scale"
  bottom: "batch_norm_FC4blob1_pred_4"
  top: "batch_norm_FC4blob1_pred_4"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC4_ReLU_pred_4"
  type: "ReLU"
  bottom: "batch_norm_FC4blob1_pred_4"
  top: "FC4_relu_pred_4"
}


#concat patch branch and pred branch 1024-d
layer {
  type: "Concat"
  bottom: "FC4_relu_pred_4"
  bottom: "FC1_relu_4"
  top: "concat_intermediate_4"
  name: "concat_intermediate_4"
}





layer {
  name: "pred_residual_4"
  type: "InnerProduct"
  bottom: "concat_intermediate_4"
  top: "pred_residual_4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
       type: "gaussian"
       std: 0.01
    }
  }
}






###resbone_5

layer {
  bottom: "bone_patch_5"
  top: "conv1_5"
  name: "conv1_5"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv1_5"
    top: "conv1_5"
    name: "bn_conv1_5"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv1_5"
    top: "conv1_5"
    name: "scale_conv1_5"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1_5"
    top: "conv1_5"
    name: "conv1_relu_5"
    type: "ReLU"
}

layer {
    bottom: "conv1_5"
    top: "pool1_5"
    name: "pool1_5"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_5"
    top: "bone_patch_5_half"
    name: "bone_patch_5_half"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: AVE
    }
}




layer {
  bottom: "bone_patch_5_half"
  top: "conv2_5"
  name: "conv2_5"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv2_5"
    top: "conv2_5"
    name: "bn_conv2_5"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv2_5"
    top: "conv2_5"
    name: "scale_conv2_5"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv2_5"
    top: "conv2_5"
    name: "conv2_relu_5"
    type: "ReLU"
}

layer {
    bottom: "conv2_5"
    top: "pool2_5"
    name: "pool2_5"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_5"
    top: "bone_patch_5_quarter"
    name: "bone_patch_5_quarter"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: AVE
    }
}







layer {
  bottom: "bone_patch_5_quarter"
  top: "conv3_5"
  name: "conv3_5"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}



layer {
    bottom: "conv3_5"
    top: "conv3_5"
    name: "bn_conv3_5"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv3_5"
    top: "conv3_5"
    name: "scale_conv3_5"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv3_5"
    top: "conv3_5"
    name: "conv3_relu_5"
    type: "ReLU"
}

layer {
  type: "Flatten"
  bottom: "pool1_5"
  top: "pool1_flat_5"
  name: "pool1_flat_5"
}



layer {
  type: "Flatten"
  bottom: "pool2_5"
  top: "pool2_flat_5"
  name: "pool2_flat_5"
}


layer {
  type: "Flatten"
  bottom: "conv3_5"
  top: "conv3_flat_5"
  name: "conv3_flat_5"
}

layer {
  type: "Concat"
  bottom: "pool1_flat_5"
  bottom: "pool2_flat_5"
  bottom: "conv3_flat_5"
 
  name: "fc_input_5"
  top: "fc_input_5"
}




layer {
  name: "FC1_5"
  type: "InnerProduct"
  bottom: "fc_input_5"
  top: "FC1_5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}


layer {
  name: "batch_FC1norm1_5"
  type: "BatchNorm"
  bottom: "FC1_5"
  top: "batch_norm_FC1blob1_5"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_5"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_5"
  top: "batch_norm_FC1blob1_5"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_5"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_5"
  top: "FC1_relu_5"
}






#======FC branch for pred bone 0
#3x128
layer {
  name: "FC1_pred_5"
  type: "InnerProduct"
  bottom: "pred_bone_5"
  top: "FC1_pred_5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC1norm1_pred_5"
  type: "BatchNorm"
  bottom: "FC1_pred_5"
  top: "batch_norm_FC1blob1_pred_5"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_pred_5"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_pred_5"
  top: "batch_norm_FC1blob1_pred_5"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_pred_5"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_pred_5"
  top: "FC1_relu_pred_5"
}


#128x256

layer {
  name: "FC2_pred_5"
  type: "InnerProduct"
  bottom: "FC1_relu_pred_5"
  top: "FC2_pred_5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC2norm1_pred_5"
  type: "BatchNorm"
  bottom: "FC2_pred_5"
  top: "batch_norm_FC2blob1_pred_5"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC2scale1_pred_5"
  type: "Scale"
  bottom: "batch_norm_FC2blob1_pred_5"
  top: "batch_norm_FC2blob1_pred_5"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC2_ReLU_pred_5"
  type: "ReLU"
  bottom: "batch_norm_FC2blob1_pred_5"
  top: "FC2_relu_pred_5"
}



#256x256

layer {
  name: "FC3_pred_5"
  type: "InnerProduct"
  bottom: "FC2_relu_pred_5"
  top: "FC3_pred_5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC3norm1_pred_5"
  type: "BatchNorm"
  bottom: "FC3_pred_5"
  top: "batch_norm_FC3blob1_pred_5"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC3scale1_pred_5"
  type: "Scale"
  bottom: "batch_norm_FC3blob1_pred_5"
  top: "batch_norm_FC3blob1_pred_5"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC3_ReLU_pred_5"
  type: "ReLU"
  bottom: "batch_norm_FC3blob1_pred_5"
  top: "FC3_relu_pred_5"
}



#256x1024

layer {
  name: "FC4_pred_5"
  type: "InnerProduct"
  bottom: "FC3_relu_pred_5"
  top: "FC4_pred_5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC4norm1_pred_5"
  type: "BatchNorm"
  bottom: "FC4_pred_5"
  top: "batch_norm_FC4blob1_pred_5"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC4scale1_pred_5"
  type: "Scale"
  bottom: "batch_norm_FC4blob1_pred_5"
  top: "batch_norm_FC4blob1_pred_5"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC4_ReLU_pred_5"
  type: "ReLU"
  bottom: "batch_norm_FC4blob1_pred_5"
  top: "FC4_relu_pred_5"
}


#concat patch branch and pred branch 1024-d
layer {
  type: "Concat"
  bottom: "FC4_relu_pred_5"
  bottom: "FC1_relu_5"
  top: "concat_intermediate_5"
  name: "concat_intermediate_5"
}





layer {
  name: "pred_residual_5"
  type: "InnerProduct"
  bottom: "concat_intermediate_5"
  top: "pred_residual_5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
       type: "gaussian"
       std: 0.01
    }
  }
}






###resbone_6

layer {
  bottom: "bone_patch_6"
  top: "conv1_6"
  name: "conv1_6"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv1_6"
    top: "conv1_6"
    name: "bn_conv1_6"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv1_6"
    top: "conv1_6"
    name: "scale_conv1_6"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1_6"
    top: "conv1_6"
    name: "conv1_relu_6"
    type: "ReLU"
}

layer {
    bottom: "conv1_6"
    top: "pool1_6"
    name: "pool1_6"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_6"
    top: "bone_patch_6_half"
    name: "bone_patch_6_half"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: AVE
    }
}




layer {
  bottom: "bone_patch_6_half"
  top: "conv2_6"
  name: "conv2_6"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv2_6"
    top: "conv2_6"
    name: "bn_conv2_6"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv2_6"
    top: "conv2_6"
    name: "scale_conv2_6"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv2_6"
    top: "conv2_6"
    name: "conv2_relu_6"
    type: "ReLU"
}

layer {
    bottom: "conv2_6"
    top: "pool2_6"
    name: "pool2_6"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_6"
    top: "bone_patch_6_quarter"
    name: "bone_patch_6_quarter"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: AVE
    }
}







layer {
  bottom: "bone_patch_6_quarter"
  top: "conv3_6"
  name: "conv3_6"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}



layer {
    bottom: "conv3_6"
    top: "conv3_6"
    name: "bn_conv3_6"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv3_6"
    top: "conv3_6"
    name: "scale_conv3_6"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv3_6"
    top: "conv3_6"
    name: "conv3_relu_6"
    type: "ReLU"
}

layer {
  type: "Flatten"
  bottom: "pool1_6"
  top: "pool1_flat_6"
  name: "pool1_flat_6"
}



layer {
  type: "Flatten"
  bottom: "pool2_6"
  top: "pool2_flat_6"
  name: "pool2_flat_6"
}


layer {
  type: "Flatten"
  bottom: "conv3_6"
  top: "conv3_flat_6"
  name: "conv3_flat_6"
}

layer {
  type: "Concat"
  bottom: "pool1_flat_6"
  bottom: "pool2_flat_6"
  bottom: "conv3_flat_6"
 
  name: "fc_input_6"
  top: "fc_input_6"
}




layer {
  name: "FC1_6"
  type: "InnerProduct"
  bottom: "fc_input_6"
  top: "FC1_6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}


layer {
  name: "batch_FC1norm1_6"
  type: "BatchNorm"
  bottom: "FC1_6"
  top: "batch_norm_FC1blob1_6"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_6"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_6"
  top: "batch_norm_FC1blob1_6"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_6"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_6"
  top: "FC1_relu_6"
}






#======FC branch for pred bone 0
#3x128
layer {
  name: "FC1_pred_6"
  type: "InnerProduct"
  bottom: "pred_bone_6"
  top: "FC1_pred_6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC1norm1_pred_6"
  type: "BatchNorm"
  bottom: "FC1_pred_6"
  top: "batch_norm_FC1blob1_pred_6"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_pred_6"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_pred_6"
  top: "batch_norm_FC1blob1_pred_6"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_pred_6"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_pred_6"
  top: "FC1_relu_pred_6"
}


#128x256

layer {
  name: "FC2_pred_6"
  type: "InnerProduct"
  bottom: "FC1_relu_pred_6"
  top: "FC2_pred_6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC2norm1_pred_6"
  type: "BatchNorm"
  bottom: "FC2_pred_6"
  top: "batch_norm_FC2blob1_pred_6"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC2scale1_pred_6"
  type: "Scale"
  bottom: "batch_norm_FC2blob1_pred_6"
  top: "batch_norm_FC2blob1_pred_6"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC2_ReLU_pred_6"
  type: "ReLU"
  bottom: "batch_norm_FC2blob1_pred_6"
  top: "FC2_relu_pred_6"
}



#256x256

layer {
  name: "FC3_pred_6"
  type: "InnerProduct"
  bottom: "FC2_relu_pred_6"
  top: "FC3_pred_6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC3norm1_pred_6"
  type: "BatchNorm"
  bottom: "FC3_pred_6"
  top: "batch_norm_FC3blob1_pred_6"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC3scale1_pred_6"
  type: "Scale"
  bottom: "batch_norm_FC3blob1_pred_6"
  top: "batch_norm_FC3blob1_pred_6"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC3_ReLU_pred_6"
  type: "ReLU"
  bottom: "batch_norm_FC3blob1_pred_6"
  top: "FC3_relu_pred_6"
}



#256x1024

layer {
  name: "FC4_pred_6"
  type: "InnerProduct"
  bottom: "FC3_relu_pred_6"
  top: "FC4_pred_6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC4norm1_pred_6"
  type: "BatchNorm"
  bottom: "FC4_pred_6"
  top: "batch_norm_FC4blob1_pred_6"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC4scale1_pred_6"
  type: "Scale"
  bottom: "batch_norm_FC4blob1_pred_6"
  top: "batch_norm_FC4blob1_pred_6"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC4_ReLU_pred_6"
  type: "ReLU"
  bottom: "batch_norm_FC4blob1_pred_6"
  top: "FC4_relu_pred_6"
}


#concat patch branch and pred branch 1024-d
layer {
  type: "Concat"
  bottom: "FC4_relu_pred_6"
  bottom: "FC1_relu_6"
  top: "concat_intermediate_6"
  name: "concat_intermediate_6"
}





layer {
  name: "pred_residual_6"
  type: "InnerProduct"
  bottom: "concat_intermediate_6"
  top: "pred_residual_6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
       type: "gaussian"
       std: 0.01
    }
  }
}






###resbone_7

layer {
  bottom: "bone_patch_7"
  top: "conv1_7"
  name: "conv1_7"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv1_7"
    top: "conv1_7"
    name: "bn_conv1_7"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv1_7"
    top: "conv1_7"
    name: "scale_conv1_7"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1_7"
    top: "conv1_7"
    name: "conv1_relu_7"
    type: "ReLU"
}

layer {
    bottom: "conv1_7"
    top: "pool1_7"
    name: "pool1_7"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_7"
    top: "bone_patch_7_half"
    name: "bone_patch_7_half"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: AVE
    }
}




layer {
  bottom: "bone_patch_7_half"
  top: "conv2_7"
  name: "conv2_7"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv2_7"
    top: "conv2_7"
    name: "bn_conv2_7"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv2_7"
    top: "conv2_7"
    name: "scale_conv2_7"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv2_7"
    top: "conv2_7"
    name: "conv2_relu_7"
    type: "ReLU"
}

layer {
    bottom: "conv2_7"
    top: "pool2_7"
    name: "pool2_7"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_7"
    top: "bone_patch_7_quarter"
    name: "bone_patch_7_quarter"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: AVE
    }
}







layer {
  bottom: "bone_patch_7_quarter"
  top: "conv3_7"
  name: "conv3_7"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}



layer {
    bottom: "conv3_7"
    top: "conv3_7"
    name: "bn_conv3_7"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv3_7"
    top: "conv3_7"
    name: "scale_conv3_7"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv3_7"
    top: "conv3_7"
    name: "conv3_relu_7"
    type: "ReLU"
}

layer {
  type: "Flatten"
  bottom: "pool1_7"
  top: "pool1_flat_7"
  name: "pool1_flat_7"
}



layer {
  type: "Flatten"
  bottom: "pool2_7"
  top: "pool2_flat_7"
  name: "pool2_flat_7"
}


layer {
  type: "Flatten"
  bottom: "conv3_7"
  top: "conv3_flat_7"
  name: "conv3_flat_7"
}

layer {
  type: "Concat"
  bottom: "pool1_flat_7"
  bottom: "pool2_flat_7"
  bottom: "conv3_flat_7"
 
  name: "fc_input_7"
  top: "fc_input_7"
}




layer {
  name: "FC1_7"
  type: "InnerProduct"
  bottom: "fc_input_7"
  top: "FC1_7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}


layer {
  name: "batch_FC1norm1_7"
  type: "BatchNorm"
  bottom: "FC1_7"
  top: "batch_norm_FC1blob1_7"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_7"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_7"
  top: "batch_norm_FC1blob1_7"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_7"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_7"
  top: "FC1_relu_7"
}






#======FC branch for pred bone 0
#3x128
layer {
  name: "FC1_pred_7"
  type: "InnerProduct"
  bottom: "pred_bone_7"
  top: "FC1_pred_7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC1norm1_pred_7"
  type: "BatchNorm"
  bottom: "FC1_pred_7"
  top: "batch_norm_FC1blob1_pred_7"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_pred_7"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_pred_7"
  top: "batch_norm_FC1blob1_pred_7"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_pred_7"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_pred_7"
  top: "FC1_relu_pred_7"
}


#128x256

layer {
  name: "FC2_pred_7"
  type: "InnerProduct"
  bottom: "FC1_relu_pred_7"
  top: "FC2_pred_7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC2norm1_pred_7"
  type: "BatchNorm"
  bottom: "FC2_pred_7"
  top: "batch_norm_FC2blob1_pred_7"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC2scale1_pred_7"
  type: "Scale"
  bottom: "batch_norm_FC2blob1_pred_7"
  top: "batch_norm_FC2blob1_pred_7"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC2_ReLU_pred_7"
  type: "ReLU"
  bottom: "batch_norm_FC2blob1_pred_7"
  top: "FC2_relu_pred_7"
}



#256x256

layer {
  name: "FC3_pred_7"
  type: "InnerProduct"
  bottom: "FC2_relu_pred_7"
  top: "FC3_pred_7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC3norm1_pred_7"
  type: "BatchNorm"
  bottom: "FC3_pred_7"
  top: "batch_norm_FC3blob1_pred_7"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC3scale1_pred_7"
  type: "Scale"
  bottom: "batch_norm_FC3blob1_pred_7"
  top: "batch_norm_FC3blob1_pred_7"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC3_ReLU_pred_7"
  type: "ReLU"
  bottom: "batch_norm_FC3blob1_pred_7"
  top: "FC3_relu_pred_7"
}



#256x1024

layer {
  name: "FC4_pred_7"
  type: "InnerProduct"
  bottom: "FC3_relu_pred_7"
  top: "FC4_pred_7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC4norm1_pred_7"
  type: "BatchNorm"
  bottom: "FC4_pred_7"
  top: "batch_norm_FC4blob1_pred_7"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC4scale1_pred_7"
  type: "Scale"
  bottom: "batch_norm_FC4blob1_pred_7"
  top: "batch_norm_FC4blob1_pred_7"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC4_ReLU_pred_7"
  type: "ReLU"
  bottom: "batch_norm_FC4blob1_pred_7"
  top: "FC4_relu_pred_7"
}


#concat patch branch and pred branch 1024-d
layer {
  type: "Concat"
  bottom: "FC4_relu_pred_7"
  bottom: "FC1_relu_7"
  top: "concat_intermediate_7"
  name: "concat_intermediate_7"
}





layer {
  name: "pred_residual_7"
  type: "InnerProduct"
  bottom: "concat_intermediate_7"
  top: "pred_residual_7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
       type: "gaussian"
       std: 0.01
    }
  }
}




###resbone_8

layer {
  bottom: "bone_patch_8"
  top: "conv1_8"
  name: "conv1_8"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv1_8"
    top: "conv1_8"
    name: "bn_conv1_8"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv1_8"
    top: "conv1_8"
    name: "scale_conv1_8"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1_8"
    top: "conv1_8"
    name: "conv1_relu_8"
    type: "ReLU"
}

layer {
    bottom: "conv1_8"
    top: "pool1_8"
    name: "pool1_8"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_8"
    top: "bone_patch_8_half"
    name: "bone_patch_8_half"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: AVE
    }
}




layer {
  bottom: "bone_patch_8_half"
  top: "conv2_8"
  name: "conv2_8"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv2_8"
    top: "conv2_8"
    name: "bn_conv2_8"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv2_8"
    top: "conv2_8"
    name: "scale_conv2_8"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv2_8"
    top: "conv2_8"
    name: "conv2_relu_8"
    type: "ReLU"
}

layer {
    bottom: "conv2_8"
    top: "pool2_8"
    name: "pool2_8"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_8"
    top: "bone_patch_8_quarter"
    name: "bone_patch_8_quarter"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: AVE
    }
}







layer {
  bottom: "bone_patch_8_quarter"
  top: "conv3_8"
  name: "conv3_8"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}



layer {
    bottom: "conv3_8"
    top: "conv3_8"
    name: "bn_conv3_8"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv3_8"
    top: "conv3_8"
    name: "scale_conv3_8"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv3_8"
    top: "conv3_8"
    name: "conv3_relu_8"
    type: "ReLU"
}

layer {
  type: "Flatten"
  bottom: "pool1_8"
  top: "pool1_flat_8"
  name: "pool1_flat_8"
}



layer {
  type: "Flatten"
  bottom: "pool2_8"
  top: "pool2_flat_8"
  name: "pool2_flat_8"
}


layer {
  type: "Flatten"
  bottom: "conv3_8"
  top: "conv3_flat_8"
  name: "conv3_flat_8"
}

layer {
  type: "Concat"
  bottom: "pool1_flat_8"
  bottom: "pool2_flat_8"
  bottom: "conv3_flat_8"
 
  name: "fc_input_8"
  top: "fc_input_8"
}




layer {
  name: "FC1_8"
  type: "InnerProduct"
  bottom: "fc_input_8"
  top: "FC1_8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}


layer {
  name: "batch_FC1norm1_8"
  type: "BatchNorm"
  bottom: "FC1_8"
  top: "batch_norm_FC1blob1_8"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_8"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_8"
  top: "batch_norm_FC1blob1_8"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_8"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_8"
  top: "FC1_relu_8"
}






#======FC branch for pred bone 0
#3x128
layer {
  name: "FC1_pred_8"
  type: "InnerProduct"
  bottom: "pred_bone_8"
  top: "FC1_pred_8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC1norm1_pred_8"
  type: "BatchNorm"
  bottom: "FC1_pred_8"
  top: "batch_norm_FC1blob1_pred_8"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_pred_8"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_pred_8"
  top: "batch_norm_FC1blob1_pred_8"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_pred_8"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_pred_8"
  top: "FC1_relu_pred_8"
}


#128x256

layer {
  name: "FC2_pred_8"
  type: "InnerProduct"
  bottom: "FC1_relu_pred_8"
  top: "FC2_pred_8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC2norm1_pred_8"
  type: "BatchNorm"
  bottom: "FC2_pred_8"
  top: "batch_norm_FC2blob1_pred_8"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC2scale1_pred_8"
  type: "Scale"
  bottom: "batch_norm_FC2blob1_pred_8"
  top: "batch_norm_FC2blob1_pred_8"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC2_ReLU_pred_8"
  type: "ReLU"
  bottom: "batch_norm_FC2blob1_pred_8"
  top: "FC2_relu_pred_8"
}



#256x256

layer {
  name: "FC3_pred_8"
  type: "InnerProduct"
  bottom: "FC2_relu_pred_8"
  top: "FC3_pred_8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC3norm1_pred_8"
  type: "BatchNorm"
  bottom: "FC3_pred_8"
  top: "batch_norm_FC3blob1_pred_8"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC3scale1_pred_8"
  type: "Scale"
  bottom: "batch_norm_FC3blob1_pred_8"
  top: "batch_norm_FC3blob1_pred_8"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC3_ReLU_pred_8"
  type: "ReLU"
  bottom: "batch_norm_FC3blob1_pred_8"
  top: "FC3_relu_pred_8"
}



#256x1024

layer {
  name: "FC4_pred_8"
  type: "InnerProduct"
  bottom: "FC3_relu_pred_8"
  top: "FC4_pred_8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC4norm1_pred_8"
  type: "BatchNorm"
  bottom: "FC4_pred_8"
  top: "batch_norm_FC4blob1_pred_8"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC4scale1_pred_8"
  type: "Scale"
  bottom: "batch_norm_FC4blob1_pred_8"
  top: "batch_norm_FC4blob1_pred_8"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC4_ReLU_pred_8"
  type: "ReLU"
  bottom: "batch_norm_FC4blob1_pred_8"
  top: "FC4_relu_pred_8"
}


#concat patch branch and pred branch 1024-d
layer {
  type: "Concat"
  bottom: "FC4_relu_pred_8"
  bottom: "FC1_relu_8"
  top: "concat_intermediate_8"
  name: "concat_intermediate_8"
}





layer {
  name: "pred_residual_8"
  type: "InnerProduct"
  bottom: "concat_intermediate_8"
  top: "pred_residual_8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
       type: "gaussian"
       std: 0.01
    }
  }
}





###resbone_9

layer {
  bottom: "bone_patch_9"
  top: "conv1_9"
  name: "conv1_9"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv1_9"
    top: "conv1_9"
    name: "bn_conv1_9"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv1_9"
    top: "conv1_9"
    name: "scale_conv1_9"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1_9"
    top: "conv1_9"
    name: "conv1_relu_9"
    type: "ReLU"
}

layer {
    bottom: "conv1_9"
    top: "pool1_9"
    name: "pool1_9"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_9"
    top: "bone_patch_9_half"
    name: "bone_patch_9_half"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: AVE
    }
}




layer {
  bottom: "bone_patch_9_half"
  top: "conv2_9"
  name: "conv2_9"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv2_9"
    top: "conv2_9"
    name: "bn_conv2_9"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv2_9"
    top: "conv2_9"
    name: "scale_conv2_9"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv2_9"
    top: "conv2_9"
    name: "conv2_relu_9"
    type: "ReLU"
}

layer {
    bottom: "conv2_9"
    top: "pool2_9"
    name: "pool2_9"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_9"
    top: "bone_patch_9_quarter"
    name: "bone_patch_9_quarter"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: AVE
    }
}







layer {
  bottom: "bone_patch_9_quarter"
  top: "conv3_9"
  name: "conv3_9"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}



layer {
    bottom: "conv3_9"
    top: "conv3_9"
    name: "bn_conv3_9"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv3_9"
    top: "conv3_9"
    name: "scale_conv3_9"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv3_9"
    top: "conv3_9"
    name: "conv3_relu_9"
    type: "ReLU"
}

layer {
  type: "Flatten"
  bottom: "pool1_9"
  top: "pool1_flat_9"
  name: "pool1_flat_9"
}



layer {
  type: "Flatten"
  bottom: "pool2_9"
  top: "pool2_flat_9"
  name: "pool2_flat_9"
}


layer {
  type: "Flatten"
  bottom: "conv3_9"
  top: "conv3_flat_9"
  name: "conv3_flat_9"
}

layer {
  type: "Concat"
  bottom: "pool1_flat_9"
  bottom: "pool2_flat_9"
  bottom: "conv3_flat_9"
 
  name: "fc_input_9"
  top: "fc_input_9"
}




layer {
  name: "FC1_9"
  type: "InnerProduct"
  bottom: "fc_input_9"
  top: "FC1_9"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}


layer {
  name: "batch_FC1norm1_9"
  type: "BatchNorm"
  bottom: "FC1_9"
  top: "batch_norm_FC1blob1_9"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_9"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_9"
  top: "batch_norm_FC1blob1_9"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_9"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_9"
  top: "FC1_relu_9"
}






#======FC branch for pred bone 0
#3x128
layer {
  name: "FC1_pred_9"
  type: "InnerProduct"
  bottom: "pred_bone_9"
  top: "FC1_pred_9"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC1norm1_pred_9"
  type: "BatchNorm"
  bottom: "FC1_pred_9"
  top: "batch_norm_FC1blob1_pred_9"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_pred_9"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_pred_9"
  top: "batch_norm_FC1blob1_pred_9"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_pred_9"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_pred_9"
  top: "FC1_relu_pred_9"
}


#128x256

layer {
  name: "FC2_pred_9"
  type: "InnerProduct"
  bottom: "FC1_relu_pred_9"
  top: "FC2_pred_9"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC2norm1_pred_9"
  type: "BatchNorm"
  bottom: "FC2_pred_9"
  top: "batch_norm_FC2blob1_pred_9"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC2scale1_pred_9"
  type: "Scale"
  bottom: "batch_norm_FC2blob1_pred_9"
  top: "batch_norm_FC2blob1_pred_9"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC2_ReLU_pred_9"
  type: "ReLU"
  bottom: "batch_norm_FC2blob1_pred_9"
  top: "FC2_relu_pred_9"
}



#256x256

layer {
  name: "FC3_pred_9"
  type: "InnerProduct"
  bottom: "FC2_relu_pred_9"
  top: "FC3_pred_9"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC3norm1_pred_9"
  type: "BatchNorm"
  bottom: "FC3_pred_9"
  top: "batch_norm_FC3blob1_pred_9"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC3scale1_pred_9"
  type: "Scale"
  bottom: "batch_norm_FC3blob1_pred_9"
  top: "batch_norm_FC3blob1_pred_9"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC3_ReLU_pred_9"
  type: "ReLU"
  bottom: "batch_norm_FC3blob1_pred_9"
  top: "FC3_relu_pred_9"
}



#256x1024

layer {
  name: "FC4_pred_9"
  type: "InnerProduct"
  bottom: "FC3_relu_pred_9"
  top: "FC4_pred_9"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC4norm1_pred_9"
  type: "BatchNorm"
  bottom: "FC4_pred_9"
  top: "batch_norm_FC4blob1_pred_9"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC4scale1_pred_9"
  type: "Scale"
  bottom: "batch_norm_FC4blob1_pred_9"
  top: "batch_norm_FC4blob1_pred_9"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC4_ReLU_pred_9"
  type: "ReLU"
  bottom: "batch_norm_FC4blob1_pred_9"
  top: "FC4_relu_pred_9"
}


#concat patch branch and pred branch 1024-d
layer {
  type: "Concat"
  bottom: "FC4_relu_pred_9"
  bottom: "FC1_relu_9"
  top: "concat_intermediate_9"
  name: "concat_intermediate_9"
}





layer {
  name: "pred_residual_9"
  type: "InnerProduct"
  bottom: "concat_intermediate_9"
  top: "pred_residual_9"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
       type: "gaussian"
       std: 0.01
    }
  }
}






###resbone_10

layer {
  bottom: "bone_patch_10"
  top: "conv1_10"
  name: "conv1_10"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv1_10"
    top: "conv1_10"
    name: "bn_conv1_10"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv1_10"
    top: "conv1_10"
    name: "scale_conv1_10"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1_10"
    top: "conv1_10"
    name: "conv1_relu_10"
    type: "ReLU"
}

layer {
    bottom: "conv1_10"
    top: "pool1_10"
    name: "pool1_10"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_10"
    top: "bone_patch_10_half"
    name: "bone_patch_10_half"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: AVE
    }
}




layer {
  bottom: "bone_patch_10_half"
  top: "conv2_10"
  name: "conv2_10"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv2_10"
    top: "conv2_10"
    name: "bn_conv2_10"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv2_10"
    top: "conv2_10"
    name: "scale_conv2_10"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv2_10"
    top: "conv2_10"
    name: "conv2_relu_10"
    type: "ReLU"
}

layer {
    bottom: "conv2_10"
    top: "pool2_10"
    name: "pool2_10"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_10"
    top: "bone_patch_10_quarter"
    name: "bone_patch_10_quarter"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: AVE
    }
}







layer {
  bottom: "bone_patch_10_quarter"
  top: "conv3_10"
  name: "conv3_10"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}



layer {
    bottom: "conv3_10"
    top: "conv3_10"
    name: "bn_conv3_10"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv3_10"
    top: "conv3_10"
    name: "scale_conv3_10"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv3_10"
    top: "conv3_10"
    name: "conv3_relu_10"
    type: "ReLU"
}

layer {
  type: "Flatten"
  bottom: "pool1_10"
  top: "pool1_flat_10"
  name: "pool1_flat_10"
}



layer {
  type: "Flatten"
  bottom: "pool2_10"
  top: "pool2_flat_10"
  name: "pool2_flat_10"
}


layer {
  type: "Flatten"
  bottom: "conv3_10"
  top: "conv3_flat_10"
  name: "conv3_flat_10"
}

layer {
  type: "Concat"
  bottom: "pool1_flat_10"
  bottom: "pool2_flat_10"
  bottom: "conv3_flat_10"
 
  name: "fc_input_10"
  top: "fc_input_10"
}




layer {
  name: "FC1_10"
  type: "InnerProduct"
  bottom: "fc_input_10"
  top: "FC1_10"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}


layer {
  name: "batch_FC1norm1_10"
  type: "BatchNorm"
  bottom: "FC1_10"
  top: "batch_norm_FC1blob1_10"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_10"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_10"
  top: "batch_norm_FC1blob1_10"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_10"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_10"
  top: "FC1_relu_10"
}






#======FC branch for pred bone 0
#3x128
layer {
  name: "FC1_pred_10"
  type: "InnerProduct"
  bottom: "pred_bone_10"
  top: "FC1_pred_10"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC1norm1_pred_10"
  type: "BatchNorm"
  bottom: "FC1_pred_10"
  top: "batch_norm_FC1blob1_pred_10"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_pred_10"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_pred_10"
  top: "batch_norm_FC1blob1_pred_10"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_pred_10"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_pred_10"
  top: "FC1_relu_pred_10"
}


#128x256

layer {
  name: "FC2_pred_10"
  type: "InnerProduct"
  bottom: "FC1_relu_pred_10"
  top: "FC2_pred_10"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC2norm1_pred_10"
  type: "BatchNorm"
  bottom: "FC2_pred_10"
  top: "batch_norm_FC2blob1_pred_10"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC2scale1_pred_10"
  type: "Scale"
  bottom: "batch_norm_FC2blob1_pred_10"
  top: "batch_norm_FC2blob1_pred_10"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC2_ReLU_pred_10"
  type: "ReLU"
  bottom: "batch_norm_FC2blob1_pred_10"
  top: "FC2_relu_pred_10"
}



#256x256

layer {
  name: "FC3_pred_10"
  type: "InnerProduct"
  bottom: "FC2_relu_pred_10"
  top: "FC3_pred_10"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC3norm1_pred_10"
  type: "BatchNorm"
  bottom: "FC3_pred_10"
  top: "batch_norm_FC3blob1_pred_10"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC3scale1_pred_10"
  type: "Scale"
  bottom: "batch_norm_FC3blob1_pred_10"
  top: "batch_norm_FC3blob1_pred_10"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC3_ReLU_pred_10"
  type: "ReLU"
  bottom: "batch_norm_FC3blob1_pred_10"
  top: "FC3_relu_pred_10"
}



#256x1024

layer {
  name: "FC4_pred_10"
  type: "InnerProduct"
  bottom: "FC3_relu_pred_10"
  top: "FC4_pred_10"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC4norm1_pred_10"
  type: "BatchNorm"
  bottom: "FC4_pred_10"
  top: "batch_norm_FC4blob1_pred_10"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC4scale1_pred_10"
  type: "Scale"
  bottom: "batch_norm_FC4blob1_pred_10"
  top: "batch_norm_FC4blob1_pred_10"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC4_ReLU_pred_10"
  type: "ReLU"
  bottom: "batch_norm_FC4blob1_pred_10"
  top: "FC4_relu_pred_10"
}


#concat patch branch and pred branch 1024-d
layer {
  type: "Concat"
  bottom: "FC4_relu_pred_10"
  bottom: "FC1_relu_10"
  top: "concat_intermediate_10"
  name: "concat_intermediate_10"
}





layer {
  name: "pred_residual_10"
  type: "InnerProduct"
  bottom: "concat_intermediate_10"
  top: "pred_residual_10"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
       type: "gaussian"
       std: 0.01
    }
  }
}







###resbone_11

layer {
  bottom: "bone_patch_11"
  top: "conv1_11"
  name: "conv1_11"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv1_11"
    top: "conv1_11"
    name: "bn_conv1_11"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv1_11"
    top: "conv1_11"
    name: "scale_conv1_11"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1_11"
    top: "conv1_11"
    name: "conv1_relu_11"
    type: "ReLU"
}

layer {
    bottom: "conv1_11"
    top: "pool1_11"
    name: "pool1_11"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_11"
    top: "bone_patch_11_half"
    name: "bone_patch_11_half"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: AVE
    }
}




layer {
  bottom: "bone_patch_11_half"
  top: "conv2_11"
  name: "conv2_11"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv2_11"
    top: "conv2_11"
    name: "bn_conv2_11"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv2_11"
    top: "conv2_11"
    name: "scale_conv2_11"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv2_11"
    top: "conv2_11"
    name: "conv2_relu_11"
    type: "ReLU"
}

layer {
    bottom: "conv2_11"
    top: "pool2_11"
    name: "pool2_11"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_11"
    top: "bone_patch_11_quarter"
    name: "bone_patch_11_quarter"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: AVE
    }
}







layer {
  bottom: "bone_patch_11_quarter"
  top: "conv3_11"
  name: "conv3_11"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}



layer {
    bottom: "conv3_11"
    top: "conv3_11"
    name: "bn_conv3_11"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv3_11"
    top: "conv3_11"
    name: "scale_conv3_11"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv3_11"
    top: "conv3_11"
    name: "conv3_relu_11"
    type: "ReLU"
}

layer {
  type: "Flatten"
  bottom: "pool1_11"
  top: "pool1_flat_11"
  name: "pool1_flat_11"
}



layer {
  type: "Flatten"
  bottom: "pool2_11"
  top: "pool2_flat_11"
  name: "pool2_flat_11"
}


layer {
  type: "Flatten"
  bottom: "conv3_11"
  top: "conv3_flat_11"
  name: "conv3_flat_11"
}

layer {
  type: "Concat"
  bottom: "pool1_flat_11"
  bottom: "pool2_flat_11"
  bottom: "conv3_flat_11"
 
  name: "fc_input_11"
  top: "fc_input_11"
}




layer {
  name: "FC1_11"
  type: "InnerProduct"
  bottom: "fc_input_11"
  top: "FC1_11"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}


layer {
  name: "batch_FC1norm1_11"
  type: "BatchNorm"
  bottom: "FC1_11"
  top: "batch_norm_FC1blob1_11"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_11"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_11"
  top: "batch_norm_FC1blob1_11"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_11"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_11"
  top: "FC1_relu_11"
}






#======FC branch for pred bone 0
#3x128
layer {
  name: "FC1_pred_11"
  type: "InnerProduct"
  bottom: "pred_bone_11"
  top: "FC1_pred_11"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC1norm1_pred_11"
  type: "BatchNorm"
  bottom: "FC1_pred_11"
  top: "batch_norm_FC1blob1_pred_11"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_pred_11"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_pred_11"
  top: "batch_norm_FC1blob1_pred_11"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_pred_11"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_pred_11"
  top: "FC1_relu_pred_11"
}


#128x256

layer {
  name: "FC2_pred_11"
  type: "InnerProduct"
  bottom: "FC1_relu_pred_11"
  top: "FC2_pred_11"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC2norm1_pred_11"
  type: "BatchNorm"
  bottom: "FC2_pred_11"
  top: "batch_norm_FC2blob1_pred_11"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC2scale1_pred_11"
  type: "Scale"
  bottom: "batch_norm_FC2blob1_pred_11"
  top: "batch_norm_FC2blob1_pred_11"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC2_ReLU_pred_11"
  type: "ReLU"
  bottom: "batch_norm_FC2blob1_pred_11"
  top: "FC2_relu_pred_11"
}



#256x256

layer {
  name: "FC3_pred_11"
  type: "InnerProduct"
  bottom: "FC2_relu_pred_11"
  top: "FC3_pred_11"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC3norm1_pred_11"
  type: "BatchNorm"
  bottom: "FC3_pred_11"
  top: "batch_norm_FC3blob1_pred_11"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC3scale1_pred_11"
  type: "Scale"
  bottom: "batch_norm_FC3blob1_pred_11"
  top: "batch_norm_FC3blob1_pred_11"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC3_ReLU_pred_11"
  type: "ReLU"
  bottom: "batch_norm_FC3blob1_pred_11"
  top: "FC3_relu_pred_11"
}



#256x1024

layer {
  name: "FC4_pred_11"
  type: "InnerProduct"
  bottom: "FC3_relu_pred_11"
  top: "FC4_pred_11"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC4norm1_pred_11"
  type: "BatchNorm"
  bottom: "FC4_pred_11"
  top: "batch_norm_FC4blob1_pred_11"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC4scale1_pred_11"
  type: "Scale"
  bottom: "batch_norm_FC4blob1_pred_11"
  top: "batch_norm_FC4blob1_pred_11"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC4_ReLU_pred_11"
  type: "ReLU"
  bottom: "batch_norm_FC4blob1_pred_11"
  top: "FC4_relu_pred_11"
}


#concat patch branch and pred branch 1024-d
layer {
  type: "Concat"
  bottom: "FC4_relu_pred_11"
  bottom: "FC1_relu_11"
  top: "concat_intermediate_11"
  name: "concat_intermediate_11"
}





layer {
  name: "pred_residual_11"
  type: "InnerProduct"
  bottom: "concat_intermediate_11"
  top: "pred_residual_11"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
       type: "gaussian"
       std: 0.01
    }
  }
}








###resbone_12

layer {
  bottom: "bone_patch_12"
  top: "conv1_12"
  name: "conv1_12"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv1_12"
    top: "conv1_12"
    name: "bn_conv1_12"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv1_12"
    top: "conv1_12"
    name: "scale_conv1_12"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1_12"
    top: "conv1_12"
    name: "conv1_relu_12"
    type: "ReLU"
}

layer {
    bottom: "conv1_12"
    top: "pool1_12"
    name: "pool1_12"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_12"
    top: "bone_patch_12_half"
    name: "bone_patch_12_half"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: AVE
    }
}




layer {
  bottom: "bone_patch_12_half"
  top: "conv2_12"
  name: "conv2_12"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv2_12"
    top: "conv2_12"
    name: "bn_conv2_12"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv2_12"
    top: "conv2_12"
    name: "scale_conv2_12"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv2_12"
    top: "conv2_12"
    name: "conv2_relu_12"
    type: "ReLU"
}

layer {
    bottom: "conv2_12"
    top: "pool2_12"
    name: "pool2_12"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_12"
    top: "bone_patch_12_quarter"
    name: "bone_patch_12_quarter"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: AVE
    }
}







layer {
  bottom: "bone_patch_12_quarter"
  top: "conv3_12"
  name: "conv3_12"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}



layer {
    bottom: "conv3_12"
    top: "conv3_12"
    name: "bn_conv3_12"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv3_12"
    top: "conv3_12"
    name: "scale_conv3_12"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv3_12"
    top: "conv3_12"
    name: "conv3_relu_12"
    type: "ReLU"
}

layer {
  type: "Flatten"
  bottom: "pool1_12"
  top: "pool1_flat_12"
  name: "pool1_flat_12"
}



layer {
  type: "Flatten"
  bottom: "pool2_12"
  top: "pool2_flat_12"
  name: "pool2_flat_12"
}


layer {
  type: "Flatten"
  bottom: "conv3_12"
  top: "conv3_flat_12"
  name: "conv3_flat_12"
}

layer {
  type: "Concat"
  bottom: "pool1_flat_12"
  bottom: "pool2_flat_12"
  bottom: "conv3_flat_12"
 
  name: "fc_input_12"
  top: "fc_input_12"
}




layer {
  name: "FC1_12"
  type: "InnerProduct"
  bottom: "fc_input_12"
  top: "FC1_12"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}


layer {
  name: "batch_FC1norm1_12"
  type: "BatchNorm"
  bottom: "FC1_12"
  top: "batch_norm_FC1blob1_12"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_12"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_12"
  top: "batch_norm_FC1blob1_12"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_12"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_12"
  top: "FC1_relu_12"
}






#======FC branch for pred bone 0
#3x128
layer {
  name: "FC1_pred_12"
  type: "InnerProduct"
  bottom: "pred_bone_12"
  top: "FC1_pred_12"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC1norm1_pred_12"
  type: "BatchNorm"
  bottom: "FC1_pred_12"
  top: "batch_norm_FC1blob1_pred_12"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_pred_12"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_pred_12"
  top: "batch_norm_FC1blob1_pred_12"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_pred_12"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_pred_12"
  top: "FC1_relu_pred_12"
}


#128x256

layer {
  name: "FC2_pred_12"
  type: "InnerProduct"
  bottom: "FC1_relu_pred_12"
  top: "FC2_pred_12"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC2norm1_pred_12"
  type: "BatchNorm"
  bottom: "FC2_pred_12"
  top: "batch_norm_FC2blob1_pred_12"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC2scale1_pred_12"
  type: "Scale"
  bottom: "batch_norm_FC2blob1_pred_12"
  top: "batch_norm_FC2blob1_pred_12"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC2_ReLU_pred_12"
  type: "ReLU"
  bottom: "batch_norm_FC2blob1_pred_12"
  top: "FC2_relu_pred_12"
}



#256x256

layer {
  name: "FC3_pred_12"
  type: "InnerProduct"
  bottom: "FC2_relu_pred_12"
  top: "FC3_pred_12"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC3norm1_pred_12"
  type: "BatchNorm"
  bottom: "FC3_pred_12"
  top: "batch_norm_FC3blob1_pred_12"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC3scale1_pred_12"
  type: "Scale"
  bottom: "batch_norm_FC3blob1_pred_12"
  top: "batch_norm_FC3blob1_pred_12"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC3_ReLU_pred_12"
  type: "ReLU"
  bottom: "batch_norm_FC3blob1_pred_12"
  top: "FC3_relu_pred_12"
}



#256x1024

layer {
  name: "FC4_pred_12"
  type: "InnerProduct"
  bottom: "FC3_relu_pred_12"
  top: "FC4_pred_12"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC4norm1_pred_12"
  type: "BatchNorm"
  bottom: "FC4_pred_12"
  top: "batch_norm_FC4blob1_pred_12"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC4scale1_pred_12"
  type: "Scale"
  bottom: "batch_norm_FC4blob1_pred_12"
  top: "batch_norm_FC4blob1_pred_12"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC4_ReLU_pred_12"
  type: "ReLU"
  bottom: "batch_norm_FC4blob1_pred_12"
  top: "FC4_relu_pred_12"
}


#concat patch branch and pred branch 1024-d
layer {
  type: "Concat"
  bottom: "FC4_relu_pred_12"
  bottom: "FC1_relu_12"
  top: "concat_intermediate_12"
  name: "concat_intermediate_12"
}





layer {
  name: "pred_residual_12"
  type: "InnerProduct"
  bottom: "concat_intermediate_12"
  top: "pred_residual_12"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
       type: "gaussian"
       std: 0.01
    }
  }
}






###resbone_13

layer {
  bottom: "bone_patch_13"
  top: "conv1_13"
  name: "conv1_13"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv1_13"
    top: "conv1_13"
    name: "bn_conv1_13"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv1_13"
    top: "conv1_13"
    name: "scale_conv1_13"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1_13"
    top: "conv1_13"
    name: "conv1_relu_13"
    type: "ReLU"
}

layer {
    bottom: "conv1_13"
    top: "pool1_13"
    name: "pool1_13"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_13"
    top: "bone_patch_13_half"
    name: "bone_patch_13_half"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: AVE
    }
}




layer {
  bottom: "bone_patch_13_half"
  top: "conv2_13"
  name: "conv2_13"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv2_13"
    top: "conv2_13"
    name: "bn_conv2_13"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv2_13"
    top: "conv2_13"
    name: "scale_conv2_13"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv2_13"
    top: "conv2_13"
    name: "conv2_relu_13"
    type: "ReLU"
}

layer {
    bottom: "conv2_13"
    top: "pool2_13"
    name: "pool2_13"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_13"
    top: "bone_patch_13_quarter"
    name: "bone_patch_13_quarter"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: AVE
    }
}







layer {
  bottom: "bone_patch_13_quarter"
  top: "conv3_13"
  name: "conv3_13"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}



layer {
    bottom: "conv3_13"
    top: "conv3_13"
    name: "bn_conv3_13"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv3_13"
    top: "conv3_13"
    name: "scale_conv3_13"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv3_13"
    top: "conv3_13"
    name: "conv3_relu_13"
    type: "ReLU"
}

layer {
  type: "Flatten"
  bottom: "pool1_13"
  top: "pool1_flat_13"
  name: "pool1_flat_13"
}



layer {
  type: "Flatten"
  bottom: "pool2_13"
  top: "pool2_flat_13"
  name: "pool2_flat_13"
}


layer {
  type: "Flatten"
  bottom: "conv3_13"
  top: "conv3_flat_13"
  name: "conv3_flat_13"
}

layer {
  type: "Concat"
  bottom: "pool1_flat_13"
  bottom: "pool2_flat_13"
  bottom: "conv3_flat_13"
 
  name: "fc_input_13"
  top: "fc_input_13"
}




layer {
  name: "FC1_13"
  type: "InnerProduct"
  bottom: "fc_input_13"
  top: "FC1_13"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}


layer {
  name: "batch_FC1norm1_13"
  type: "BatchNorm"
  bottom: "FC1_13"
  top: "batch_norm_FC1blob1_13"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_13"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_13"
  top: "batch_norm_FC1blob1_13"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_13"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_13"
  top: "FC1_relu_13"
}






#======FC branch for pred bone 0
#3x128
layer {
  name: "FC1_pred_13"
  type: "InnerProduct"
  bottom: "pred_bone_13"
  top: "FC1_pred_13"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC1norm1_pred_13"
  type: "BatchNorm"
  bottom: "FC1_pred_13"
  top: "batch_norm_FC1blob1_pred_13"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_pred_13"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_pred_13"
  top: "batch_norm_FC1blob1_pred_13"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_pred_13"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_pred_13"
  top: "FC1_relu_pred_13"
}


#128x256

layer {
  name: "FC2_pred_13"
  type: "InnerProduct"
  bottom: "FC1_relu_pred_13"
  top: "FC2_pred_13"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC2norm1_pred_13"
  type: "BatchNorm"
  bottom: "FC2_pred_13"
  top: "batch_norm_FC2blob1_pred_13"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC2scale1_pred_13"
  type: "Scale"
  bottom: "batch_norm_FC2blob1_pred_13"
  top: "batch_norm_FC2blob1_pred_13"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC2_ReLU_pred_13"
  type: "ReLU"
  bottom: "batch_norm_FC2blob1_pred_13"
  top: "FC2_relu_pred_13"
}



#256x256

layer {
  name: "FC3_pred_13"
  type: "InnerProduct"
  bottom: "FC2_relu_pred_13"
  top: "FC3_pred_13"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC3norm1_pred_13"
  type: "BatchNorm"
  bottom: "FC3_pred_13"
  top: "batch_norm_FC3blob1_pred_13"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC3scale1_pred_13"
  type: "Scale"
  bottom: "batch_norm_FC3blob1_pred_13"
  top: "batch_norm_FC3blob1_pred_13"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC3_ReLU_pred_13"
  type: "ReLU"
  bottom: "batch_norm_FC3blob1_pred_13"
  top: "FC3_relu_pred_13"
}



#256x1024

layer {
  name: "FC4_pred_13"
  type: "InnerProduct"
  bottom: "FC3_relu_pred_13"
  top: "FC4_pred_13"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC4norm1_pred_13"
  type: "BatchNorm"
  bottom: "FC4_pred_13"
  top: "batch_norm_FC4blob1_pred_13"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC4scale1_pred_13"
  type: "Scale"
  bottom: "batch_norm_FC4blob1_pred_13"
  top: "batch_norm_FC4blob1_pred_13"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC4_ReLU_pred_13"
  type: "ReLU"
  bottom: "batch_norm_FC4blob1_pred_13"
  top: "FC4_relu_pred_13"
}


#concat patch branch and pred branch 1024-d
layer {
  type: "Concat"
  bottom: "FC4_relu_pred_13"
  bottom: "FC1_relu_13"
  top: "concat_intermediate_13"
  name: "concat_intermediate_13"
}





layer {
  name: "pred_residual_13"
  type: "InnerProduct"
  bottom: "concat_intermediate_13"
  top: "pred_residual_13"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
       type: "gaussian"
       std: 0.01
    }
  }
}






###resbone_14

layer {
  bottom: "bone_patch_14"
  top: "conv1_14"
  name: "conv1_14"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv1_14"
    top: "conv1_14"
    name: "bn_conv1_14"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv1_14"
    top: "conv1_14"
    name: "scale_conv1_14"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1_14"
    top: "conv1_14"
    name: "conv1_relu_14"
    type: "ReLU"
}

layer {
    bottom: "conv1_14"
    top: "pool1_14"
    name: "pool1_14"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_14"
    top: "bone_patch_14_half"
    name: "bone_patch_14_half"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: AVE
    }
}




layer {
  bottom: "bone_patch_14_half"
  top: "conv2_14"
  name: "conv2_14"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv2_14"
    top: "conv2_14"
    name: "bn_conv2_14"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv2_14"
    top: "conv2_14"
    name: "scale_conv2_14"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv2_14"
    top: "conv2_14"
    name: "conv2_relu_14"
    type: "ReLU"
}

layer {
    bottom: "conv2_14"
    top: "pool2_14"
    name: "pool2_14"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_14"
    top: "bone_patch_14_quarter"
    name: "bone_patch_14_quarter"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: AVE
    }
}







layer {
  bottom: "bone_patch_14_quarter"
  top: "conv3_14"
  name: "conv3_14"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}



layer {
    bottom: "conv3_14"
    top: "conv3_14"
    name: "bn_conv3_14"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv3_14"
    top: "conv3_14"
    name: "scale_conv3_14"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv3_14"
    top: "conv3_14"
    name: "conv3_relu_14"
    type: "ReLU"
}

layer {
  type: "Flatten"
  bottom: "pool1_14"
  top: "pool1_flat_14"
  name: "pool1_flat_14"
}



layer {
  type: "Flatten"
  bottom: "pool2_14"
  top: "pool2_flat_14"
  name: "pool2_flat_14"
}


layer {
  type: "Flatten"
  bottom: "conv3_14"
  top: "conv3_flat_14"
  name: "conv3_flat_14"
}

layer {
  type: "Concat"
  bottom: "pool1_flat_14"
  bottom: "pool2_flat_14"
  bottom: "conv3_flat_14"
 
  name: "fc_input_14"
  top: "fc_input_14"
}




layer {
  name: "FC1_14"
  type: "InnerProduct"
  bottom: "fc_input_14"
  top: "FC1_14"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}


layer {
  name: "batch_FC1norm1_14"
  type: "BatchNorm"
  bottom: "FC1_14"
  top: "batch_norm_FC1blob1_14"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_14"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_14"
  top: "batch_norm_FC1blob1_14"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_14"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_14"
  top: "FC1_relu_14"
}






#======FC branch for pred bone 0
#3x128
layer {
  name: "FC1_pred_14"
  type: "InnerProduct"
  bottom: "pred_bone_14"
  top: "FC1_pred_14"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC1norm1_pred_14"
  type: "BatchNorm"
  bottom: "FC1_pred_14"
  top: "batch_norm_FC1blob1_pred_14"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_pred_14"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_pred_14"
  top: "batch_norm_FC1blob1_pred_14"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_pred_14"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_pred_14"
  top: "FC1_relu_pred_14"
}


#128x256

layer {
  name: "FC2_pred_14"
  type: "InnerProduct"
  bottom: "FC1_relu_pred_14"
  top: "FC2_pred_14"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC2norm1_pred_14"
  type: "BatchNorm"
  bottom: "FC2_pred_14"
  top: "batch_norm_FC2blob1_pred_14"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC2scale1_pred_14"
  type: "Scale"
  bottom: "batch_norm_FC2blob1_pred_14"
  top: "batch_norm_FC2blob1_pred_14"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC2_ReLU_pred_14"
  type: "ReLU"
  bottom: "batch_norm_FC2blob1_pred_14"
  top: "FC2_relu_pred_14"
}



#256x256

layer {
  name: "FC3_pred_14"
  type: "InnerProduct"
  bottom: "FC2_relu_pred_14"
  top: "FC3_pred_14"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC3norm1_pred_14"
  type: "BatchNorm"
  bottom: "FC3_pred_14"
  top: "batch_norm_FC3blob1_pred_14"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC3scale1_pred_14"
  type: "Scale"
  bottom: "batch_norm_FC3blob1_pred_14"
  top: "batch_norm_FC3blob1_pred_14"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC3_ReLU_pred_14"
  type: "ReLU"
  bottom: "batch_norm_FC3blob1_pred_14"
  top: "FC3_relu_pred_14"
}



#256x1024

layer {
  name: "FC4_pred_14"
  type: "InnerProduct"
  bottom: "FC3_relu_pred_14"
  top: "FC4_pred_14"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC4norm1_pred_14"
  type: "BatchNorm"
  bottom: "FC4_pred_14"
  top: "batch_norm_FC4blob1_pred_14"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC4scale1_pred_14"
  type: "Scale"
  bottom: "batch_norm_FC4blob1_pred_14"
  top: "batch_norm_FC4blob1_pred_14"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC4_ReLU_pred_14"
  type: "ReLU"
  bottom: "batch_norm_FC4blob1_pred_14"
  top: "FC4_relu_pred_14"
}


#concat patch branch and pred branch 1024-d
layer {
  type: "Concat"
  bottom: "FC4_relu_pred_14"
  bottom: "FC1_relu_14"
  top: "concat_intermediate_14"
  name: "concat_intermediate_14"
}





layer {
  name: "pred_residual_14"
  type: "InnerProduct"
  bottom: "concat_intermediate_14"
  top: "pred_residual_14"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
       type: "gaussian"
       std: 0.01
    }
  }
}






###resbone_15

layer {
  bottom: "bone_patch_15"
  top: "conv1_15"
  name: "conv1_15"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv1_15"
    top: "conv1_15"
    name: "bn_conv1_15"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv1_15"
    top: "conv1_15"
    name: "scale_conv1_15"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1_15"
    top: "conv1_15"
    name: "conv1_relu_15"
    type: "ReLU"
}

layer {
    bottom: "conv1_15"
    top: "pool1_15"
    name: "pool1_15"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_15"
    top: "bone_patch_15_half"
    name: "bone_patch_15_half"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: AVE
    }
}




layer {
  bottom: "bone_patch_15_half"
  top: "conv2_15"
  name: "conv2_15"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv2_15"
    top: "conv2_15"
    name: "bn_conv2_15"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv2_15"
    top: "conv2_15"
    name: "scale_conv2_15"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv2_15"
    top: "conv2_15"
    name: "conv2_relu_15"
    type: "ReLU"
}

layer {
    bottom: "conv2_15"
    top: "pool2_15"
    name: "pool2_15"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_15"
    top: "bone_patch_15_quarter"
    name: "bone_patch_15_quarter"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: AVE
    }
}







layer {
  bottom: "bone_patch_15_quarter"
  top: "conv3_15"
  name: "conv3_15"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}



layer {
    bottom: "conv3_15"
    top: "conv3_15"
    name: "bn_conv3_15"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv3_15"
    top: "conv3_15"
    name: "scale_conv3_15"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv3_15"
    top: "conv3_15"
    name: "conv3_relu_15"
    type: "ReLU"
}

layer {
  type: "Flatten"
  bottom: "pool1_15"
  top: "pool1_flat_15"
  name: "pool1_flat_15"
}



layer {
  type: "Flatten"
  bottom: "pool2_15"
  top: "pool2_flat_15"
  name: "pool2_flat_15"
}


layer {
  type: "Flatten"
  bottom: "conv3_15"
  top: "conv3_flat_15"
  name: "conv3_flat_15"
}

layer {
  type: "Concat"
  bottom: "pool1_flat_15"
  bottom: "pool2_flat_15"
  bottom: "conv3_flat_15"
 
  name: "fc_input_15"
  top: "fc_input_15"
}




layer {
  name: "FC1_15"
  type: "InnerProduct"
  bottom: "fc_input_15"
  top: "FC1_15"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}


layer {
  name: "batch_FC1norm1_15"
  type: "BatchNorm"
  bottom: "FC1_15"
  top: "batch_norm_FC1blob1_15"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_15"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_15"
  top: "batch_norm_FC1blob1_15"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_15"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_15"
  top: "FC1_relu_15"
}






#======FC branch for pred bone 0
#3x128
layer {
  name: "FC1_pred_15"
  type: "InnerProduct"
  bottom: "pred_bone_15"
  top: "FC1_pred_15"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC1norm1_pred_15"
  type: "BatchNorm"
  bottom: "FC1_pred_15"
  top: "batch_norm_FC1blob1_pred_15"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_pred_15"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_pred_15"
  top: "batch_norm_FC1blob1_pred_15"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_pred_15"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_pred_15"
  top: "FC1_relu_pred_15"
}


#128x256

layer {
  name: "FC2_pred_15"
  type: "InnerProduct"
  bottom: "FC1_relu_pred_15"
  top: "FC2_pred_15"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC2norm1_pred_15"
  type: "BatchNorm"
  bottom: "FC2_pred_15"
  top: "batch_norm_FC2blob1_pred_15"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC2scale1_pred_15"
  type: "Scale"
  bottom: "batch_norm_FC2blob1_pred_15"
  top: "batch_norm_FC2blob1_pred_15"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC2_ReLU_pred_15"
  type: "ReLU"
  bottom: "batch_norm_FC2blob1_pred_15"
  top: "FC2_relu_pred_15"
}



#256x256

layer {
  name: "FC3_pred_15"
  type: "InnerProduct"
  bottom: "FC2_relu_pred_15"
  top: "FC3_pred_15"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC3norm1_pred_15"
  type: "BatchNorm"
  bottom: "FC3_pred_15"
  top: "batch_norm_FC3blob1_pred_15"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC3scale1_pred_15"
  type: "Scale"
  bottom: "batch_norm_FC3blob1_pred_15"
  top: "batch_norm_FC3blob1_pred_15"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC3_ReLU_pred_15"
  type: "ReLU"
  bottom: "batch_norm_FC3blob1_pred_15"
  top: "FC3_relu_pred_15"
}



#256x1024

layer {
  name: "FC4_pred_15"
  type: "InnerProduct"
  bottom: "FC3_relu_pred_15"
  top: "FC4_pred_15"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC4norm1_pred_15"
  type: "BatchNorm"
  bottom: "FC4_pred_15"
  top: "batch_norm_FC4blob1_pred_15"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC4scale1_pred_15"
  type: "Scale"
  bottom: "batch_norm_FC4blob1_pred_15"
  top: "batch_norm_FC4blob1_pred_15"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC4_ReLU_pred_15"
  type: "ReLU"
  bottom: "batch_norm_FC4blob1_pred_15"
  top: "FC4_relu_pred_15"
}


#concat patch branch and pred branch 1024-d
layer {
  type: "Concat"
  bottom: "FC4_relu_pred_15"
  bottom: "FC1_relu_15"
  top: "concat_intermediate_15"
  name: "concat_intermediate_15"
}





layer {
  name: "pred_residual_15"
  type: "InnerProduct"
  bottom: "concat_intermediate_15"
  top: "pred_residual_15"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
       type: "gaussian"
       std: 0.01
    }
  }
}






###resbone_16

layer {
  bottom: "bone_patch_16"
  top: "conv1_16"
  name: "conv1_16"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv1_16"
    top: "conv1_16"
    name: "bn_conv1_16"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv1_16"
    top: "conv1_16"
    name: "scale_conv1_16"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1_16"
    top: "conv1_16"
    name: "conv1_relu_16"
    type: "ReLU"
}

layer {
    bottom: "conv1_16"
    top: "pool1_16"
    name: "pool1_16"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_16"
    top: "bone_patch_16_half"
    name: "bone_patch_16_half"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: AVE
    }
}




layer {
  bottom: "bone_patch_16_half"
  top: "conv2_16"
  name: "conv2_16"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv2_16"
    top: "conv2_16"
    name: "bn_conv2_16"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv2_16"
    top: "conv2_16"
    name: "scale_conv2_16"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv2_16"
    top: "conv2_16"
    name: "conv2_relu_16"
    type: "ReLU"
}

layer {
    bottom: "conv2_16"
    top: "pool2_16"
    name: "pool2_16"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_16"
    top: "bone_patch_16_quarter"
    name: "bone_patch_16_quarter"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: AVE
    }
}







layer {
  bottom: "bone_patch_16_quarter"
  top: "conv3_16"
  name: "conv3_16"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}



layer {
    bottom: "conv3_16"
    top: "conv3_16"
    name: "bn_conv3_16"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv3_16"
    top: "conv3_16"
    name: "scale_conv3_16"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv3_16"
    top: "conv3_16"
    name: "conv3_relu_16"
    type: "ReLU"
}

layer {
  type: "Flatten"
  bottom: "pool1_16"
  top: "pool1_flat_16"
  name: "pool1_flat_16"
}



layer {
  type: "Flatten"
  bottom: "pool2_16"
  top: "pool2_flat_16"
  name: "pool2_flat_16"
}


layer {
  type: "Flatten"
  bottom: "conv3_16"
  top: "conv3_flat_16"
  name: "conv3_flat_16"
}

layer {
  type: "Concat"
  bottom: "pool1_flat_16"
  bottom: "pool2_flat_16"
  bottom: "conv3_flat_16"
 
  name: "fc_input_16"
  top: "fc_input_16"
}




layer {
  name: "FC1_16"
  type: "InnerProduct"
  bottom: "fc_input_16"
  top: "FC1_16"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}


layer {
  name: "batch_FC1norm1_16"
  type: "BatchNorm"
  bottom: "FC1_16"
  top: "batch_norm_FC1blob1_16"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_16"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_16"
  top: "batch_norm_FC1blob1_16"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_16"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_16"
  top: "FC1_relu_16"
}






#======FC branch for pred bone 0
#3x128
layer {
  name: "FC1_pred_16"
  type: "InnerProduct"
  bottom: "pred_bone_16"
  top: "FC1_pred_16"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC1norm1_pred_16"
  type: "BatchNorm"
  bottom: "FC1_pred_16"
  top: "batch_norm_FC1blob1_pred_16"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_pred_16"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_pred_16"
  top: "batch_norm_FC1blob1_pred_16"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_pred_16"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_pred_16"
  top: "FC1_relu_pred_16"
}


#128x256

layer {
  name: "FC2_pred_16"
  type: "InnerProduct"
  bottom: "FC1_relu_pred_16"
  top: "FC2_pred_16"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC2norm1_pred_16"
  type: "BatchNorm"
  bottom: "FC2_pred_16"
  top: "batch_norm_FC2blob1_pred_16"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC2scale1_pred_16"
  type: "Scale"
  bottom: "batch_norm_FC2blob1_pred_16"
  top: "batch_norm_FC2blob1_pred_16"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC2_ReLU_pred_16"
  type: "ReLU"
  bottom: "batch_norm_FC2blob1_pred_16"
  top: "FC2_relu_pred_16"
}



#256x256

layer {
  name: "FC3_pred_16"
  type: "InnerProduct"
  bottom: "FC2_relu_pred_16"
  top: "FC3_pred_16"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC3norm1_pred_16"
  type: "BatchNorm"
  bottom: "FC3_pred_16"
  top: "batch_norm_FC3blob1_pred_16"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC3scale1_pred_16"
  type: "Scale"
  bottom: "batch_norm_FC3blob1_pred_16"
  top: "batch_norm_FC3blob1_pred_16"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC3_ReLU_pred_16"
  type: "ReLU"
  bottom: "batch_norm_FC3blob1_pred_16"
  top: "FC3_relu_pred_16"
}



#256x1024

layer {
  name: "FC4_pred_16"
  type: "InnerProduct"
  bottom: "FC3_relu_pred_16"
  top: "FC4_pred_16"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC4norm1_pred_16"
  type: "BatchNorm"
  bottom: "FC4_pred_16"
  top: "batch_norm_FC4blob1_pred_16"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC4scale1_pred_16"
  type: "Scale"
  bottom: "batch_norm_FC4blob1_pred_16"
  top: "batch_norm_FC4blob1_pred_16"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC4_ReLU_pred_16"
  type: "ReLU"
  bottom: "batch_norm_FC4blob1_pred_16"
  top: "FC4_relu_pred_16"
}


#concat patch branch and pred branch 1024-d
layer {
  type: "Concat"
  bottom: "FC4_relu_pred_16"
  bottom: "FC1_relu_16"
  top: "concat_intermediate_16"
  name: "concat_intermediate_16"
}





layer {
  name: "pred_residual_16"
  type: "InnerProduct"
  bottom: "concat_intermediate_16"
  top: "pred_residual_16"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
       type: "gaussian"
       std: 0.01
    }
  }
}






###resbone_17

layer {
  bottom: "bone_patch_17"
  top: "conv1_17"
  name: "conv1_17"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv1_17"
    top: "conv1_17"
    name: "bn_conv1_17"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv1_17"
    top: "conv1_17"
    name: "scale_conv1_17"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1_17"
    top: "conv1_17"
    name: "conv1_relu_17"
    type: "ReLU"
}

layer {
    bottom: "conv1_17"
    top: "pool1_17"
    name: "pool1_17"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_17"
    top: "bone_patch_17_half"
    name: "bone_patch_17_half"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: AVE
    }
}




layer {
  bottom: "bone_patch_17_half"
  top: "conv2_17"
  name: "conv2_17"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv2_17"
    top: "conv2_17"
    name: "bn_conv2_17"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv2_17"
    top: "conv2_17"
    name: "scale_conv2_17"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv2_17"
    top: "conv2_17"
    name: "conv2_relu_17"
    type: "ReLU"
}

layer {
    bottom: "conv2_17"
    top: "pool2_17"
    name: "pool2_17"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_17"
    top: "bone_patch_17_quarter"
    name: "bone_patch_17_quarter"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: AVE
    }
}







layer {
  bottom: "bone_patch_17_quarter"
  top: "conv3_17"
  name: "conv3_17"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}



layer {
    bottom: "conv3_17"
    top: "conv3_17"
    name: "bn_conv3_17"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv3_17"
    top: "conv3_17"
    name: "scale_conv3_17"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv3_17"
    top: "conv3_17"
    name: "conv3_relu_17"
    type: "ReLU"
}

layer {
  type: "Flatten"
  bottom: "pool1_17"
  top: "pool1_flat_17"
  name: "pool1_flat_17"
}



layer {
  type: "Flatten"
  bottom: "pool2_17"
  top: "pool2_flat_17"
  name: "pool2_flat_17"
}


layer {
  type: "Flatten"
  bottom: "conv3_17"
  top: "conv3_flat_17"
  name: "conv3_flat_17"
}

layer {
  type: "Concat"
  bottom: "pool1_flat_17"
  bottom: "pool2_flat_17"
  bottom: "conv3_flat_17"
 
  name: "fc_input_17"
  top: "fc_input_17"
}




layer {
  name: "FC1_17"
  type: "InnerProduct"
  bottom: "fc_input_17"
  top: "FC1_17"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}


layer {
  name: "batch_FC1norm1_17"
  type: "BatchNorm"
  bottom: "FC1_17"
  top: "batch_norm_FC1blob1_17"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_17"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_17"
  top: "batch_norm_FC1blob1_17"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_17"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_17"
  top: "FC1_relu_17"
}






#======FC branch for pred bone 0
#3x128
layer {
  name: "FC1_pred_17"
  type: "InnerProduct"
  bottom: "pred_bone_17"
  top: "FC1_pred_17"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC1norm1_pred_17"
  type: "BatchNorm"
  bottom: "FC1_pred_17"
  top: "batch_norm_FC1blob1_pred_17"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_pred_17"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_pred_17"
  top: "batch_norm_FC1blob1_pred_17"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_pred_17"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_pred_17"
  top: "FC1_relu_pred_17"
}


#128x256

layer {
  name: "FC2_pred_17"
  type: "InnerProduct"
  bottom: "FC1_relu_pred_17"
  top: "FC2_pred_17"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC2norm1_pred_17"
  type: "BatchNorm"
  bottom: "FC2_pred_17"
  top: "batch_norm_FC2blob1_pred_17"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC2scale1_pred_17"
  type: "Scale"
  bottom: "batch_norm_FC2blob1_pred_17"
  top: "batch_norm_FC2blob1_pred_17"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC2_ReLU_pred_17"
  type: "ReLU"
  bottom: "batch_norm_FC2blob1_pred_17"
  top: "FC2_relu_pred_17"
}



#256x256

layer {
  name: "FC3_pred_17"
  type: "InnerProduct"
  bottom: "FC2_relu_pred_17"
  top: "FC3_pred_17"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC3norm1_pred_17"
  type: "BatchNorm"
  bottom: "FC3_pred_17"
  top: "batch_norm_FC3blob1_pred_17"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC3scale1_pred_17"
  type: "Scale"
  bottom: "batch_norm_FC3blob1_pred_17"
  top: "batch_norm_FC3blob1_pred_17"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC3_ReLU_pred_17"
  type: "ReLU"
  bottom: "batch_norm_FC3blob1_pred_17"
  top: "FC3_relu_pred_17"
}



#256x1024

layer {
  name: "FC4_pred_17"
  type: "InnerProduct"
  bottom: "FC3_relu_pred_17"
  top: "FC4_pred_17"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC4norm1_pred_17"
  type: "BatchNorm"
  bottom: "FC4_pred_17"
  top: "batch_norm_FC4blob1_pred_17"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC4scale1_pred_17"
  type: "Scale"
  bottom: "batch_norm_FC4blob1_pred_17"
  top: "batch_norm_FC4blob1_pred_17"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC4_ReLU_pred_17"
  type: "ReLU"
  bottom: "batch_norm_FC4blob1_pred_17"
  top: "FC4_relu_pred_17"
}


#concat patch branch and pred branch 1024-d
layer {
  type: "Concat"
  bottom: "FC4_relu_pred_17"
  bottom: "FC1_relu_17"
  top: "concat_intermediate_17"
  name: "concat_intermediate_17"
}





layer {
  name: "pred_residual_17"
  type: "InnerProduct"
  bottom: "concat_intermediate_17"
  top: "pred_residual_17"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
       type: "gaussian"
       std: 0.01
    }
  }
}






###resbone_18

layer {
  bottom: "bone_patch_18"
  top: "conv1_18"
  name: "conv1_18"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv1_18"
    top: "conv1_18"
    name: "bn_conv1_18"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv1_18"
    top: "conv1_18"
    name: "scale_conv1_18"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1_18"
    top: "conv1_18"
    name: "conv1_relu_18"
    type: "ReLU"
}

layer {
    bottom: "conv1_18"
    top: "pool1_18"
    name: "pool1_18"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_18"
    top: "bone_patch_18_half"
    name: "bone_patch_18_half"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: AVE
    }
}




layer {
  bottom: "bone_patch_18_half"
  top: "conv2_18"
  name: "conv2_18"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv2_18"
    top: "conv2_18"
    name: "bn_conv2_18"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv2_18"
    top: "conv2_18"
    name: "scale_conv2_18"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv2_18"
    top: "conv2_18"
    name: "conv2_relu_18"
    type: "ReLU"
}

layer {
    bottom: "conv2_18"
    top: "pool2_18"
    name: "pool2_18"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_18"
    top: "bone_patch_18_quarter"
    name: "bone_patch_18_quarter"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: AVE
    }
}







layer {
  bottom: "bone_patch_18_quarter"
  top: "conv3_18"
  name: "conv3_18"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}



layer {
    bottom: "conv3_18"
    top: "conv3_18"
    name: "bn_conv3_18"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv3_18"
    top: "conv3_18"
    name: "scale_conv3_18"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv3_18"
    top: "conv3_18"
    name: "conv3_relu_18"
    type: "ReLU"
}

layer {
  type: "Flatten"
  bottom: "pool1_18"
  top: "pool1_flat_18"
  name: "pool1_flat_18"
}



layer {
  type: "Flatten"
  bottom: "pool2_18"
  top: "pool2_flat_18"
  name: "pool2_flat_18"
}


layer {
  type: "Flatten"
  bottom: "conv3_18"
  top: "conv3_flat_18"
  name: "conv3_flat_18"
}

layer {
  type: "Concat"
  bottom: "pool1_flat_18"
  bottom: "pool2_flat_18"
  bottom: "conv3_flat_18"
 
  name: "fc_input_18"
  top: "fc_input_18"
}




layer {
  name: "FC1_18"
  type: "InnerProduct"
  bottom: "fc_input_18"
  top: "FC1_18"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}


layer {
  name: "batch_FC1norm1_18"
  type: "BatchNorm"
  bottom: "FC1_18"
  top: "batch_norm_FC1blob1_18"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_18"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_18"
  top: "batch_norm_FC1blob1_18"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_18"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_18"
  top: "FC1_relu_18"
}






#======FC branch for pred bone 0
#3x128
layer {
  name: "FC1_pred_18"
  type: "InnerProduct"
  bottom: "pred_bone_18"
  top: "FC1_pred_18"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC1norm1_pred_18"
  type: "BatchNorm"
  bottom: "FC1_pred_18"
  top: "batch_norm_FC1blob1_pred_18"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_pred_18"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_pred_18"
  top: "batch_norm_FC1blob1_pred_18"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_pred_18"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_pred_18"
  top: "FC1_relu_pred_18"
}


#128x256

layer {
  name: "FC2_pred_18"
  type: "InnerProduct"
  bottom: "FC1_relu_pred_18"
  top: "FC2_pred_18"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC2norm1_pred_18"
  type: "BatchNorm"
  bottom: "FC2_pred_18"
  top: "batch_norm_FC2blob1_pred_18"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC2scale1_pred_18"
  type: "Scale"
  bottom: "batch_norm_FC2blob1_pred_18"
  top: "batch_norm_FC2blob1_pred_18"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC2_ReLU_pred_18"
  type: "ReLU"
  bottom: "batch_norm_FC2blob1_pred_18"
  top: "FC2_relu_pred_18"
}



#256x256

layer {
  name: "FC3_pred_18"
  type: "InnerProduct"
  bottom: "FC2_relu_pred_18"
  top: "FC3_pred_18"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC3norm1_pred_18"
  type: "BatchNorm"
  bottom: "FC3_pred_18"
  top: "batch_norm_FC3blob1_pred_18"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC3scale1_pred_18"
  type: "Scale"
  bottom: "batch_norm_FC3blob1_pred_18"
  top: "batch_norm_FC3blob1_pred_18"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC3_ReLU_pred_18"
  type: "ReLU"
  bottom: "batch_norm_FC3blob1_pred_18"
  top: "FC3_relu_pred_18"
}



#256x1024

layer {
  name: "FC4_pred_18"
  type: "InnerProduct"
  bottom: "FC3_relu_pred_18"
  top: "FC4_pred_18"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC4norm1_pred_18"
  type: "BatchNorm"
  bottom: "FC4_pred_18"
  top: "batch_norm_FC4blob1_pred_18"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC4scale1_pred_18"
  type: "Scale"
  bottom: "batch_norm_FC4blob1_pred_18"
  top: "batch_norm_FC4blob1_pred_18"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC4_ReLU_pred_18"
  type: "ReLU"
  bottom: "batch_norm_FC4blob1_pred_18"
  top: "FC4_relu_pred_18"
}


#concat patch branch and pred branch 1024-d
layer {
  type: "Concat"
  bottom: "FC4_relu_pred_18"
  bottom: "FC1_relu_18"
  top: "concat_intermediate_18"
  name: "concat_intermediate_18"
}





layer {
  name: "pred_residual_18"
  type: "InnerProduct"
  bottom: "concat_intermediate_18"
  top: "pred_residual_18"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
       type: "gaussian"
       std: 0.01
    }
  }
}
























###resbone_19

layer {
  bottom: "bone_patch_19"
  top: "conv1_19"
  name: "conv1_19"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv1_19"
    top: "conv1_19"
    name: "bn_conv1_19"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv1_19"
    top: "conv1_19"
    name: "scale_conv1_19"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1_19"
    top: "conv1_19"
    name: "conv1_relu_19"
    type: "ReLU"
}

layer {
    bottom: "conv1_19"
    top: "pool1_19"
    name: "pool1_19"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_19"
    top: "bone_patch_19_half"
    name: "bone_patch_19_half"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: AVE
    }
}




layer {
  bottom: "bone_patch_19_half"
  top: "conv2_19"
  name: "conv2_19"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 5
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}




layer {
    bottom: "conv2_19"
    top: "conv2_19"
    name: "bn_conv2_19"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv2_19"
    top: "conv2_19"
    name: "scale_conv2_19"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv2_19"
    top: "conv2_19"
    name: "conv2_relu_19"
    type: "ReLU"
}

layer {
    bottom: "conv2_19"
    top: "pool2_19"
    name: "pool2_19"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 2
        stride: 2
        pool: MAX
    }
}



layer {
    bottom: "bone_patch_19"
    top: "bone_patch_19_quarter"
    name: "bone_patch_19_quarter"
    type: "CuDNNPooling"
    pooling_param {
        kernel_size: 4
        stride: 4
        pool: AVE
    }
}







layer {
  bottom: "bone_patch_19_quarter"
  top: "conv3_19"
  name: "conv3_19"
  type: "CuDNNConvolution"
  convolution_param {
    num_output: 8
    kernel_size: 3
    pad: 0
    stride: 1
    weight_filler {
     type: "xavier"
std: 0.01
    }
  
  }
}



layer {
    bottom: "conv3_19"
    top: "conv3_19"
    name: "bn_conv3_19"
    type: "BatchNorm"
    batch_norm_param {
        use_global_stats: false
    }
}

layer {
    bottom: "conv3_19"
    top: "conv3_19"
    name: "scale_conv3_19"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv3_19"
    top: "conv3_19"
    name: "conv3_relu_19"
    type: "ReLU"
}

layer {
  type: "Flatten"
  bottom: "pool1_19"
  top: "pool1_flat_19"
  name: "pool1_flat_19"
}



layer {
  type: "Flatten"
  bottom: "pool2_19"
  top: "pool2_flat_19"
  name: "pool2_flat_19"
}


layer {
  type: "Flatten"
  bottom: "conv3_19"
  top: "conv3_flat_19"
  name: "conv3_flat_19"
}

layer {
  type: "Concat"
  bottom: "pool1_flat_19"
  bottom: "pool2_flat_19"
  bottom: "conv3_flat_19"
 
  name: "fc_input_19"
  top: "fc_input_19"
}




layer {
  name: "FC1_19"
  type: "InnerProduct"
  bottom: "fc_input_19"
  top: "FC1_19"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}


layer {
  name: "batch_FC1norm1_19"
  type: "BatchNorm"
  bottom: "FC1_19"
  top: "batch_norm_FC1blob1_19"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_19"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_19"
  top: "batch_norm_FC1blob1_19"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_19"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_19"
  top: "FC1_relu_19"
}






#======FC branch for pred bone 0
#3x128
layer {
  name: "FC1_pred_19"
  type: "InnerProduct"
  bottom: "pred_bone_19"
  top: "FC1_pred_19"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC1norm1_pred_19"
  type: "BatchNorm"
  bottom: "FC1_pred_19"
  top: "batch_norm_FC1blob1_pred_19"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC1scale1_pred_19"
  type: "Scale"
  bottom: "batch_norm_FC1blob1_pred_19"
  top: "batch_norm_FC1blob1_pred_19"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC1_ReLU_pred_19"
  type: "ReLU"
  bottom: "batch_norm_FC1blob1_pred_19"
  top: "FC1_relu_pred_19"
}


#128x256

layer {
  name: "FC2_pred_19"
  type: "InnerProduct"
  bottom: "FC1_relu_pred_19"
  top: "FC2_pred_19"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC2norm1_pred_19"
  type: "BatchNorm"
  bottom: "FC2_pred_19"
  top: "batch_norm_FC2blob1_pred_19"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC2scale1_pred_19"
  type: "Scale"
  bottom: "batch_norm_FC2blob1_pred_19"
  top: "batch_norm_FC2blob1_pred_19"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC2_ReLU_pred_19"
  type: "ReLU"
  bottom: "batch_norm_FC2blob1_pred_19"
  top: "FC2_relu_pred_19"
}



#256x256

layer {
  name: "FC3_pred_19"
  type: "InnerProduct"
  bottom: "FC2_relu_pred_19"
  top: "FC3_pred_19"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC3norm1_pred_19"
  type: "BatchNorm"
  bottom: "FC3_pred_19"
  top: "batch_norm_FC3blob1_pred_19"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC3scale1_pred_19"
  type: "Scale"
  bottom: "batch_norm_FC3blob1_pred_19"
  top: "batch_norm_FC3blob1_pred_19"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC3_ReLU_pred_19"
  type: "ReLU"
  bottom: "batch_norm_FC3blob1_pred_19"
  top: "FC3_relu_pred_19"
}



#256x1024

layer {
  name: "FC4_pred_19"
  type: "InnerProduct"
  bottom: "FC3_relu_pred_19"
  top: "FC4_pred_19"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
       type: "xavier"
       std: 0.01
    }
  }
}



layer {
  name: "batch_FC4norm1_pred_19"
  type: "BatchNorm"
  bottom: "FC4_pred_19"
  top: "batch_norm_FC4blob1_pred_19"
  batch_norm_param {
    use_global_stats: false
    eps: 1e-05
  }
}
layer {
  name: "bn_FC4scale1_pred_19"
  type: "Scale"
  bottom: "batch_norm_FC4blob1_pred_19"
  top: "batch_norm_FC4blob1_pred_19"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "FC4_ReLU_pred_19"
  type: "ReLU"
  bottom: "batch_norm_FC4blob1_pred_19"
  top: "FC4_relu_pred_19"
}


#concat patch branch and pred branch 1024-d
layer {
  type: "Concat"
  bottom: "FC4_relu_pred_19"
  bottom: "FC1_relu_19"
  top: "concat_intermediate_19"
  name: "concat_intermediate_19"
}





layer {
  name: "pred_residual_19"
  type: "InnerProduct"
  bottom: "concat_intermediate_19"
  top: "pred_residual_19"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
       type: "gaussian"
       std: 0.01
    }
  }
}






layer {
  bottom: "pred_residual_0"
  bottom: "pred_residual_1"
  bottom: "pred_residual_2"  
  bottom: "pred_residual_3"
  bottom: "pred_residual_4"
  bottom: "pred_residual_5"
  bottom: "pred_residual_6"
  bottom: "pred_residual_7"
  bottom: "pred_residual_8"
  bottom: "pred_residual_9"
  bottom: "pred_residual_10"  
  bottom: "pred_residual_11"
  bottom: "pred_residual_12"
  bottom: "pred_residual_13"
  bottom: "pred_residual_14"
  bottom: "pred_residual_15"
  bottom: "pred_residual_16"
  bottom: "pred_residual_17"
  bottom: "pred_residual_18"
  bottom: "pred_residual_19"  
  
  top: "pred_residual"
  name: "pred_residual"
  type: "Concat"
}

layer {
  bottom: "pred_residual"
  bottom: "residual_bone"
  top: "resboneloss"
  name: "resboneloss"
  loss_weight: 0.0
  type: "EuclideanLoss"
}



#pred_bone + res_bone 
layer  {
  bottom: "pred_bone_nograd"
  #bottom: "residual_bone"
  bottom: "pred_residual"
  top: "pred_bone_ref"
  name: "pred_bone_ref"
  type: "Eltwise"
}


#------Generate neg wrist bone blob
layer {
  name: "neg_pred_wrist"
  type: "DeepHandModelGenNegWristBlob"
  bottom: "pred_joint_3d_global"
  #bottom: "aug_joint_3d_global"
  top: "neg_pred_wrist"
}



#-----Generate global wrist offset (translation)
layer {
  name: "wrist_offset"
  type: "DeepHandModelGenWristJointBlob"
  bottom: "neg_pred_wrist"
  top: "wrist_offset"
}





#ref joint 
layer {
  bottom: "pred_bone_ref"
  top: "pred_joint_ref_0"
  name: "pred_joint_ref_0"
  type: "DeepHandModelBone2Joint"
}


#-----Prediction of global joint locations
layer {
  name: "pred_joint_ref"
  type: "Eltwise"
  bottom: "pred_joint_ref_0"
  bottom: "wrist_offset"
  top: "pred_joint_ref"
  eltwise_param {
    operation: SUM
  }
}





#show mpjpe after refinement 
layer {
  bottom: "pred_joint_ref"
  bottom: "aug_joint_3d_global"
  top: "zmpjpe_ref"
  name: "mpjpe_ref"
  type: "Joint3DSquareRootLoss"
  loss_weight: 0.0
}


layer {
  top: "ada"
  name: "ada"
  type: "AdaptiveWeightEucLoss"
  bottom: "pred_joint_2d_int_scale"
  bottom: "aug_joint_2d_local"
  bottom: "pred_depth_int_scale_minus"
  bottom: "gt_depth"
  bottom: "pred_residual"
  bottom: "residual_bone"
  bottom: "pred_joint_ref"
  bottom: "aug_joint_3d_global"
  
  loss_weight: 1.0
  
}






#----- project to global 2d 
layer {
  name: "pred_joint_ref_2d"
  top: "pred_joint_ref_2d"
  bottom: "pred_joint_ref"
  type: "DeepHandModelPinholeCameraOrigin"
}



#----- project within bbx 
layer {
  name: "pred_joint_ref_2d_local"
  top: "pred_joint_ref_2d_local"
  bottom: "pred_joint_ref_2d"
  bottom: "ext_bbx_x1"
  bottom: "ext_bbx_y1"
  bottom: "ext_bbx_x2"
  bottom: "ext_bbx_y2"
  type: "DeepHandModelProjectionGlobal2Local"
}






#------Visualize predicted joint on the map
layer {
  name: "vis_pred_joint"
  type: "DeepHandModelOutputJointOnSkeletonMap"
  
  bottom: "depth"  
  bottom: "aug_depth_img"
  bottom: "image_index"
  bottom: "pred_joint_ref_2d_local"
  bottom: "aug_joint_2d_local"
  
  deep_hand_model_output_joint_on_skeleton_param {
	use_raw_rgb_image: false
	read_from_disk: false
	
	show_gt: false
	save_path: "../../test/tretrainpatchrefdv/"
	save_size: 256
	
	skeleton_size: 256
	load_skeleton: true
	alpha: 255
	beta: 0
  }
  
}




layer {
  type: "OutputBlob"
  bottom: "pred_joint_ref"
  bottom: "image_index"
  output_blob_param {
      save_path: "../../test/retrainpatchrefdv/"
	  blob_name: "p"
	  if_per_section_output: true
	  per_section_row_num: 21
	  per_section_col_num: 3
   }
}